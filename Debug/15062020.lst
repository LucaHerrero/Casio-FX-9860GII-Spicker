SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Luca\Desktop\Abschlussprüfung\15062020.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c     1    #include "fxlib.h"
      15062020.c     2    #include "stdio.h"
      15062020.c     3    
      15062020.c     4    #define TRUE 1
      15062020.c     5    #define FALSE 0
      15062020.c     6    
      15062020.c     7    int drmCheck = 0;
      15062020.c     8    
      15062020.c     9    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
    00000000 4F22                   STS.L       PR,@-R15
      15062020.c    10    {
      15062020.c    11        Bdisp_AllClr_DDVRAM();
    00000002 D307                   MOV.L       L1223+2,R3 ; _Bdisp_AllClr_DDVRAM
    00000004 430B                   JSR         @R3
    00000006 0009                   NOP
      15062020.c    12        drm();
    00000008 B0B0                   BSR         _drm
    0000000A 0009                   NOP
      15062020.c    13        if (drmCheck == 1){
    0000000C D305                   MOV.L       L1223+6,R3 ; _drmCheck
    0000000E 6032                   MOV.L       @R3,R0
    00000010 8801                   CMP/EQ      #1,R0
    00000012 8B01                   BF          L1041
      15062020.c    14            firstMenu();
    00000014 B008                   BSR         _firstMenu
    00000016 0009                   NOP
    00000018              L1041:                            
      15062020.c    15        }
      15062020.c    16        return 1;
      15062020.c    17    }
    00000018 4F26                   LDS.L       @R15+,PR
    0000001A 000B                   RTS
    0000001C E001                   MOV         #1,R0
    0000001E              L1223:                            
    0000001E 0000                   .DATA.W     0
    00000020 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000024 <00000000>             .DATA.L     _drmCheck
      15062020.c    18    int firstMenu() {
    00000028              _firstMenu:                      ; function: firstMenu
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
      15062020.c    19        unsigned int i;
      15062020.c    20        unsigned int auswahl = 3;
      15062020.c    21        unsigned int menuItemsX = 2;
      15062020.c    22        unsigned int menuItemsY = 3;
      15062020.c    23        unsigned int menuItemsNbr = 6;
      15062020.c    24        unsigned char * menuItems[] = {
      15062020.c    25            "Lernfeld 1",
      15062020.c    26            "Lernfeld 2",
      15062020.c    27            "PC/Netzwerktechnik",
      15062020.c    28            "Test4",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    29            "Test5",
      15062020.c    30            "Test6"
      15062020.c    31        };
    00000028 D242                   MOV.L       L1224+8,R2 ; L352
    0000002A 7FE4                   ADD         #-28,R15
    0000002C D342                   MOV.L       L1224+12,R3; __quick_evn_mvn
    0000002E EE03                   MOV         #3,R14
    00000030 E806                   MOV         #6,R8
    00000032 61F3                   MOV         R15,R1
    00000034 7104                   ADD         #4,R1
    00000036 430B                   JSR         @R3
    00000038 E018                   MOV         #24,R0
      15062020.c    32        // TITLE 
      15062020.c    33        locate(1,1);
    0000003A E501                   MOV         #1,R5
    0000003C DD3F                   MOV.L       L1224+16,R13; _locate
    0000003E 4D0B                   JSR         @R13
    00000040 6453                   MOV         R5,R4
      15062020.c    34        Print((unsigned char*)"Spicker :D");  
    00000042 DC3F                   MOV.L       L1224+20,R12; _Print
    00000044 D43F                   MOV.L       L1224+24,R4; L359
    00000046 4C0B                   JSR         @R12
    00000048 0009                   NOP
      15062020.c    35        // Menu Items
      15062020.c    36        for(i=0; i < menuItemsNbr; i=i+1){
    0000004A EB00                   MOV         #0,R11
    0000004C 6AF3                   MOV         R15,R10
    0000004E 7A04                   ADD         #4,R10
    00000050 E903                   MOV         #3,R9
    00000052              L1044:                            
      15062020.c    37            locate(menuItemsX, menuItemsY+i);
    00000052 6593                   MOV         R9,R5
    00000054 4D0B                   JSR         @R13
    00000056 E402                   MOV         #2,R4
      15062020.c    38            Print(menuItems[i]);
    00000058 4C0B                   JSR         @R12
    0000005A 64A6                   MOV.L       @R10+,R4
    0000005C 7B01                   ADD         #1,R11
    0000005E 3B82                   CMP/HS      R8,R11
    00000060 8FF7                   BF/S        L1044
    00000062 7901                   ADD         #1,R9
    00000064 9862                   MOV.W       L1224,R8   ; H'7534
    00000066 6983                   MOV         R8,R9
    00000068 DA37                   MOV.L       L1224+28,R10; _Bdisp_AllClr_DDVRAM
    0000006A 79FE                   ADD         #-2,R9
    0000006C DB37                   MOV.L       L1224+32,R11; L366
      15062020.c    39        };
      15062020.c    40       
      15062020.c    41        // Cursor    
      15062020.c    42        while (1){
    0000006E              L1046:                            
      15062020.c    43            unsigned int key;
      15062020.c    44            locate(1,auswahl);
    0000006E 65E3                   MOV         R14,R5
    00000070 4D0B                   JSR         @R13
    00000072 E401                   MOV         #1,R4
      15062020.c    45            Print((unsigned char*)">");       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000074 D436                   MOV.L       L1224+36,R4; L363
    00000076 4C0B                   JSR         @R12
    00000078 0009                   NOP
      15062020.c    46            GetKey(&key);
    0000007A D236                   MOV.L       L1224+40,R2; _GetKey
    0000007C 420B                   JSR         @R2
    0000007E 64F3                   MOV         R15,R4
      15062020.c    47            if(KEY_CTRL_UP == key) {
    00000080 9355                   MOV.W       L1224+2,R3 ; H'7542
    00000082 62F2                   MOV.L       @R15,R2
    00000084 3230                   CMP/EQ      R3,R2
    00000086 8B0E                   BF          L1047
      15062020.c    48                if (auswahl == 3) {
    00000088 60E3                   MOV         R14,R0
    0000008A 8803                   CMP/EQ      #3,R0
    0000008C 8B05                   BF          L1048
      15062020.c    49                    locate(1,auswahl);
    0000008E 65E3                   MOV         R14,R5
    00000090 4D0B                   JSR         @R13
    00000092 E401                   MOV         #1,R4
      15062020.c    50                    Print((unsigned char*)" ");
    00000094 4C0B                   JSR         @R12
    00000096 64B3                   MOV         R11,R4
      15062020.c    51                    auswahl = auswahl + 6;
    00000098 7E06                   ADD         #6,R14
    0000009A              L1048:                            
      15062020.c    52                }
      15062020.c    53                locate(1,auswahl);
    0000009A 65E3                   MOV         R14,R5
    0000009C 4D0B                   JSR         @R13
    0000009E E401                   MOV         #1,R4
      15062020.c    54                Print((unsigned char*)" ");
    000000A0 4C0B                   JSR         @R12
    000000A2 64B3                   MOV         R11,R4
      15062020.c    55                auswahl = auswahl - 1;
    000000A4 7EFF                   ADD         #-1,R14
    000000A6              L1047:                            
      15062020.c    56            };
      15062020.c    57            if(KEY_CTRL_DOWN == key) {
    000000A6 9343                   MOV.W       L1224+4,R3 ; H'7547
    000000A8 62F2                   MOV.L       @R15,R2
    000000AA 3230                   CMP/EQ      R3,R2
    000000AC 8B0E                   BF          L1049
      15062020.c    58                if (auswahl == 8) {
    000000AE 60E3                   MOV         R14,R0
    000000B0 8808                   CMP/EQ      #8,R0
    000000B2 8B05                   BF          L1050
      15062020.c    59                    locate(1,auswahl);
    000000B4 65E3                   MOV         R14,R5
    000000B6 4D0B                   JSR         @R13
    000000B8 E401                   MOV         #1,R4
      15062020.c    60                    Print((unsigned char*)" ");
    000000BA 4C0B                   JSR         @R12
    000000BC 64B3                   MOV         R11,R4
      15062020.c    61                    auswahl = auswahl - 6;
    000000BE 7EFA                   ADD         #-6,R14
    000000C0              L1050:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    62                }
      15062020.c    63                locate(1,auswahl);
    000000C0 65E3                   MOV         R14,R5
    000000C2 4D0B                   JSR         @R13
    000000C4 E401                   MOV         #1,R4
      15062020.c    64                Print((unsigned char*)" ");
    000000C6 4C0B                   JSR         @R12
    000000C8 64B3                   MOV         R11,R4
      15062020.c    65                auswahl = auswahl + 1;
    000000CA 7E01                   ADD         #1,R14
    000000CC              L1049:                            
      15062020.c    66            };
      15062020.c    67            if (KEY_CTRL_EXE == key) {
    000000CC 63F2                   MOV.L       @R15,R3
    000000CE 3380                   CMP/EQ      R8,R3
    000000D0 8B27                   BF          L1051
      15062020.c    68                if (auswahl == 3) {
    000000D2 60E3                   MOV         R14,R0
    000000D4 8803                   CMP/EQ      #3,R0
    000000D6 8B03                   BF          L1052
      15062020.c    69                    Bdisp_AllClr_DDVRAM();
    000000D8 4A0B                   JSR         @R10
    000000DA 0009                   NOP
      15062020.c    70                    lf1menu();
    000000DC B156                   BSR         _lf1menu
    000000DE 0009                   NOP
    000000E0              L1052:                            
      15062020.c    71                }
      15062020.c    72                if (auswahl == 4) {
    000000E0 60E3                   MOV         R14,R0
    000000E2 8804                   CMP/EQ      #4,R0
    000000E4 8B03                   BF          L1053
      15062020.c    73                    Bdisp_AllClr_DDVRAM();
    000000E6 4A0B                   JSR         @R10
    000000E8 0009                   NOP
      15062020.c    74                    lf2menu();
    000000EA B64F                   BSR         _lf2menu
    000000EC 0009                   NOP
    000000EE              L1053:                            
      15062020.c    75                }
      15062020.c    76                if (auswahl == 5) {
    000000EE 60E3                   MOV         R14,R0
    000000F0 8805                   CMP/EQ      #5,R0
    000000F2 8B04                   BF          L1054
      15062020.c    77                    Bdisp_AllClr_DDVRAM();
    000000F4 4A0B                   JSR         @R10
    000000F6 0009                   NOP
      15062020.c    78                    lf3list();
    000000F8 D217                   MOV.L       L1224+44,R2; _lf3list
    000000FA 420B                   JSR         @R2
    000000FC 0009                   NOP
    000000FE              L1054:                            
      15062020.c    79                }
      15062020.c    80                if (auswahl == 6) {
    000000FE 60E3                   MOV         R14,R0
    00000100 8806                   CMP/EQ      #6,R0
    00000102 8B05                   BF          L1055




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    81                    locate(8,1);
    00000104 E501                   MOV         #1,R5
    00000106 4D0B                   JSR         @R13
    00000108 E408                   MOV         #8,R4
      15062020.c    82                    Print((unsigned char*)"TEST4");
    0000010A D414                   MOV.L       L1224+48,R4; L377
    0000010C 4C0B                   JSR         @R12
    0000010E 0009                   NOP
    00000110              L1055:                            
      15062020.c    83                }
      15062020.c    84                if (auswahl == 7) {
    00000110 60E3                   MOV         R14,R0
    00000112 8807                   CMP/EQ      #7,R0
    00000114 8B05                   BF          L1051
      15062020.c    85                    locate(8,1);
    00000116 E501                   MOV         #1,R5
    00000118 4D0B                   JSR         @R13
    0000011A E408                   MOV         #8,R4
      15062020.c    86                    Print((unsigned char*)"TEST5");
    0000011C D410                   MOV.L       L1224+52,R4; L379
    0000011E 4C0B                   JSR         @R12
    00000120 0009                   NOP
    00000122              L1051:                            
      15062020.c    87                }
      15062020.c    88            };
      15062020.c    89            if (KEY_CTRL_EXIT == key) {
    00000122 63F2                   MOV.L       @R15,R3
    00000124 3390                   CMP/EQ      R9,R3
    00000126 8BA2                   BF          L1046
      15062020.c    90                Bdisp_AllClr_DDVRAM();
    00000128 A01C                   BRA         L1220
    0000012A 0009                   NOP
    0000012C              L1224:                            
    0000012C 7534                   .DATA.W     H'7534
    0000012E 7542                   .DATA.W     H'7542
    00000130 7547                   .DATA.W     H'7547
    00000132 0000                   .DATA.W     0
    00000134 <00000000>             .DATA.L     L352
    00000138 <00000000>             .DATA.L     __quick_evn_mvn
    0000013C <00000000>             .DATA.L     _locate
    00000140 <00000000>             .DATA.L     _Print
    00000144 <00000000>             .DATA.L     L359
    00000148 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000014C <00000000>             .DATA.L     L366
    00000150 <00000000>             .DATA.L     L363
    00000154 <00000000>             .DATA.L     _GetKey
    00000158 <00000000>             .DATA.L     _lf3list
    0000015C <00000000>             .DATA.L     L377
    00000160 <00000000>             .DATA.L     L379
    00000164              L1220:                            
    00000164 4A0B                   JSR         @R10
    00000166 0009                   NOP
    00000168 AF81                   BRA         L1046
    0000016A 0009                   NOP
      15062020.c    91            }
      15062020.c    92       }
      15062020.c    93    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    94    
      15062020.c    95    // DRM System
      15062020.c    96    int drm() {
    0000016C              _drm:                            ; function: drm
                                                           ; frame size=64
    0000016C 2FE6                   MOV.L       R14,@-R15
      15062020.c    97        unsigned int key;
      15062020.c    98        int selectedNumber = 0;
      15062020.c    99        int corsur = 7;
      15062020.c   100        int eingaben[4];
      15062020.c   101        locate(10,2);
    0000016E E502                   MOV         #2,R5
    00000170 2FD6                   MOV.L       R13,@-R15
    00000172 EE00                   MOV         #0,R14
    00000174 2FC6                   MOV.L       R12,@-R15
    00000176 2FB6                   MOV.L       R11,@-R15
    00000178 2FA6                   MOV.L       R10,@-R15
    0000017A 2F96                   MOV.L       R9,@-R15
    0000017C 2F86                   MOV.L       R8,@-R15
    0000017E E807                   MOV         #7,R8
    00000180 DC67                   MOV.L       L1225,R12  ; _locate
    00000182 6D83                   MOV         R8,R13
    00000184 4F22                   STS.L       PR,@-R15
    00000186 7FE0                   ADD         #-32,R15
    00000188 4C0B                   JSR         @R12
    0000018A E40A                   MOV         #10,R4
      15062020.c   102        Print((unsigned char*)"DRM");
    0000018C DB65                   MOV.L       L1225+4,R11; _Print
    0000018E D466                   MOV.L       L1225+8,R4 ; L386
    00000190 4B0B                   JSR         @R11
    00000192 0009                   NOP
      15062020.c   103        locate(5,3);
    00000194 E503                   MOV         #3,R5
    00000196 4C0B                   JSR         @R12
    00000198 E405                   MOV         #5,R4
      15062020.c   104        Print((unsigned char*)"Code eingeben");
    0000019A D464                   MOV.L       L1225+12,R4; L387
    0000019C 4B0B                   JSR         @R11
    0000019E 0009                   NOP
      15062020.c   105        locate(6,5);
    000001A0 E505                   MOV         #5,R5
    000001A2 4C0B                   JSR         @R12
    000001A4 E406                   MOV         #6,R4
      15062020.c   106        Print((unsigned char*)"[ ] [ ] [ ]");
    000001A6 D462                   MOV.L       L1225+16,R4; L388
    000001A8 4B0B                   JSR         @R11
    000001AA 0009                   NOP
    000001AC 6AF3                   MOV         R15,R10
    000001AE 7A10                   ADD         #16,R10
    000001B0 63A3                   MOV         R10,R3
    000001B2 6233                   MOV         R3,R2
    000001B4 1F33                   MOV.L       R3,@(12,R15)
    000001B6 E901                   MOV         #1,R9
    000001B8 7204                   ADD         #4,R2
    000001BA 6133                   MOV         R3,R1
    000001BC 1F21                   MOV.L       R2,@(4,R15)
    000001BE 7108                   ADD         #8,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C0 1F12                   MOV.L       R1,@(8,R15)
      15062020.c   107        while (1)
    000001C2              L1059:                            
      15062020.c   108        {
      15062020.c   109            GetKey(&key);
    000001C2 D25C                   MOV.L       L1225+20,R2; _GetKey
    000001C4 420B                   JSR         @R2
    000001C6 64F3                   MOV         R15,R4
      15062020.c   110            if (KEY_CHAR_0 == key){
    000001C8 60F2                   MOV.L       @R15,R0
    000001CA 8830                   CMP/EQ      #48,R0
    000001CC 8B0B                   BF          L1060
      15062020.c   111                eingaben[selectedNumber] = 0;
    000001CE 60E3                   MOV         R14,R0
    000001D0 4008                   SHLL2       R0
    000001D2 E300                   MOV         #0,R3
    000001D4 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   112                locate(corsur, 5);
    000001D6 E505                   MOV         #5,R5
    000001D8 4C0B                   JSR         @R12
    000001DA 64D3                   MOV         R13,R4
      15062020.c   113                Print((unsigned char*)"0");
    000001DC D456                   MOV.L       L1225+24,R4; L391
    000001DE 4B0B                   JSR         @R11
    000001E0 0009                   NOP
      15062020.c   114                selectedNumber = selectedNumber + 1;
    000001E2 7E01                   ADD         #1,R14
      15062020.c   115                corsur = corsur + 4;
    000001E4 7D04                   ADD         #4,R13
    000001E6              L1060:                            
      15062020.c   116            }
      15062020.c   117            if (KEY_CHAR_1 == key){
    000001E6 60F2                   MOV.L       @R15,R0
    000001E8 8831                   CMP/EQ      #49,R0
    000001EA 8B0A                   BF          L1061
      15062020.c   118                eingaben[selectedNumber] = 1;
    000001EC 60E3                   MOV         R14,R0
    000001EE 4008                   SHLL2       R0
    000001F0 0A96                   MOV.L       R9,@(R0,R10)
      15062020.c   119                locate(corsur, 5);
    000001F2 E505                   MOV         #5,R5
    000001F4 4C0B                   JSR         @R12
    000001F6 64D3                   MOV         R13,R4
      15062020.c   120                Print((unsigned char*)"1");
    000001F8 D450                   MOV.L       L1225+28,R4; L393
    000001FA 4B0B                   JSR         @R11
    000001FC 0009                   NOP
      15062020.c   121                selectedNumber = selectedNumber + 1;
    000001FE 7E01                   ADD         #1,R14
      15062020.c   122                corsur = corsur + 4;
    00000200 7D04                   ADD         #4,R13
    00000202              L1061:                            
      15062020.c   123            }
      15062020.c   124            if (KEY_CHAR_2 == key){
    00000202 60F2                   MOV.L       @R15,R0
    00000204 8832                   CMP/EQ      #50,R0
    00000206 8B0B                   BF          L1062




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   125                eingaben[selectedNumber] = 2;
    00000208 60E3                   MOV         R14,R0
    0000020A 4008                   SHLL2       R0
    0000020C E302                   MOV         #2,R3
      15062020.c   126                locate(corsur, 5);
    0000020E E505                   MOV         #5,R5
    00000210 0A36                   MOV.L       R3,@(R0,R10)
    00000212 4C0B                   JSR         @R12
    00000214 64D3                   MOV         R13,R4
      15062020.c   127                Print((unsigned char*)"2");
    00000216 D44A                   MOV.L       L1225+32,R4; L395
    00000218 4B0B                   JSR         @R11
    0000021A 0009                   NOP
      15062020.c   128                selectedNumber = selectedNumber + 1;
    0000021C 7E01                   ADD         #1,R14
      15062020.c   129                corsur = corsur + 4;
    0000021E 7D04                   ADD         #4,R13
    00000220              L1062:                            
      15062020.c   130            }
      15062020.c   131            if (KEY_CHAR_3 == key){
    00000220 60F2                   MOV.L       @R15,R0
    00000222 8833                   CMP/EQ      #51,R0
    00000224 8B0B                   BF          L1063
      15062020.c   132                eingaben[selectedNumber] = 3;
    00000226 60E3                   MOV         R14,R0
    00000228 4008                   SHLL2       R0
    0000022A E303                   MOV         #3,R3
    0000022C 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   133                locate(corsur, 5);
    0000022E E505                   MOV         #5,R5
    00000230 4C0B                   JSR         @R12
    00000232 64D3                   MOV         R13,R4
      15062020.c   134                Print((unsigned char*)"3");
    00000234 D443                   MOV.L       L1225+36,R4; L397
    00000236 4B0B                   JSR         @R11
    00000238 0009                   NOP
      15062020.c   135                selectedNumber = selectedNumber + 1;
    0000023A 7E01                   ADD         #1,R14
      15062020.c   136                corsur = corsur + 4;
    0000023C 7D04                   ADD         #4,R13
    0000023E              L1063:                            
      15062020.c   137            }
      15062020.c   138            if (KEY_CHAR_4 == key){
    0000023E 60F2                   MOV.L       @R15,R0
    00000240 8834                   CMP/EQ      #52,R0
    00000242 8B0B                   BF          L1064
      15062020.c   139                eingaben[selectedNumber] = 4;
    00000244 60E3                   MOV         R14,R0
    00000246 4008                   SHLL2       R0
    00000248 E304                   MOV         #4,R3
      15062020.c   140                locate(corsur, 5);
    0000024A E505                   MOV         #5,R5
    0000024C 0A36                   MOV.L       R3,@(R0,R10)
    0000024E 4C0B                   JSR         @R12
    00000250 64D3                   MOV         R13,R4
      15062020.c   141                Print((unsigned char*)"4");
    00000252 D43D                   MOV.L       L1225+40,R4; L399




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000254 4B0B                   JSR         @R11
    00000256 0009                   NOP
      15062020.c   142                selectedNumber = selectedNumber + 1;
    00000258 7E01                   ADD         #1,R14
      15062020.c   143                corsur = corsur + 4;
    0000025A 7D04                   ADD         #4,R13
    0000025C              L1064:                            
      15062020.c   144            }
      15062020.c   145            if (KEY_CHAR_5 == key){
    0000025C 60F2                   MOV.L       @R15,R0
    0000025E 8835                   CMP/EQ      #53,R0
    00000260 8B0B                   BF          L1065
      15062020.c   146                eingaben[selectedNumber] = 5;
    00000262 60E3                   MOV         R14,R0
    00000264 4008                   SHLL2       R0
    00000266 E305                   MOV         #5,R3
    00000268 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   147                locate(corsur, 5);
    0000026A 6533                   MOV         R3,R5
    0000026C 4C0B                   JSR         @R12
    0000026E 64D3                   MOV         R13,R4
      15062020.c   148                Print((unsigned char*)"5");
    00000270 D436                   MOV.L       L1225+44,R4; L401
    00000272 4B0B                   JSR         @R11
    00000274 0009                   NOP
      15062020.c   149                selectedNumber = selectedNumber + 1;
    00000276 7E01                   ADD         #1,R14
      15062020.c   150                corsur = corsur + 4;
    00000278 7D04                   ADD         #4,R13
    0000027A              L1065:                            
      15062020.c   151            }
      15062020.c   152            if (KEY_CHAR_6 == key){
    0000027A 60F2                   MOV.L       @R15,R0
    0000027C 8836                   CMP/EQ      #54,R0
    0000027E 8B0B                   BF          L1066
      15062020.c   153                eingaben[selectedNumber] = 6;
    00000280 60E3                   MOV         R14,R0
    00000282 4008                   SHLL2       R0
    00000284 E306                   MOV         #6,R3
      15062020.c   154                locate(corsur, 5);
    00000286 E505                   MOV         #5,R5
    00000288 0A36                   MOV.L       R3,@(R0,R10)
    0000028A 4C0B                   JSR         @R12
    0000028C 64D3                   MOV         R13,R4
      15062020.c   155                Print((unsigned char*)"6");
    0000028E D430                   MOV.L       L1225+48,R4; L403
    00000290 4B0B                   JSR         @R11
    00000292 0009                   NOP
      15062020.c   156                selectedNumber = selectedNumber + 1;
    00000294 7E01                   ADD         #1,R14
      15062020.c   157                corsur = corsur + 4;
    00000296 7D04                   ADD         #4,R13
    00000298              L1066:                            
      15062020.c   158            }
      15062020.c   159            if (KEY_CHAR_7 == key){
    00000298 60F2                   MOV.L       @R15,R0
    0000029A 8837                   CMP/EQ      #55,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000029C 8B0A                   BF          L1067
      15062020.c   160                eingaben[selectedNumber] = 7;
    0000029E 60E3                   MOV         R14,R0
    000002A0 4008                   SHLL2       R0
      15062020.c   161                locate(corsur, 5);
    000002A2 E505                   MOV         #5,R5
    000002A4 0A86                   MOV.L       R8,@(R0,R10)
    000002A6 4C0B                   JSR         @R12
    000002A8 64D3                   MOV         R13,R4
      15062020.c   162                Print((unsigned char*)"7");
    000002AA D42A                   MOV.L       L1225+52,R4; L405
    000002AC 4B0B                   JSR         @R11
    000002AE 0009                   NOP
      15062020.c   163                selectedNumber = selectedNumber + 1;
    000002B0 7E01                   ADD         #1,R14
      15062020.c   164                corsur = corsur + 4;
    000002B2 7D04                   ADD         #4,R13
    000002B4              L1067:                            
      15062020.c   165            }
      15062020.c   166            if (KEY_CHAR_8 == key){
    000002B4 60F2                   MOV.L       @R15,R0
    000002B6 8838                   CMP/EQ      #56,R0
    000002B8 8B0B                   BF          L1068
      15062020.c   167                eingaben[selectedNumber] = 8;
    000002BA 60E3                   MOV         R14,R0
    000002BC 4008                   SHLL2       R0
    000002BE E308                   MOV         #8,R3
    000002C0 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   168                locate(corsur, 5);
    000002C2 E505                   MOV         #5,R5
    000002C4 4C0B                   JSR         @R12
    000002C6 64D3                   MOV         R13,R4
      15062020.c   169                Print((unsigned char*)"8");
    000002C8 D423                   MOV.L       L1225+56,R4; L407
    000002CA 4B0B                   JSR         @R11
    000002CC 0009                   NOP
      15062020.c   170                selectedNumber = selectedNumber + 1;
    000002CE 7E01                   ADD         #1,R14
      15062020.c   171                corsur = corsur + 4;
    000002D0 7D04                   ADD         #4,R13
    000002D2              L1068:                            
      15062020.c   172            }
      15062020.c   173            if (KEY_CHAR_9 == key){
    000002D2 60F2                   MOV.L       @R15,R0
    000002D4 8839                   CMP/EQ      #57,R0
    000002D6 8B0B                   BF          L1069
      15062020.c   174                eingaben[selectedNumber] = 9;
    000002D8 60E3                   MOV         R14,R0
    000002DA 4008                   SHLL2       R0
    000002DC E309                   MOV         #9,R3
      15062020.c   175                locate(corsur, 5);
    000002DE E505                   MOV         #5,R5
    000002E0 0A36                   MOV.L       R3,@(R0,R10)
    000002E2 4C0B                   JSR         @R12
    000002E4 64D3                   MOV         R13,R4
      15062020.c   176                Print((unsigned char*)"9");
    000002E6 D41D                   MOV.L       L1225+60,R4; L409




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E8 4B0B                   JSR         @R11
    000002EA 0009                   NOP
      15062020.c   177                selectedNumber = selectedNumber + 1;
    000002EC 7E01                   ADD         #1,R14
      15062020.c   178                corsur = corsur + 4;
    000002EE 7D04                   ADD         #4,R13
    000002F0              L1069:                            
      15062020.c   179            }
      15062020.c   180            if (selectedNumber == 3){
    000002F0 60E3                   MOV         R14,R0
    000002F2 8803                   CMP/EQ      #3,R0
    000002F4 8901                   BT          L1226
    000002F6 AF64                   BRA         L1059
    000002F8 0009                   NOP
    000002FA              L1226:                            
      15062020.c   181                if (eingaben[0] == 6) {
    000002FA 50F3                   MOV.L       @(12,R15),R0
    000002FC 6002                   MOV.L       @R0,R0
    000002FE 8806                   CMP/EQ      #6,R0
    00000300 8B09                   BF          L1071
      15062020.c   182                    if (eingaben[1] == 8) {
    00000302 50F1                   MOV.L       @(4,R15),R0
    00000304 6002                   MOV.L       @R0,R0
    00000306 8808                   CMP/EQ      #8,R0
    00000308 8B05                   BF          L1071
      15062020.c   183                        if (eingaben[2] == 4) {
    0000030A 50F2                   MOV.L       @(8,R15),R0
    0000030C 6002                   MOV.L       @R0,R0
    0000030E 8804                   CMP/EQ      #4,R0
    00000310 8B01                   BF          L1071
      15062020.c   184                            drmCheck = 1;
    00000312 D213                   MOV.L       L1225+64,R2; _drmCheck
    00000314 2292                   MOV.L       R9,@R2
    00000316              L1071:                            
      15062020.c   185                        }
      15062020.c   186                    }
      15062020.c   187                }
      15062020.c   188                Bdisp_AllClr_DDVRAM();
    00000316 D313                   MOV.L       L1225+68,R3; _Bdisp_AllClr_DDVRAM
    00000318 430B                   JSR         @R3
    0000031A 0009                   NOP
      15062020.c   189                Sleep(300);
    0000031C A024                   BRA         L1221
    0000031E 0009                   NOP
    00000320              L1225:                            
    00000320 <00000000>             .DATA.L     _locate
    00000324 <00000000>             .DATA.L     _Print
    00000328 <00000000>             .DATA.L     L386
    0000032C <00000000>             .DATA.L     L387
    00000330 <00000000>             .DATA.L     L388
    00000334 <00000000>             .DATA.L     _GetKey
    00000338 <00000000>             .DATA.L     L391
    0000033C <00000000>             .DATA.L     L393
    00000340 <00000000>             .DATA.L     L395
    00000344 <00000000>             .DATA.L     L397
    00000348 <00000000>             .DATA.L     L399
    0000034C <00000000>             .DATA.L     L401




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000350 <00000000>             .DATA.L     L403
    00000354 <00000000>             .DATA.L     L405
    00000358 <00000000>             .DATA.L     L407
    0000035C <00000000>             .DATA.L     L409
    00000360 <00000000>             .DATA.L     _drmCheck
    00000364 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000368              L1221:                            
    00000368 940D                   MOV.W       L1227,R4   ; H'012C
    0000036A D207                   MOV.L       L1227+2,R2 ; _Sleep
    0000036C 420B                   JSR         @R2
    0000036E 0009                   NOP
      15062020.c   190                return(0);
    00000370 E000                   MOV         #0,R0
      15062020.c   191            }
      15062020.c   192        }
      15062020.c   193    }
    00000372 7F20                   ADD         #32,R15
    00000374 4F26                   LDS.L       @R15+,PR
    00000376 68F6                   MOV.L       @R15+,R8
    00000378 69F6                   MOV.L       @R15+,R9
    0000037A 6AF6                   MOV.L       @R15+,R10
    0000037C 6BF6                   MOV.L       @R15+,R11
    0000037E 6CF6                   MOV.L       @R15+,R12
    00000380 6DF6                   MOV.L       @R15+,R13
    00000382 000B                   RTS
    00000384 6EF6                   MOV.L       @R15+,R14
    00000386              L1227:                            
    00000386 012C                   .DATA.W     H'012C
    00000388 <00000000>             .DATA.L     _Sleep
      15062020.c   194    
      15062020.c   195    
      15062020.c   196    // Lernfeld 1
      15062020.c   197    int lf1menu() {
    0000038C              _lf1menu:                        ; function: lf1menu
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
      15062020.c   198        unsigned int i;
      15062020.c   199        unsigned int auswahl = 3;
      15062020.c   200        unsigned int menuItemsX = 2;
      15062020.c   201        unsigned int menuItemsY = 3;
      15062020.c   202        unsigned int menuItemsNbr = 5;
      15062020.c   203        unsigned char * menuItems[] = {
      15062020.c   204            "Okonomisches Prinzip",
      15062020.c   205            "Rechtsformen",
      15062020.c   206            "Gewinnverteilung",
      15062020.c   207            "Haftung, Infos",
      15062020.c   208            "Preisbildungsprozes"
      15062020.c   209        };
    0000038C D241                   MOV.L       L1228+8,R2 ; L421
    0000038E 7FE4                   ADD         #-28,R15
    00000390 EE03                   MOV         #3,R14
    00000392 E305                   MOV         #5,R3
    00000394 1F31                   MOV.L       R3,@(4,R15)
    00000396 61F3                   MOV         R15,R1
    00000398 D33F                   MOV.L       L1228+12,R3; __quick_odd_mvn
    0000039A 7108                   ADD         #8,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039C 430B                   JSR         @R3
    0000039E E014                   MOV         #20,R0
      15062020.c   210        Bdisp_AllClr_DDVRAM();
    000003A0 DB3E                   MOV.L       L1228+16,R11; _Bdisp_AllClr_DDVRAM
    000003A2 4B0B                   JSR         @R11
    000003A4 0009                   NOP
      15062020.c   211        // TITLE 
      15062020.c   212        locate(1,1);
    000003A6 E501                   MOV         #1,R5
    000003A8 DC3D                   MOV.L       L1228+20,R12; _locate
    000003AA 4C0B                   JSR         @R12
    000003AC 6453                   MOV         R5,R4
      15062020.c   213        Print((unsigned char*)"Lernfeld 1");  
    000003AE DD3D                   MOV.L       L1228+24,R13; _Print
    000003B0 D43D                   MOV.L       L1228+28,R4; L353
    000003B2 4D0B                   JSR         @R13
    000003B4 0009                   NOP
      15062020.c   214        // Menu Items
      15062020.c   215        for(i=0; i < menuItemsNbr; i=i+1){
    000003B6 EA00                   MOV         #0,R10
    000003B8 69F3                   MOV         R15,R9
    000003BA 7908                   ADD         #8,R9
    000003BC E803                   MOV         #3,R8
    000003BE              L1076:                            
      15062020.c   216            locate(menuItemsX, menuItemsY+i);
    000003BE 6583                   MOV         R8,R5
    000003C0 4C0B                   JSR         @R12
    000003C2 E402                   MOV         #2,R4
      15062020.c   217            Print(menuItems[i]);
    000003C4 4D0B                   JSR         @R13
    000003C6 6496                   MOV.L       @R9+,R4
    000003C8 52F1                   MOV.L       @(4,R15),R2
    000003CA 7A01                   ADD         #1,R10
    000003CC 3A22                   CMP/HS      R2,R10
    000003CE 8FF6                   BF/S        L1076
    000003D0 7801                   ADD         #1,R8
    000003D2 985B                   MOV.W       L1228,R8   ; H'7547
    000003D4 DA35                   MOV.L       L1228+32,R10; L366
    000003D6 6983                   MOV         R8,R9
    000003D8 79FB                   ADD         #-5,R9
      15062020.c   218        };
      15062020.c   219       
      15062020.c   220        // Cursor    
      15062020.c   221        while (1){
    000003DA              L1078:                            
      15062020.c   222            unsigned int key;
      15062020.c   223            locate(1,auswahl);
    000003DA 65E3                   MOV         R14,R5
    000003DC 4C0B                   JSR         @R12
    000003DE E401                   MOV         #1,R4
      15062020.c   224            Print((unsigned char*)">");       
    000003E0 D433                   MOV.L       L1228+36,R4; L363
    000003E2 4D0B                   JSR         @R13
    000003E4 0009                   NOP
      15062020.c   225            GetKey(&key);
    000003E6 D333                   MOV.L       L1228+40,R3; _GetKey
    000003E8 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003EA 64F3                   MOV         R15,R4
      15062020.c   226            if(KEY_CTRL_UP == key) {
    000003EC 62F2                   MOV.L       @R15,R2
    000003EE 3290                   CMP/EQ      R9,R2
    000003F0 8B0E                   BF          L1079
      15062020.c   227                if (auswahl == 3) {
    000003F2 60E3                   MOV         R14,R0
    000003F4 8803                   CMP/EQ      #3,R0
    000003F6 8B05                   BF          L1080
      15062020.c   228                    locate(1,auswahl);
    000003F8 65E3                   MOV         R14,R5
    000003FA 4C0B                   JSR         @R12
    000003FC E401                   MOV         #1,R4
      15062020.c   229                    Print((unsigned char*)" ");
    000003FE 4D0B                   JSR         @R13
    00000400 64A3                   MOV         R10,R4
      15062020.c   230                    auswahl = auswahl + 5;
    00000402 7E05                   ADD         #5,R14
    00000404              L1080:                            
      15062020.c   231                }
      15062020.c   232                locate(1,auswahl);
    00000404 65E3                   MOV         R14,R5
    00000406 4C0B                   JSR         @R12
    00000408 E401                   MOV         #1,R4
      15062020.c   233                Print((unsigned char*)" ");
    0000040A 4D0B                   JSR         @R13
    0000040C 64A3                   MOV         R10,R4
      15062020.c   234                auswahl = auswahl - 1;
    0000040E 7EFF                   ADD         #-1,R14
    00000410              L1079:                            
      15062020.c   235            };
      15062020.c   236            if(KEY_CTRL_DOWN == key) {
    00000410 63F2                   MOV.L       @R15,R3
    00000412 3380                   CMP/EQ      R8,R3
    00000414 8B0E                   BF          L1081
      15062020.c   237                if (auswahl == 7) {
    00000416 60E3                   MOV         R14,R0
    00000418 8807                   CMP/EQ      #7,R0
    0000041A 8B05                   BF          L1082
      15062020.c   238                    locate(1,auswahl);
    0000041C 65E3                   MOV         R14,R5
    0000041E 4C0B                   JSR         @R12
    00000420 E401                   MOV         #1,R4
      15062020.c   239                    Print((unsigned char*)" ");
    00000422 4D0B                   JSR         @R13
    00000424 64A3                   MOV         R10,R4
      15062020.c   240                    auswahl = auswahl - 5;
    00000426 7EFB                   ADD         #-5,R14
    00000428              L1082:                            
      15062020.c   241                }
      15062020.c   242                locate(1,auswahl);
    00000428 65E3                   MOV         R14,R5
    0000042A 4C0B                   JSR         @R12
    0000042C E401                   MOV         #1,R4
      15062020.c   243                Print((unsigned char*)" ");
    0000042E 4D0B                   JSR         @R13
    00000430 64A3                   MOV         R10,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   244                auswahl = auswahl + 1;
    00000432 7E01                   ADD         #1,R14
    00000434              L1081:                            
      15062020.c   245            };
      15062020.c   246            if (KEY_CTRL_EXE == key) {
    00000434 922B                   MOV.W       L1228+2,R2 ; H'7534
    00000436 63F2                   MOV.L       @R15,R3
    00000438 3320                   CMP/EQ      R2,R3
    0000043A 8B22                   BF          L1083
      15062020.c   247                if (auswahl == 3) {
    0000043C 60E3                   MOV         R14,R0
    0000043E 8803                   CMP/EQ      #3,R0
    00000440 8B03                   BF          L1084
      15062020.c   248                    Bdisp_AllClr_DDVRAM();
    00000442 4B0B                   JSR         @R11
    00000444 0009                   NOP
      15062020.c   249                    lf1menuitem1();
    00000446 B03E                   BSR         _lf1menuitem1
    00000448 0009                   NOP
    0000044A              L1084:                            
      15062020.c   250                }
      15062020.c   251                if (auswahl == 4) {
    0000044A 60E3                   MOV         R14,R0
    0000044C 8804                   CMP/EQ      #4,R0
    0000044E 8B03                   BF          L1085
      15062020.c   252                    Bdisp_AllClr_DDVRAM();
    00000450 4B0B                   JSR         @R11
    00000452 0009                   NOP
      15062020.c   253                    lf1menuitem2();
    00000454 B072                   BSR         _lf1menuitem2
    00000456 0009                   NOP
    00000458              L1085:                            
      15062020.c   254                }
      15062020.c   255                if (auswahl == 5) {
    00000458 60E3                   MOV         R14,R0
    0000045A 8805                   CMP/EQ      #5,R0
    0000045C 8B03                   BF          L1086
      15062020.c   256                    Bdisp_AllClr_DDVRAM();
    0000045E 4B0B                   JSR         @R11
    00000460 0009                   NOP
      15062020.c   257                    lf1menuitem3();
    00000462 B11D                   BSR         _lf1menuitem3
    00000464 0009                   NOP
    00000466              L1086:                            
      15062020.c   258                }
      15062020.c   259                if (auswahl == 6) {
    00000466 60E3                   MOV         R14,R0
    00000468 8806                   CMP/EQ      #6,R0
    0000046A 8B03                   BF          L1087
      15062020.c   260                    Bdisp_AllClr_DDVRAM();
    0000046C 4B0B                   JSR         @R11
    0000046E 0009                   NOP
      15062020.c   261                    lf1menuitem4();
    00000470 B17E                   BSR         _lf1menuitem4
    00000472 0009                   NOP
    00000474              L1087:                            
      15062020.c   262                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   263                if (auswahl == 7) {
    00000474 60E3                   MOV         R14,R0
    00000476 8807                   CMP/EQ      #7,R0
    00000478 8B03                   BF          L1083
      15062020.c   264                    Bdisp_AllClr_DDVRAM();
    0000047A 4B0B                   JSR         @R11
    0000047C 0009                   NOP
      15062020.c   265                    lf1menuitem5();
    0000047E B353                   BSR         _lf1menuitem5
    00000480 0009                   NOP
    00000482              L1083:                            
      15062020.c   266                }
      15062020.c   267            };
      15062020.c   268            if (KEY_CTRL_EXIT == key) {
    00000482 9305                   MOV.W       L1228+4,R3 ; H'7532
    00000484 62F2                   MOV.L       @R15,R2
    00000486 3230                   CMP/EQ      R3,R2
    00000488 A016                   BRA         L1222
    0000048A 0009                   NOP
    0000048C              L1228:                            
    0000048C 7547                   .DATA.W     H'7547
    0000048E 7534                   .DATA.W     H'7534
    00000490 7532                   .DATA.W     H'7532
    00000492 0000                   .DATA.W     0
    00000494 <00000000>             .DATA.L     L421
    00000498 <00000000>             .DATA.L     __quick_odd_mvn
    0000049C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000004A0 <00000000>             .DATA.L     _locate
    000004A4 <00000000>             .DATA.L     _Print
    000004A8 <00000000>             .DATA.L     L353
    000004AC <00000000>             .DATA.L     L366
    000004B0 <00000000>             .DATA.L     L363
    000004B4 <00000000>             .DATA.L     _GetKey
    000004B8              L1222:                            
    000004B8 8B8F                   BF          L1078
      15062020.c   269                Bdisp_AllClr_DDVRAM();
    000004BA 4B0B                   JSR         @R11
    000004BC 0009                   NOP
      15062020.c   270                firstMenu();
    000004BE BDB3                   BSR         _firstMenu
    000004C0 0009                   NOP
    000004C2 AF8A                   BRA         L1078
    000004C4 0009                   NOP
      15062020.c   271            }
      15062020.c   272       }
      15062020.c   273    }
      15062020.c   274    int lf1menuitem1(){   
    000004C6              _lf1menuitem1:                   ; function: lf1menuitem1
                                                           ; frame size=4
    000004C6 7FFC                   ADD         #-4,R15
      15062020.c   275        locate(1,1);
    000004C8 DE41                   MOV.L       L1229+2,R14; _locate
    000004CA E501                   MOV         #1,R5
    000004CC 4E0B                   JSR         @R14
    000004CE 6453                   MOV         R5,R4
      15062020.c   276        Print((unsigned char*)"Okonomisches Prinzip");
    000004D0 DD40                   MOV.L       L1229+6,R13; _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D2 D441                   MOV.L       L1229+10,R4; L422
    000004D4 4D0B                   JSR         @R13
    000004D6 0009                   NOP
      15062020.c   277        locate(1,2);
    000004D8 E502                   MOV         #2,R5
    000004DA 4E0B                   JSR         @R14
    000004DC E401                   MOV         #1,R4
      15062020.c   278        Print((unsigned char*)"-Minimal Prinzip");
    000004DE D43F                   MOV.L       L1229+14,R4; L447
    000004E0 4D0B                   JSR         @R13
    000004E2 0009                   NOP
      15062020.c   279        locate(2,3);
    000004E4 E503                   MOV         #3,R5
    000004E6 4E0B                   JSR         @R14
    000004E8 E402                   MOV         #2,R4
      15062020.c   280        Print((unsigned char*)"Vorgegebenes Ziel");
    000004EA D43D                   MOV.L       L1229+18,R4; L448
    000004EC 4D0B                   JSR         @R13
    000004EE 0009                   NOP
      15062020.c   281        locate(2,4);
    000004F0 E504                   MOV         #4,R5
    000004F2 4E0B                   JSR         @R14
    000004F4 E402                   MOV         #2,R4
      15062020.c   282        Print((unsigned char*)"wenig Ausgaben");
    000004F6 D43B                   MOV.L       L1229+22,R4; L449
    000004F8 4D0B                   JSR         @R13
    000004FA 0009                   NOP
      15062020.c   283        locate(1,5);
    000004FC E505                   MOV         #5,R5
    000004FE 4E0B                   JSR         @R14
    00000500 E401                   MOV         #1,R4
      15062020.c   284        Print((unsigned char*)"-Maximal Prinzip");
    00000502 D439                   MOV.L       L1229+26,R4; L450
    00000504 4D0B                   JSR         @R13
    00000506 0009                   NOP
      15062020.c   285        locate(2,6);
    00000508 E506                   MOV         #6,R5
    0000050A 4E0B                   JSR         @R14
    0000050C E402                   MOV         #2,R4
      15062020.c   286        Print((unsigned char*)"Einsatz vorgegeben");
    0000050E D437                   MOV.L       L1229+30,R4; L451
    00000510 4D0B                   JSR         @R13
    00000512 0009                   NOP
      15062020.c   287        locate(2,7);
    00000514 E507                   MOV         #7,R5
    00000516 4E0B                   JSR         @R14
    00000518 E402                   MOV         #2,R4
      15062020.c   288        Print((unsigned char*)"viel Ziel erreichen");
    0000051A D435                   MOV.L       L1229+34,R4; L452
    0000051C 4D0B                   JSR         @R13
    0000051E 0009                   NOP
    00000520 DC34                   MOV.L       L1229+38,R12; _Bdisp_AllClr_DDVRAM
    00000522 DD35                   MOV.L       L1229+42,R13; _GetKey
    00000524 9E53                   MOV.W       L1229,R14  ; H'7532
      15062020.c   289        while (1){
    00000526              L1091:                            
      15062020.c   290            unsigned int key;       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   291            GetKey(&key);
    00000526 4D0B                   JSR         @R13
    00000528 64F3                   MOV         R15,R4
      15062020.c   292            if(KEY_CTRL_EXIT == key) {
    0000052A 62F2                   MOV.L       @R15,R2
    0000052C 32E0                   CMP/EQ      R14,R2
    0000052E 8BFA                   BF          L1091
      15062020.c   293                Bdisp_AllClr_DDVRAM();
    00000530 4C0B                   JSR         @R12
    00000532 0009                   NOP
      15062020.c   294                lf1menu();
    00000534 BF2A                   BSR         _lf1menu
    00000536 0009                   NOP
    00000538 AFF5                   BRA         L1091
    0000053A 0009                   NOP
      15062020.c   295            }
      15062020.c   296        } 
      15062020.c   297    }
      15062020.c   298    int lf1menuitem2(){
    0000053C              _lf1menuitem2:                   ; function: lf1menuitem2
                                                           ; frame size=8
      15062020.c   299        locate(1,1);
    0000053C DE24                   MOV.L       L1229+2,R14; _locate
    0000053E E501                   MOV         #1,R5
    00000540 7FF8                   ADD         #-8,R15
    00000542 4E0B                   JSR         @R14
    00000544 6453                   MOV         R5,R4
      15062020.c   300        Print((unsigned char*)"Rechtsformen 1/2");
    00000546 DD23                   MOV.L       L1229+6,R13; _Print
    00000548 D42C                   MOV.L       L1229+46,R4; L457
    0000054A 4D0B                   JSR         @R13
    0000054C 0009                   NOP
      15062020.c   301        locate(1,2);
    0000054E E502                   MOV         #2,R5
    00000550 4E0B                   JSR         @R14
    00000552 E401                   MOV         #1,R4
      15062020.c   302        Print((unsigned char*)"Personengesellschaft");
    00000554 D42A                   MOV.L       L1229+50,R4; L458
    00000556 4D0B                   JSR         @R13
    00000558 0009                   NOP
      15062020.c   303        locate(1,3);
    0000055A E503                   MOV         #3,R5
    0000055C 4E0B                   JSR         @R14
    0000055E E401                   MOV         #1,R4
      15062020.c   304        Print((unsigned char*)"-e.K. eingetragener");
    00000560 D428                   MOV.L       L1229+54,R4; L459
    00000562 4D0B                   JSR         @R13
    00000564 0009                   NOP
      15062020.c   305        locate(3,4);
    00000566 E504                   MOV         #4,R5
    00000568 4E0B                   JSR         @R14
    0000056A E403                   MOV         #3,R4
      15062020.c   306        Print((unsigned char*)"Kaufmann");
    0000056C D426                   MOV.L       L1229+58,R4; L460
    0000056E 4D0B                   JSR         @R13
    00000570 0009                   NOP
      15062020.c   307        locate(1,5);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000572 E505                   MOV         #5,R5
    00000574 4E0B                   JSR         @R14
    00000576 E401                   MOV         #1,R4
      15062020.c   308        Print((unsigned char*)"-OHG offene Handels-");
    00000578 D424                   MOV.L       L1229+62,R4; L461
    0000057A 4D0B                   JSR         @R13
    0000057C 0009                   NOP
      15062020.c   309        locate(3,6);
    0000057E E506                   MOV         #6,R5
    00000580 4E0B                   JSR         @R14
    00000582 E403                   MOV         #3,R4
      15062020.c   310        Print((unsigned char*)"gesellschaft");
    00000584 D422                   MOV.L       L1229+66,R4; L462
    00000586 4D0B                   JSR         @R13
    00000588 1F41                   MOV.L       R4,@(4,R15)
      15062020.c   311        locate(1,7);
    0000058A E507                   MOV         #7,R5
    0000058C 4E0B                   JSR         @R14
    0000058E E401                   MOV         #1,R4
      15062020.c   312        Print((unsigned char*)"-Kg Kommandit-");
    00000590 D420                   MOV.L       L1229+70,R4; L463
    00000592 4D0B                   JSR         @R13
    00000594 0009                   NOP
      15062020.c   313        locate(3,8);
    00000596 E508                   MOV         #8,R5
    00000598 4E0B                   JSR         @R14
    0000059A E403                   MOV         #3,R4
      15062020.c   314        Print((unsigned char*)"gesellschaft");
    0000059C 4D0B                   JSR         @R13
    0000059E 54F1                   MOV.L       @(4,R15),R4
    000005A0 DB15                   MOV.L       L1229+42,R11; _GetKey
    000005A2 9C14                   MOV.W       L1229,R12  ; H'7532
    000005A4 DE13                   MOV.L       L1229+38,R14; _Bdisp_AllClr_DDVRAM
    000005A6 6DC3                   MOV         R12,R13
    000005A8 7D15                   ADD         #21,R13
      15062020.c   315        while (1){
    000005AA              L1094:                            
      15062020.c   316            unsigned int key;       
      15062020.c   317            GetKey(&key);
    000005AA 4B0B                   JSR         @R11
    000005AC 64F3                   MOV         R15,R4
      15062020.c   318            if(KEY_CTRL_EXIT == key) {
    000005AE 62F2                   MOV.L       @R15,R2
    000005B0 32C0                   CMP/EQ      R12,R2
    000005B2 8B03                   BF          L1095
      15062020.c   319                Bdisp_AllClr_DDVRAM();
    000005B4 4E0B                   JSR         @R14
    000005B6 0009                   NOP
      15062020.c   320                lf1menu();
    000005B8 BEE8                   BSR         _lf1menu
    000005BA 0009                   NOP
    000005BC              L1095:                            
      15062020.c   321            }
      15062020.c   322            if(KEY_CTRL_DOWN == key) {
    000005BC 63F2                   MOV.L       @R15,R3
    000005BE 33D0                   CMP/EQ      R13,R3
    000005C0 8BF3                   BF          L1094




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   323                Bdisp_AllClr_DDVRAM();
    000005C2 4E0B                   JSR         @R14
    000005C4 0009                   NOP
      15062020.c   324                lf1menuitem2_1();
    000005C6 B027                   BSR         _lf1menuitem2_1
    000005C8 0009                   NOP
    000005CA AFEE                   BRA         L1094
    000005CC 0009                   NOP
    000005CE              L1229:                            
    000005CE 7532                   .DATA.W     H'7532
    000005D0 <00000000>             .DATA.L     _locate
    000005D4 <00000000>             .DATA.L     _Print
    000005D8 <00000000>             .DATA.L     L422
    000005DC <00000000>             .DATA.L     L447
    000005E0 <00000000>             .DATA.L     L448
    000005E4 <00000000>             .DATA.L     L449
    000005E8 <00000000>             .DATA.L     L450
    000005EC <00000000>             .DATA.L     L451
    000005F0 <00000000>             .DATA.L     L452
    000005F4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000005F8 <00000000>             .DATA.L     _GetKey
    000005FC <00000000>             .DATA.L     L457
    00000600 <00000000>             .DATA.L     L458
    00000604 <00000000>             .DATA.L     L459
    00000608 <00000000>             .DATA.L     L460
    0000060C <00000000>             .DATA.L     L461
    00000610 <00000000>             .DATA.L     L462
    00000614 <00000000>             .DATA.L     L463
      15062020.c   325            }
      15062020.c   326        } 
      15062020.c   327    }
      15062020.c   328    int lf1menuitem2_1(){
    00000618              _lf1menuitem2_1:                 ; function: lf1menuitem2_1
                                                           ; frame size=4
      15062020.c   329        locate(1,1);
    00000618 DE42                   MOV.L       L1230+2,R14; _locate
    0000061A E501                   MOV         #1,R5
    0000061C 7FFC                   ADD         #-4,R15
    0000061E 4E0B                   JSR         @R14
    00000620 6453                   MOV         R5,R4
      15062020.c   330        Print((unsigned char*)"Rechtsformen 2/2");
    00000622 DD41                   MOV.L       L1230+6,R13; _Print
    00000624 D441                   MOV.L       L1230+10,R4; L470
    00000626 4D0B                   JSR         @R13
    00000628 0009                   NOP
      15062020.c   331        locate(1,2);
    0000062A E502                   MOV         #2,R5
    0000062C 4E0B                   JSR         @R14
    0000062E E401                   MOV         #1,R4
      15062020.c   332        Print((unsigned char*)"Kapitalgesellschaft");
    00000630 D43F                   MOV.L       L1230+14,R4; L471
    00000632 4D0B                   JSR         @R13
    00000634 0009                   NOP
      15062020.c   333        locate(1,3);
    00000636 E503                   MOV         #3,R5
    00000638 4E0B                   JSR         @R14
    0000063A E401                   MOV         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   334        Print((unsigned char*)"-GmbH Gesellschaft");
    0000063C D43D                   MOV.L       L1230+18,R4; L472
    0000063E 4D0B                   JSR         @R13
    00000640 0009                   NOP
      15062020.c   335        locate(3,4);
    00000642 E504                   MOV         #4,R5
    00000644 4E0B                   JSR         @R14
    00000646 E403                   MOV         #3,R4
      15062020.c   336        Print((unsigned char*)"mit beschrankter");
    00000648 D43B                   MOV.L       L1230+22,R4; L473
    0000064A 4D0B                   JSR         @R13
    0000064C 0009                   NOP
      15062020.c   337        locate(3,5);
    0000064E E505                   MOV         #5,R5
    00000650 4E0B                   JSR         @R14
    00000652 E403                   MOV         #3,R4
      15062020.c   338        Print((unsigned char*)"Haftung");
    00000654 D439                   MOV.L       L1230+26,R4; L474
    00000656 4D0B                   JSR         @R13
    00000658 0009                   NOP
      15062020.c   339        locate(1,6);
    0000065A E506                   MOV         #6,R5
    0000065C 4E0B                   JSR         @R14
    0000065E E401                   MOV         #1,R4
      15062020.c   340        Print((unsigned char*)"-AG Aktien-");
    00000660 D437                   MOV.L       L1230+30,R4; L475
    00000662 4D0B                   JSR         @R13
    00000664 0009                   NOP
      15062020.c   341        locate(3,7);
    00000666 E507                   MOV         #7,R5
    00000668 4E0B                   JSR         @R14
    0000066A E403                   MOV         #3,R4
      15062020.c   342        Print((unsigned char*)"gesellschaft");
    0000066C D435                   MOV.L       L1230+34,R4; L462
    0000066E 4D0B                   JSR         @R13
    00000670 0009                   NOP
    00000672 DB35                   MOV.L       L1230+38,R11; _GetKey
    00000674 9C55                   MOV.W       L1230,R12  ; H'7532
    00000676 6DC3                   MOV         R12,R13
    00000678 DE34                   MOV.L       L1230+42,R14; _Bdisp_AllClr_DDVRAM
    0000067A 7D10                   ADD         #16,R13
      15062020.c   343        while (1){
    0000067C              L1098:                            
      15062020.c   344            unsigned int key;       
      15062020.c   345            GetKey(&key);
    0000067C 4B0B                   JSR         @R11
    0000067E 64F3                   MOV         R15,R4
      15062020.c   346            if(KEY_CTRL_EXIT == key) {
    00000680 62F2                   MOV.L       @R15,R2
    00000682 32C0                   CMP/EQ      R12,R2
    00000684 8B03                   BF          L1099
      15062020.c   347                Bdisp_AllClr_DDVRAM();
    00000686 4E0B                   JSR         @R14
    00000688 0009                   NOP
      15062020.c   348                lf1menu();
    0000068A BE7F                   BSR         _lf1menu
    0000068C 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000068E              L1099:                            
      15062020.c   349            }
      15062020.c   350            if(KEY_CTRL_UP == key) {
    0000068E 63F2                   MOV.L       @R15,R3
    00000690 33D0                   CMP/EQ      R13,R3
    00000692 8BF3                   BF          L1098
      15062020.c   351                Bdisp_AllClr_DDVRAM();
    00000694 4E0B                   JSR         @R14
    00000696 0009                   NOP
      15062020.c   352                lf1menuitem2();
    00000698 BF50                   BSR         _lf1menuitem2
    0000069A 0009                   NOP
    0000069C AFEE                   BRA         L1098
    0000069E 0009                   NOP
      15062020.c   353            }
      15062020.c   354        } 
      15062020.c   355    }
      15062020.c   356    int lf1menuitem3(){   
    000006A0              _lf1menuitem3:                   ; function: lf1menuitem3
                                                           ; frame size=4
      15062020.c   357        locate(1,1);
    000006A0 DE20                   MOV.L       L1230+2,R14; _locate
    000006A2 E501                   MOV         #1,R5
    000006A4 7FFC                   ADD         #-4,R15
    000006A6 4E0B                   JSR         @R14
    000006A8 6453                   MOV         R5,R4
      15062020.c   358        Print((unsigned char*)"Gewinnverteilung");
    000006AA DD1F                   MOV.L       L1230+6,R13; _Print
    000006AC D428                   MOV.L       L1230+46,R4; L424
    000006AE 4D0B                   JSR         @R13
    000006B0 0009                   NOP
      15062020.c   359        locate(1,2);
    000006B2 E502                   MOV         #2,R5
    000006B4 4E0B                   JSR         @R14
    000006B6 E401                   MOV         #1,R4
      15062020.c   360        Print((unsigned char*)"-OHG: 4% auf Kapital");
    000006B8 D426                   MOV.L       L1230+50,R4; L481
    000006BA 4D0B                   JSR         @R13
    000006BC 0009                   NOP
      15062020.c   361        locate(2,3);
    000006BE E503                   MOV         #3,R5
    000006C0 4E0B                   JSR         @R14
    000006C2 E402                   MOV         #2,R4
      15062020.c   362        Print((unsigned char*)"Einlagen, Rest nach");
    000006C4 D424                   MOV.L       L1230+54,R4; L482
    000006C6 4D0B                   JSR         @R13
    000006C8 0009                   NOP
      15062020.c   363        locate(2,4);
    000006CA E504                   MOV         #4,R5
    000006CC 4E0B                   JSR         @R14
    000006CE E402                   MOV         #2,R4
      15062020.c   364        Print((unsigned char*)"Koepfen.");
    000006D0 D422                   MOV.L       L1230+58,R4; L483
    000006D2 4D0B                   JSR         @R13
    000006D4 0009                   NOP
      15062020.c   365        locate(1,5);
    000006D6 E505                   MOV         #5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006D8 4E0B                   JSR         @R14
    000006DA E401                   MOV         #1,R4
      15062020.c   366        Print((unsigned char*)"-KG: 4% auf Kapital");
    000006DC D420                   MOV.L       L1230+62,R4; L484
    000006DE 4D0B                   JSR         @R13
    000006E0 0009                   NOP
      15062020.c   367        locate(2,6);
    000006E2 E506                   MOV         #6,R5
    000006E4 4E0B                   JSR         @R14
    000006E6 E402                   MOV         #2,R4
      15062020.c   368        Print((unsigned char*)"Einlagen, Rest im");
    000006E8 D41E                   MOV.L       L1230+66,R4; L485
    000006EA 4D0B                   JSR         @R13
    000006EC 0009                   NOP
      15062020.c   369        locate(2,7);
    000006EE E507                   MOV         #7,R5
    000006F0 4E0B                   JSR         @R14
    000006F2 E402                   MOV         #2,R4
      15062020.c   370        Print((unsigned char*)"angemessenen");
    000006F4 D41C                   MOV.L       L1230+70,R4; L486
    000006F6 4D0B                   JSR         @R13
    000006F8 0009                   NOP
      15062020.c   371        locate(2,8);
    000006FA E508                   MOV         #8,R5
    000006FC 4E0B                   JSR         @R14
    000006FE E402                   MOV         #2,R4
      15062020.c   372        Print((unsigned char*)"Verhaeltnissen");
    00000700 D41A                   MOV.L       L1230+74,R4; L487
    00000702 4D0B                   JSR         @R13
    00000704 0009                   NOP
    00000706 DC11                   MOV.L       L1230+42,R12; _Bdisp_AllClr_DDVRAM
    00000708 DD0F                   MOV.L       L1230+38,R13; _GetKey
    0000070A 9E0A                   MOV.W       L1230,R14  ; H'7532
      15062020.c   373        while (1){
    0000070C              L1102:                            
      15062020.c   374            unsigned int key;       
      15062020.c   375            GetKey(&key);
    0000070C 4D0B                   JSR         @R13
    0000070E 64F3                   MOV         R15,R4
      15062020.c   376            if(KEY_CTRL_EXIT == key) {
    00000710 62F2                   MOV.L       @R15,R2
    00000712 32E0                   CMP/EQ      R14,R2
    00000714 8BFA                   BF          L1102
      15062020.c   377                Bdisp_AllClr_DDVRAM();
    00000716 4C0B                   JSR         @R12
    00000718 0009                   NOP
      15062020.c   378                lf1menu();
    0000071A BE37                   BSR         _lf1menu
    0000071C 0009                   NOP
    0000071E AFF5                   BRA         L1102
    00000720 0009                   NOP
    00000722              L1230:                            
    00000722 7532                   .DATA.W     H'7532
    00000724 <00000000>             .DATA.L     _locate
    00000728 <00000000>             .DATA.L     _Print
    0000072C <00000000>             .DATA.L     L470
    00000730 <00000000>             .DATA.L     L471




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000734 <00000000>             .DATA.L     L472
    00000738 <00000000>             .DATA.L     L473
    0000073C <00000000>             .DATA.L     L474
    00000740 <00000000>             .DATA.L     L475
    00000744 <00000000>             .DATA.L     L462
    00000748 <00000000>             .DATA.L     _GetKey
    0000074C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000750 <00000000>             .DATA.L     L424
    00000754 <00000000>             .DATA.L     L481
    00000758 <00000000>             .DATA.L     L482
    0000075C <00000000>             .DATA.L     L483
    00000760 <00000000>             .DATA.L     L484
    00000764 <00000000>             .DATA.L     L485
    00000768 <00000000>             .DATA.L     L486
    0000076C <00000000>             .DATA.L     L487
      15062020.c   379            }
      15062020.c   380        } 
      15062020.c   381    }
      15062020.c   382    int lf1menuitem4(){
    00000770              _lf1menuitem4:                   ; function: lf1menuitem4
                                                           ; frame size=4
      15062020.c   383        locate(1,1);
    00000770 DE25                   MOV.L       L1231+4,R14; _locate
    00000772 E501                   MOV         #1,R5
    00000774 7FFC                   ADD         #-4,R15
    00000776 4E0B                   JSR         @R14
    00000778 6453                   MOV         R5,R4
      15062020.c   384        Print((unsigned char*)"Haftung 1/5");
    0000077A DD24                   MOV.L       L1231+8,R13; _Print
    0000077C D424                   MOV.L       L1231+12,R4; L492
    0000077E 4D0B                   JSR         @R13
    00000780 0009                   NOP
      15062020.c   385        locate(1,2);
    00000782 E502                   MOV         #2,R5
    00000784 4E0B                   JSR         @R14
    00000786 E401                   MOV         #1,R4
      15062020.c   386        Print((unsigned char*)"Kommanditgesellschaf");
    00000788 D422                   MOV.L       L1231+16,R4; L493
    0000078A 4D0B                   JSR         @R13
    0000078C 0009                   NOP
      15062020.c   387        locate(1,3);
    0000078E E503                   MOV         #3,R5
    00000790 4E0B                   JSR         @R14
    00000792 E401                   MOV         #1,R4
      15062020.c   388        Print((unsigned char*)"-Kommandist: Haftung");
    00000794 D420                   MOV.L       L1231+20,R4; L494
    00000796 4D0B                   JSR         @R13
    00000798 0009                   NOP
      15062020.c   389        locate(2,4);
    0000079A E504                   MOV         #4,R5
    0000079C 4E0B                   JSR         @R14
    0000079E E402                   MOV         #2,R4
      15062020.c   390        Print((unsigned char*)"mit eingelargertem");
    000007A0 D41E                   MOV.L       L1231+24,R4; L495
    000007A2 4D0B                   JSR         @R13
    000007A4 0009                   NOP
      15062020.c   391        locate(2,5);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007A6 E505                   MOV         #5,R5
    000007A8 4E0B                   JSR         @R14
    000007AA E402                   MOV         #2,R4
      15062020.c   392        Print((unsigned char*)"Kapital, keine");
    000007AC D41C                   MOV.L       L1231+28,R4; L496
    000007AE 4D0B                   JSR         @R13
    000007B0 0009                   NOP
      15062020.c   393        locate(2,6);
    000007B2 E506                   MOV         #6,R5
    000007B4 4E0B                   JSR         @R14
    000007B6 E402                   MOV         #2,R4
      15062020.c   394        Print((unsigned char*)"Geschaftsfuhrung");
    000007B8 D41A                   MOV.L       L1231+32,R4; L497
    000007BA 4D0B                   JSR         @R13
    000007BC 0009                   NOP
      15062020.c   395        locate(1,7);
    000007BE E507                   MOV         #7,R5
    000007C0 4E0B                   JSR         @R14
    000007C2 E401                   MOV         #1,R4
      15062020.c   396        Print((unsigned char*)"-Komplimentaer");
    000007C4 D418                   MOV.L       L1231+36,R4; L498
    000007C6 4D0B                   JSR         @R13
    000007C8 0009                   NOP
      15062020.c   397        locate(2,8);
    000007CA E508                   MOV         #8,R5
    000007CC 4E0B                   JSR         @R14
    000007CE E402                   MOV         #2,R4
      15062020.c   398        Print((unsigned char*)"Haftung mit Kapital");
    000007D0 D416                   MOV.L       L1231+40,R4; L499
    000007D2 4D0B                   JSR         @R13
    000007D4 0009                   NOP
    000007D6 DB16                   MOV.L       L1231+44,R11; _GetKey
    000007D8 9C14                   MOV.W       L1231,R12  ; H'7532
    000007DA 6DC3                   MOV         R12,R13
    000007DC DE15                   MOV.L       L1231+48,R14; _Bdisp_AllClr_DDVRAM
    000007DE 7D15                   ADD         #21,R13
      15062020.c   399        while (1){
    000007E0              L1105:                            
      15062020.c   400            unsigned int key;       
      15062020.c   401            GetKey(&key);
    000007E0 4B0B                   JSR         @R11
    000007E2 64F3                   MOV         R15,R4
      15062020.c   402            if(KEY_CTRL_EXIT == key) {
    000007E4 62F2                   MOV.L       @R15,R2
    000007E6 32C0                   CMP/EQ      R12,R2
    000007E8 8B03                   BF          L1106
      15062020.c   403                Bdisp_AllClr_DDVRAM();
    000007EA 4E0B                   JSR         @R14
    000007EC 0009                   NOP
      15062020.c   404                lf1menu();
    000007EE BDCD                   BSR         _lf1menu
    000007F0 0009                   NOP
    000007F2              L1106:                            
      15062020.c   405            }
      15062020.c   406            if(KEY_CTRL_DOWN == key) {
    000007F2 63F2                   MOV.L       @R15,R3
    000007F4 33D0                   CMP/EQ      R13,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007F6 8BF3                   BF          L1105
      15062020.c   407                Bdisp_AllClr_DDVRAM();
    000007F8 4E0B                   JSR         @R14
    000007FA 0009                   NOP
      15062020.c   408                lf1menuitem4_1();
    000007FC B01C                   BSR         _lf1menuitem4_1
    000007FE 0009                   NOP
    00000800 AFEE                   BRA         L1105
    00000802 0009                   NOP
    00000804              L1231:                            
    00000804 7532                   .DATA.W     H'7532
    00000806 0000                   .DATA.W     0
    00000808 <00000000>             .DATA.L     _locate
    0000080C <00000000>             .DATA.L     _Print
    00000810 <00000000>             .DATA.L     L492
    00000814 <00000000>             .DATA.L     L493
    00000818 <00000000>             .DATA.L     L494
    0000081C <00000000>             .DATA.L     L495
    00000820 <00000000>             .DATA.L     L496
    00000824 <00000000>             .DATA.L     L497
    00000828 <00000000>             .DATA.L     L498
    0000082C <00000000>             .DATA.L     L499
    00000830 <00000000>             .DATA.L     _GetKey
    00000834 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   409            }
      15062020.c   410        } 
      15062020.c   411    }
      15062020.c   412    int lf1menuitem4_1(){
    00000838              _lf1menuitem4_1:                 ; function: lf1menuitem4_1
                                                           ; frame size=4
      15062020.c   413        locate(1,1);
    00000838 DE26                   MOV.L       L1232+4,R14; _locate
    0000083A E501                   MOV         #1,R5
    0000083C 7FFC                   ADD         #-4,R15
    0000083E 4E0B                   JSR         @R14
    00000840 6453                   MOV         R5,R4
      15062020.c   414        Print((unsigned char*)"Haftung 2/5");
    00000842 DD25                   MOV.L       L1232+8,R13; _Print
    00000844 D425                   MOV.L       L1232+12,R4; L506
    00000846 4D0B                   JSR         @R13
    00000848 0009                   NOP
      15062020.c   415        locate(2,2);
    0000084A E502                   MOV         #2,R5
    0000084C 4E0B                   JSR         @R14
    0000084E 6453                   MOV         R5,R4
      15062020.c   416        Print((unsigned char*)"Einlagen und privat");
    00000850 D423                   MOV.L       L1232+16,R4; L507
    00000852 4D0B                   JSR         @R13
    00000854 0009                   NOP
      15062020.c   417        locate(2,3);
    00000856 E503                   MOV         #3,R5
    00000858 4E0B                   JSR         @R14
    0000085A E402                   MOV         #2,R4
      15062020.c   418        Print((unsigned char*)"Geschaftsfuhrer");
    0000085C D421                   MOV.L       L1232+20,R4; L508
    0000085E 4D0B                   JSR         @R13
    00000860 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   419        locate(1,5);
    00000862 E505                   MOV         #5,R5
    00000864 4E0B                   JSR         @R14
    00000866 E401                   MOV         #1,R4
      15062020.c   420        Print((unsigned char*)"Offene Handelsgesel.");
    00000868 D41F                   MOV.L       L1232+24,R4; L509
    0000086A 4D0B                   JSR         @R13
    0000086C 0009                   NOP
      15062020.c   421        locate(1,6);
    0000086E E506                   MOV         #6,R5
    00000870 4E0B                   JSR         @R14
    00000872 E401                   MOV         #1,R4
      15062020.c   422        Print((unsigned char*)"-unmittelbar (");
    00000874 D41D                   MOV.L       L1232+28,R4; L510
    00000876 4D0B                   JSR         @R13
    00000878 0009                   NOP
      15062020.c   423        locate(2,7);
    0000087A E507                   MOV         #7,R5
    0000087C 4E0B                   JSR         @R14
    0000087E E402                   MOV         #2,R4
      15062020.c   424        Print((unsigned char*)"Glaubiger kann an");
    00000880 D41B                   MOV.L       L1232+32,R4; L511
    00000882 4D0B                   JSR         @R13
    00000884 0009                   NOP
      15062020.c   425        locate(2,8);
    00000886 E508                   MOV         #8,R5
    00000888 4E0B                   JSR         @R14
    0000088A E402                   MOV         #2,R4
      15062020.c   426        Print((unsigned char*)"Gesellschafter");
    0000088C D419                   MOV.L       L1232+36,R4; L512
    0000088E 4D0B                   JSR         @R13
    00000890 0009                   NOP
    00000892 DA19                   MOV.L       L1232+40,R10; _GetKey
    00000894 9B1C                   MOV.W       L1232,R11  ; H'7542
    00000896 6CB3                   MOV         R11,R12
    00000898 9D1B                   MOV.W       L1232+2,R13; H'7547
    0000089A 7CF0                   ADD         #-16,R12
    0000089C DE17                   MOV.L       L1232+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   427        while (1){
    0000089E              L1109:                            
      15062020.c   428            unsigned int key;       
      15062020.c   429            GetKey(&key);
    0000089E 4A0B                   JSR         @R10
    000008A0 64F3                   MOV         R15,R4
      15062020.c   430            if(KEY_CTRL_EXIT == key) {
    000008A2 62F2                   MOV.L       @R15,R2
    000008A4 32C0                   CMP/EQ      R12,R2
    000008A6 8B03                   BF          L1110
      15062020.c   431                Bdisp_AllClr_DDVRAM();
    000008A8 4E0B                   JSR         @R14
    000008AA 0009                   NOP
      15062020.c   432                lf1menu();
    000008AC BD6E                   BSR         _lf1menu
    000008AE 0009                   NOP
    000008B0              L1110:                            
      15062020.c   433            }
      15062020.c   434            if(KEY_CTRL_UP == key) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008B0 63F2                   MOV.L       @R15,R3
    000008B2 33B0                   CMP/EQ      R11,R3
    000008B4 8B03                   BF          L1111
      15062020.c   435                Bdisp_AllClr_DDVRAM();
    000008B6 4E0B                   JSR         @R14
    000008B8 0009                   NOP
      15062020.c   436                lf1menuitem4();
    000008BA BF59                   BSR         _lf1menuitem4
    000008BC 0009                   NOP
    000008BE              L1111:                            
      15062020.c   437            }
      15062020.c   438            if(KEY_CTRL_DOWN == key) {
    000008BE 62F2                   MOV.L       @R15,R2
    000008C0 32D0                   CMP/EQ      R13,R2
    000008C2 8BEC                   BF          L1109
      15062020.c   439                Bdisp_AllClr_DDVRAM();
    000008C4 4E0B                   JSR         @R14
    000008C6 0009                   NOP
      15062020.c   440                lf1menuitem4_2();
    000008C8 B01A                   BSR         _lf1menuitem4_2
    000008CA 0009                   NOP
    000008CC AFE7                   BRA         L1109
    000008CE 0009                   NOP
    000008D0              L1232:                            
    000008D0 7542                   .DATA.W     H'7542
    000008D2 7547                   .DATA.W     H'7547
    000008D4 <00000000>             .DATA.L     _locate
    000008D8 <00000000>             .DATA.L     _Print
    000008DC <00000000>             .DATA.L     L506
    000008E0 <00000000>             .DATA.L     L507
    000008E4 <00000000>             .DATA.L     L508
    000008E8 <00000000>             .DATA.L     L509
    000008EC <00000000>             .DATA.L     L510
    000008F0 <00000000>             .DATA.L     L511
    000008F4 <00000000>             .DATA.L     L512
    000008F8 <00000000>             .DATA.L     _GetKey
    000008FC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   441            }
      15062020.c   442        } 
      15062020.c   443    }
      15062020.c   444    int lf1menuitem4_2(){
    00000900              _lf1menuitem4_2:                 ; function: lf1menuitem4_2
                                                           ; frame size=4
      15062020.c   445        locate(1,1);
    00000900 DE29                   MOV.L       L1233+4,R14; _locate
    00000902 E501                   MOV         #1,R5
    00000904 7FFC                   ADD         #-4,R15
    00000906 4E0B                   JSR         @R14
    00000908 6453                   MOV         R5,R4
      15062020.c   446        Print((unsigned char*)"Haftung 3/5");
    0000090A DD28                   MOV.L       L1233+8,R13; _Print
    0000090C D428                   MOV.L       L1233+12,R4; L520
    0000090E 4D0B                   JSR         @R13
    00000910 0009                   NOP
      15062020.c   447        locate(2,2);
    00000912 E502                   MOV         #2,R5
    00000914 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000916 6453                   MOV         R5,R4
      15062020.c   448        Print((unsigned char*)"herantreten und");
    00000918 D426                   MOV.L       L1233+16,R4; L521
    0000091A 4D0B                   JSR         @R13
    0000091C 0009                   NOP
      15062020.c   449        locate(2,3);
    0000091E E503                   MOV         #3,R5
    00000920 4E0B                   JSR         @R14
    00000922 E402                   MOV         #2,R4
      15062020.c   450        Print((unsigned char*)"Schulden einfordern");
    00000924 D424                   MOV.L       L1233+20,R4; L522
    00000926 4D0B                   JSR         @R13
    00000928 0009                   NOP
      15062020.c   451        locate(1,4);
    0000092A E504                   MOV         #4,R5
    0000092C 4E0B                   JSR         @R14
    0000092E E401                   MOV         #1,R4
      15062020.c   452        Print((unsigned char*)"-unbeschrankt (");
    00000930 D422                   MOV.L       L1233+24,R4; L523
    00000932 4D0B                   JSR         @R13
    00000934 0009                   NOP
      15062020.c   453        locate(2,5);
    00000936 E505                   MOV         #5,R5
    00000938 4E0B                   JSR         @R14
    0000093A E402                   MOV         #2,R4
      15062020.c   454        Print((unsigned char*)"privat+Gesellschaft");
    0000093C D420                   MOV.L       L1233+28,R4; L524
    0000093E 4D0B                   JSR         @R13
    00000940 0009                   NOP
      15062020.c   455        locate(2,6);
    00000942 E506                   MOV         #6,R5
    00000944 4E0B                   JSR         @R14
    00000946 E402                   MOV         #2,R4
      15062020.c   456        Print((unsigned char*)"vermoegen)");
    00000948 D41E                   MOV.L       L1233+32,R4; L525
    0000094A 4D0B                   JSR         @R13
    0000094C 0009                   NOP
      15062020.c   457        locate(1,7);
    0000094E E507                   MOV         #7,R5
    00000950 4E0B                   JSR         @R14
    00000952 E401                   MOV         #1,R4
      15062020.c   458        Print((unsigned char*)"-Solidarisch (");
    00000954 D41C                   MOV.L       L1233+36,R4; L526
    00000956 4D0B                   JSR         @R13
    00000958 0009                   NOP
      15062020.c   459        locate(2,8);
    0000095A E508                   MOV         #8,R5
    0000095C 4E0B                   JSR         @R14
    0000095E E402                   MOV         #2,R4
      15062020.c   460        Print((unsigned char*)"gemeinsame Haftung");
    00000960 D41A                   MOV.L       L1233+40,R4; L527
    00000962 4D0B                   JSR         @R13
    00000964 0009                   NOP
    00000966 DA1A                   MOV.L       L1233+44,R10; _GetKey
    00000968 9B1C                   MOV.W       L1233,R11  ; H'7542
    0000096A 6CB3                   MOV         R11,R12
    0000096C 9D1B                   MOV.W       L1233+2,R13; H'7547




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000096E 7CF0                   ADD         #-16,R12
    00000970 DE18                   MOV.L       L1233+48,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   461        while (1){
    00000972              L1114:                            
      15062020.c   462            unsigned int key;       
      15062020.c   463            GetKey(&key);
    00000972 4A0B                   JSR         @R10
    00000974 64F3                   MOV         R15,R4
      15062020.c   464            if(KEY_CTRL_EXIT == key) {
    00000976 62F2                   MOV.L       @R15,R2
    00000978 32C0                   CMP/EQ      R12,R2
    0000097A 8B03                   BF          L1115
      15062020.c   465                Bdisp_AllClr_DDVRAM();
    0000097C 4E0B                   JSR         @R14
    0000097E 0009                   NOP
      15062020.c   466                lf1menu();
    00000980 BD04                   BSR         _lf1menu
    00000982 0009                   NOP
    00000984              L1115:                            
      15062020.c   467            }
      15062020.c   468            if(KEY_CTRL_UP == key) {
    00000984 63F2                   MOV.L       @R15,R3
    00000986 33B0                   CMP/EQ      R11,R3
    00000988 8B03                   BF          L1116
      15062020.c   469                Bdisp_AllClr_DDVRAM();
    0000098A 4E0B                   JSR         @R14
    0000098C 0009                   NOP
      15062020.c   470                lf1menuitem4_1();
    0000098E BF53                   BSR         _lf1menuitem4_1
    00000990 0009                   NOP
    00000992              L1116:                            
      15062020.c   471            }
      15062020.c   472            if(KEY_CTRL_DOWN == key) {
    00000992 62F2                   MOV.L       @R15,R2
    00000994 32D0                   CMP/EQ      R13,R2
    00000996 8BEC                   BF          L1114
      15062020.c   473                Bdisp_AllClr_DDVRAM();
    00000998 4E0B                   JSR         @R14
    0000099A 0009                   NOP
      15062020.c   474                lf1menuitem4_3();
    0000099C B01C                   BSR         _lf1menuitem4_3
    0000099E 0009                   NOP
    000009A0 AFE7                   BRA         L1114
    000009A2 0009                   NOP
    000009A4              L1233:                            
    000009A4 7542                   .DATA.W     H'7542
    000009A6 7547                   .DATA.W     H'7547
    000009A8 <00000000>             .DATA.L     _locate
    000009AC <00000000>             .DATA.L     _Print
    000009B0 <00000000>             .DATA.L     L520
    000009B4 <00000000>             .DATA.L     L521
    000009B8 <00000000>             .DATA.L     L522
    000009BC <00000000>             .DATA.L     L523
    000009C0 <00000000>             .DATA.L     L524
    000009C4 <00000000>             .DATA.L     L525
    000009C8 <00000000>             .DATA.L     L526
    000009CC <00000000>             .DATA.L     L527




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009D0 <00000000>             .DATA.L     _GetKey
    000009D4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   475            }
      15062020.c   476        } 
      15062020.c   477    }
      15062020.c   478    int lf1menuitem4_3(){
    000009D8              _lf1menuitem4_3:                 ; function: lf1menuitem4_3
                                                           ; frame size=4
      15062020.c   479        locate(1,1);
    000009D8 DE26                   MOV.L       L1234+4,R14; _locate
    000009DA E501                   MOV         #1,R5
    000009DC 7FFC                   ADD         #-4,R15
    000009DE 4E0B                   JSR         @R14
    000009E0 6453                   MOV         R5,R4
      15062020.c   480        Print((unsigned char*)"Haftung 4/5");
    000009E2 DD25                   MOV.L       L1234+8,R13; _Print
    000009E4 D425                   MOV.L       L1234+12,R4; L535
    000009E6 4D0B                   JSR         @R13
    000009E8 0009                   NOP
      15062020.c   481        locate(2,2);
    000009EA E502                   MOV         #2,R5
    000009EC 4E0B                   JSR         @R14
    000009EE 6453                   MOV         R5,R4
      15062020.c   482        Print((unsigned char*)"in alle fuer einen");
    000009F0 D423                   MOV.L       L1234+16,R4; L536
    000009F2 4D0B                   JSR         @R13
    000009F4 0009                   NOP
      15062020.c   483        locate(2,3);
    000009F6 E503                   MOV         #3,R5
    000009F8 4E0B                   JSR         @R14
    000009FA E402                   MOV         #2,R4
      15062020.c   484        Print((unsigned char*)"Musketierprinzip)");
    000009FC D421                   MOV.L       L1234+20,R4; L537
    000009FE 4D0B                   JSR         @R13
    00000A00 0009                   NOP
      15062020.c   485        locate(1,5);
    00000A02 E505                   MOV         #5,R5
    00000A04 4E0B                   JSR         @R14
    00000A06 E401                   MOV         #1,R4
      15062020.c   486        Print((unsigned char*)"GmbH (Grundungs-");
    00000A08 D41F                   MOV.L       L1234+24,R4; L538
    00000A0A 4D0B                   JSR         @R13
    00000A0C 0009                   NOP
      15062020.c   487        locate(2,6);
    00000A0E E506                   MOV         #6,R5
    00000A10 4E0B                   JSR         @R14
    00000A12 E402                   MOV         #2,R4
      15062020.c   488        Print((unsigned char*)"kapital 25.000Eur,");
    00000A14 D41D                   MOV.L       L1234+28,R4; L539
    00000A16 4D0B                   JSR         @R13
    00000A18 0009                   NOP
      15062020.c   489        locate(2,7);
    00000A1A E507                   MOV         #7,R5
    00000A1C 4E0B                   JSR         @R14
    00000A1E E402                   MOV         #2,R4
      15062020.c   490        Print((unsigned char*)"Gewinnverteilung");
    00000A20 D41B                   MOV.L       L1234+32,R4; L424




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A22 4D0B                   JSR         @R13
    00000A24 0009                   NOP
      15062020.c   491        locate(2,8);
    00000A26 E508                   MOV         #8,R5
    00000A28 4E0B                   JSR         @R14
    00000A2A E402                   MOV         #2,R4
      15062020.c   492        Print((unsigned char*)"nach Anteilen am");
    00000A2C D419                   MOV.L       L1234+36,R4; L540
    00000A2E 4D0B                   JSR         @R13
    00000A30 0009                   NOP
    00000A32 DA19                   MOV.L       L1234+40,R10; _GetKey
    00000A34 9B1C                   MOV.W       L1234,R11  ; H'7542
    00000A36 6CB3                   MOV         R11,R12
    00000A38 9D1B                   MOV.W       L1234+2,R13; H'7547
    00000A3A 7CF0                   ADD         #-16,R12
    00000A3C DE17                   MOV.L       L1234+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   493        while (1){
    00000A3E              L1119:                            
      15062020.c   494            unsigned int key;       
      15062020.c   495            GetKey(&key);
    00000A3E 4A0B                   JSR         @R10
    00000A40 64F3                   MOV         R15,R4
      15062020.c   496            if(KEY_CTRL_EXIT == key) {
    00000A42 62F2                   MOV.L       @R15,R2
    00000A44 32C0                   CMP/EQ      R12,R2
    00000A46 8B03                   BF          L1120
      15062020.c   497                Bdisp_AllClr_DDVRAM();
    00000A48 4E0B                   JSR         @R14
    00000A4A 0009                   NOP
      15062020.c   498                lf1menu();
    00000A4C BC9E                   BSR         _lf1menu
    00000A4E 0009                   NOP
    00000A50              L1120:                            
      15062020.c   499            }
      15062020.c   500            if(KEY_CTRL_UP == key) {
    00000A50 63F2                   MOV.L       @R15,R3
    00000A52 33B0                   CMP/EQ      R11,R3
    00000A54 8B03                   BF          L1121
      15062020.c   501                Bdisp_AllClr_DDVRAM();
    00000A56 4E0B                   JSR         @R14
    00000A58 0009                   NOP
      15062020.c   502                lf1menuitem4_2();
    00000A5A BF51                   BSR         _lf1menuitem4_2
    00000A5C 0009                   NOP
    00000A5E              L1121:                            
      15062020.c   503            }
      15062020.c   504            if(KEY_CTRL_DOWN == key) {
    00000A5E 62F2                   MOV.L       @R15,R2
    00000A60 32D0                   CMP/EQ      R13,R2
    00000A62 8BEC                   BF          L1119
      15062020.c   505                Bdisp_AllClr_DDVRAM();
    00000A64 4E0B                   JSR         @R14
    00000A66 0009                   NOP
      15062020.c   506                lf1menuitem4_4();
    00000A68 B01A                   BSR         _lf1menuitem4_4
    00000A6A 0009                   NOP
    00000A6C AFE7                   BRA         L1119




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A6E 0009                   NOP
    00000A70              L1234:                            
    00000A70 7542                   .DATA.W     H'7542
    00000A72 7547                   .DATA.W     H'7547
    00000A74 <00000000>             .DATA.L     _locate
    00000A78 <00000000>             .DATA.L     _Print
    00000A7C <00000000>             .DATA.L     L535
    00000A80 <00000000>             .DATA.L     L536
    00000A84 <00000000>             .DATA.L     L537
    00000A88 <00000000>             .DATA.L     L538
    00000A8C <00000000>             .DATA.L     L539
    00000A90 <00000000>             .DATA.L     L424
    00000A94 <00000000>             .DATA.L     L540
    00000A98 <00000000>             .DATA.L     _GetKey
    00000A9C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   507            }
      15062020.c   508        } 
      15062020.c   509    }
      15062020.c   510    int lf1menuitem4_4(){
    00000AA0              _lf1menuitem4_4:                 ; function: lf1menuitem4_4
                                                           ; frame size=4
      15062020.c   511        locate(1,1);
    00000AA0 DE47                   MOV.L       L1235+4,R14; _locate
    00000AA2 E501                   MOV         #1,R5
    00000AA4 7FFC                   ADD         #-4,R15
    00000AA6 4E0B                   JSR         @R14
    00000AA8 6453                   MOV         R5,R4
      15062020.c   512        Print((unsigned char*)"Haftung 5/5");
    00000AAA DD46                   MOV.L       L1235+8,R13; _Print
    00000AAC D446                   MOV.L       L1235+12,R4; L548
    00000AAE 4D0B                   JSR         @R13
    00000AB0 0009                   NOP
      15062020.c   513        locate(2,2);
    00000AB2 E502                   MOV         #2,R5
    00000AB4 4E0B                   JSR         @R14
    00000AB6 6453                   MOV         R5,R4
      15062020.c   514        Print((unsigned char*)"Gesamtvermoegen)");
    00000AB8 D444                   MOV.L       L1235+16,R4; L549
    00000ABA 4D0B                   JSR         @R13
    00000ABC 0009                   NOP
      15062020.c   515        locate(1,4);
    00000ABE E504                   MOV         #4,R5
    00000AC0 4E0B                   JSR         @R14
    00000AC2 E401                   MOV         #1,R4
      15062020.c   516        Print((unsigned char*)"-AG (Grundungs-");
    00000AC4 D442                   MOV.L       L1235+20,R4; L550
    00000AC6 4D0B                   JSR         @R13
    00000AC8 0009                   NOP
      15062020.c   517        locate(2,5);
    00000ACA E505                   MOV         #5,R5
    00000ACC 4E0B                   JSR         @R14
    00000ACE E402                   MOV         #2,R4
      15062020.c   518        Print((unsigned char*)"kapital 50.000Eur,");
    00000AD0 D440                   MOV.L       L1235+24,R4; L551
    00000AD2 4D0B                   JSR         @R13
    00000AD4 0009                   NOP
      15062020.c   519        locate(2,6);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD6 E506                   MOV         #6,R5
    00000AD8 4E0B                   JSR         @R14
    00000ADA E402                   MOV         #2,R4
      15062020.c   520        Print((unsigned char*)"Gewinnverteilung");
    00000ADC D43E                   MOV.L       L1235+28,R4; L424
    00000ADE 4D0B                   JSR         @R13
    00000AE0 0009                   NOP
      15062020.c   521        locate(2,7);
    00000AE2 E507                   MOV         #7,R5
    00000AE4 4E0B                   JSR         @R14
    00000AE6 E402                   MOV         #2,R4
      15062020.c   522        Print((unsigned char*)"Dividenden, Kurs-");
    00000AE8 D43C                   MOV.L       L1235+32,R4; L552
    00000AEA 4D0B                   JSR         @R13
    00000AEC 0009                   NOP
      15062020.c   523        locate(2,8);
    00000AEE E508                   MOV         #8,R5
    00000AF0 4E0B                   JSR         @R14
    00000AF2 E402                   MOV         #2,R4
      15062020.c   524        Print((unsigned char*)"gewinne, Anteile)");
    00000AF4 D43A                   MOV.L       L1235+36,R4; L553
    00000AF6 4D0B                   JSR         @R13
    00000AF8 0009                   NOP
    00000AFA DB3A                   MOV.L       L1235+40,R11; _GetKey
    00000AFC 9C5E                   MOV.W       L1235,R12  ; H'7532
    00000AFE 6DC3                   MOV         R12,R13
    00000B00 DE39                   MOV.L       L1235+44,R14; _Bdisp_AllClr_DDVRAM
    00000B02 7D10                   ADD         #16,R13
      15062020.c   525        while (1){
    00000B04              L1124:                            
      15062020.c   526            unsigned int key;       
      15062020.c   527            GetKey(&key);
    00000B04 4B0B                   JSR         @R11
    00000B06 64F3                   MOV         R15,R4
      15062020.c   528            if(KEY_CTRL_EXIT == key) {
    00000B08 62F2                   MOV.L       @R15,R2
    00000B0A 32C0                   CMP/EQ      R12,R2
    00000B0C 8B03                   BF          L1125
      15062020.c   529                Bdisp_AllClr_DDVRAM();
    00000B0E 4E0B                   JSR         @R14
    00000B10 0009                   NOP
      15062020.c   530                lf1menu();
    00000B12 BC3B                   BSR         _lf1menu
    00000B14 0009                   NOP
    00000B16              L1125:                            
      15062020.c   531            }
      15062020.c   532            if(KEY_CTRL_UP == key) {
    00000B16 63F2                   MOV.L       @R15,R3
    00000B18 33D0                   CMP/EQ      R13,R3
    00000B1A 8BF3                   BF          L1124
      15062020.c   533                Bdisp_AllClr_DDVRAM();
    00000B1C 4E0B                   JSR         @R14
    00000B1E 0009                   NOP
      15062020.c   534                lf1menuitem4_3();
    00000B20 BF5A                   BSR         _lf1menuitem4_3
    00000B22 0009                   NOP
    00000B24 AFEE                   BRA         L1124




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B26 0009                   NOP
      15062020.c   535            }
      15062020.c   536        } 
      15062020.c   537    }
      15062020.c   538    int lf1menuitem5(){
    00000B28              _lf1menuitem5:                   ; function: lf1menuitem5
                                                           ; frame size=4
      15062020.c   539        locate(1,1);
    00000B28 DE25                   MOV.L       L1235+4,R14; _locate
    00000B2A E501                   MOV         #1,R5
    00000B2C 7FFC                   ADD         #-4,R15
    00000B2E 4E0B                   JSR         @R14
    00000B30 6453                   MOV         R5,R4
      15062020.c   540        Print((unsigned char*)"Preisbildungs... 1/3");
    00000B32 DD24                   MOV.L       L1235+8,R13; _Print
    00000B34 D42D                   MOV.L       L1235+48,R4; L559
    00000B36 4D0B                   JSR         @R13
    00000B38 0009                   NOP
      15062020.c   541        locate(1,2);
    00000B3A E502                   MOV         #2,R5
    00000B3C 4E0B                   JSR         @R14
    00000B3E E401                   MOV         #1,R4
      15062020.c   542        Print((unsigned char*)"-Markt");
    00000B40 D42B                   MOV.L       L1235+52,R4; L560
    00000B42 4D0B                   JSR         @R13
    00000B44 0009                   NOP
      15062020.c   543        locate(2,3);
    00000B46 E503                   MOV         #3,R5
    00000B48 4E0B                   JSR         @R14
    00000B4A E402                   MOV         #2,R4
      15062020.c   544        Print((unsigned char*)"Angebot<->Nachfrage");
    00000B4C D429                   MOV.L       L1235+56,R4; L561
    00000B4E 4D0B                   JSR         @R13
    00000B50 0009                   NOP
      15062020.c   545        locate(2,4);
    00000B52 E504                   MOV         #4,R5
    00000B54 4E0B                   JSR         @R14
    00000B56 E402                   MOV         #2,R4
      15062020.c   546        Print((unsigned char*)"Der Markt wird");
    00000B58 D427                   MOV.L       L1235+60,R4; L562
    00000B5A 4D0B                   JSR         @R13
    00000B5C 0009                   NOP
      15062020.c   547        locate(2,5);
    00000B5E E505                   MOV         #5,R5
    00000B60 4E0B                   JSR         @R14
    00000B62 E402                   MOV         #2,R4
      15062020.c   548        Print((unsigned char*)"Mithilfe eines");
    00000B64 D425                   MOV.L       L1235+64,R4; L563
    00000B66 4D0B                   JSR         @R13
    00000B68 0009                   NOP
      15062020.c   549        locate(2,6);
    00000B6A E506                   MOV         #6,R5
    00000B6C 4E0B                   JSR         @R14
    00000B6E E402                   MOV         #2,R4
      15062020.c   550        Print((unsigned char*)"Modells vereinfacht");
    00000B70 D423                   MOV.L       L1235+68,R4; L564
    00000B72 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B74 0009                   NOP
      15062020.c   551        locate(2,7);
    00000B76 E507                   MOV         #7,R5
    00000B78 4E0B                   JSR         @R14
    00000B7A E402                   MOV         #2,R4
      15062020.c   552        Print((unsigned char*)"dargestellt:");
    00000B7C D421                   MOV.L       L1235+72,R4; L565
    00000B7E 4D0B                   JSR         @R13
    00000B80 0009                   NOP
      15062020.c   553        locate(3,8);
    00000B82 E508                   MOV         #8,R5
    00000B84 4E0B                   JSR         @R14
    00000B86 E403                   MOV         #3,R4
      15062020.c   554        Print((unsigned char*)"vollkommener Markt");
    00000B88 D41F                   MOV.L       L1235+76,R4; L566
    00000B8A 4D0B                   JSR         @R13
    00000B8C 0009                   NOP
    00000B8E DB15                   MOV.L       L1235+40,R11; _GetKey
    00000B90 9C14                   MOV.W       L1235,R12  ; H'7532
    00000B92 6DC3                   MOV         R12,R13
    00000B94 DE14                   MOV.L       L1235+44,R14; _Bdisp_AllClr_DDVRAM
    00000B96 7D15                   ADD         #21,R13
      15062020.c   555        while (1){
    00000B98              L1128:                            
      15062020.c   556            unsigned int key;       
      15062020.c   557            GetKey(&key);
    00000B98 4B0B                   JSR         @R11
    00000B9A 64F3                   MOV         R15,R4
      15062020.c   558            if(KEY_CTRL_EXIT == key) {
    00000B9C 62F2                   MOV.L       @R15,R2
    00000B9E 32C0                   CMP/EQ      R12,R2
    00000BA0 8B03                   BF          L1129
      15062020.c   559                Bdisp_AllClr_DDVRAM();
    00000BA2 4E0B                   JSR         @R14
    00000BA4 0009                   NOP
      15062020.c   560                lf1menu();
    00000BA6 BBF1                   BSR         _lf1menu
    00000BA8 0009                   NOP
    00000BAA              L1129:                            
      15062020.c   561            }
      15062020.c   562            if(KEY_CTRL_DOWN == key) {
    00000BAA 63F2                   MOV.L       @R15,R3
    00000BAC 33D0                   CMP/EQ      R13,R3
    00000BAE 8BF3                   BF          L1128
      15062020.c   563                Bdisp_AllClr_DDVRAM();
    00000BB0 4E0B                   JSR         @R14
    00000BB2 0009                   NOP
      15062020.c   564                lf1menuitem5_1();
    00000BB4 B02A                   BSR         _lf1menuitem5_1
    00000BB6 0009                   NOP
    00000BB8 AFEE                   BRA         L1128
    00000BBA 0009                   NOP
    00000BBC              L1235:                            
    00000BBC 7532                   .DATA.W     H'7532
    00000BBE 0000                   .DATA.W     0
    00000BC0 <00000000>             .DATA.L     _locate
    00000BC4 <00000000>             .DATA.L     _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BC8 <00000000>             .DATA.L     L548
    00000BCC <00000000>             .DATA.L     L549
    00000BD0 <00000000>             .DATA.L     L550
    00000BD4 <00000000>             .DATA.L     L551
    00000BD8 <00000000>             .DATA.L     L424
    00000BDC <00000000>             .DATA.L     L552
    00000BE0 <00000000>             .DATA.L     L553
    00000BE4 <00000000>             .DATA.L     _GetKey
    00000BE8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000BEC <00000000>             .DATA.L     L559
    00000BF0 <00000000>             .DATA.L     L560
    00000BF4 <00000000>             .DATA.L     L561
    00000BF8 <00000000>             .DATA.L     L562
    00000BFC <00000000>             .DATA.L     L563
    00000C00 <00000000>             .DATA.L     L564
    00000C04 <00000000>             .DATA.L     L565
    00000C08 <00000000>             .DATA.L     L566
      15062020.c   565            }
      15062020.c   566        } 
      15062020.c   567    }
      15062020.c   568    int lf1menuitem5_1(){
    00000C0C              _lf1menuitem5_1:                 ; function: lf1menuitem5_1
                                                           ; frame size=4
      15062020.c   569        locate(1,1);
    00000C0C DE26                   MOV.L       L1236+4,R14; _locate
    00000C0E E501                   MOV         #1,R5
    00000C10 7FFC                   ADD         #-4,R15
    00000C12 4E0B                   JSR         @R14
    00000C14 6453                   MOV         R5,R4
      15062020.c   570        Print((unsigned char*)"Preisbildungs... 2/3");
    00000C16 DD25                   MOV.L       L1236+8,R13; _Print
    00000C18 D425                   MOV.L       L1236+12,R4; L573
    00000C1A 4D0B                   JSR         @R13
    00000C1C 0009                   NOP
      15062020.c   571        locate(2,2);
    00000C1E E502                   MOV         #2,R5
    00000C20 4E0B                   JSR         @R14
    00000C22 6453                   MOV         R5,R4
      15062020.c   572        Print((unsigned char*)"Realitat:");
    00000C24 D423                   MOV.L       L1236+16,R4; L574
    00000C26 4D0B                   JSR         @R13
    00000C28 0009                   NOP
      15062020.c   573        locate(3,3);
    00000C2A E503                   MOV         #3,R5
    00000C2C 4E0B                   JSR         @R14
    00000C2E 6453                   MOV         R5,R4
      15062020.c   574        Print((unsigned char*)"unvollkomm. Markt");
    00000C30 D421                   MOV.L       L1236+20,R4; L575
    00000C32 4D0B                   JSR         @R13
    00000C34 0009                   NOP
      15062020.c   575        locate(1,5);
    00000C36 E505                   MOV         #5,R5
    00000C38 4E0B                   JSR         @R14
    00000C3A E401                   MOV         #1,R4
      15062020.c   576        Print((unsigned char*)"Angebotskurve");
    00000C3C D41F                   MOV.L       L1236+24,R4; L576
    00000C3E 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C40 0009                   NOP
      15062020.c   577        locate(2,6);
    00000C42 E506                   MOV         #6,R5
    00000C44 4E0B                   JSR         @R14
    00000C46 E402                   MOV         #2,R4
      15062020.c   578        Print((unsigned char*)"1) Angebotskurve");
    00000C48 D41D                   MOV.L       L1236+28,R4; L577
    00000C4A 4D0B                   JSR         @R13
    00000C4C 0009                   NOP
      15062020.c   579        locate(2,7);
    00000C4E E507                   MOV         #7,R5
    00000C50 4E0B                   JSR         @R14
    00000C52 E402                   MOV         #2,R4
      15062020.c   580        Print((unsigned char*)"2) Kaufermarkt");
    00000C54 D41B                   MOV.L       L1236+32,R4; L578
    00000C56 4D0B                   JSR         @R13
    00000C58 0009                   NOP
      15062020.c   581        locate(2,8);
    00000C5A E508                   MOV         #8,R5
    00000C5C 4E0B                   JSR         @R14
    00000C5E E402                   MOV         #2,R4
      15062020.c   582        Print((unsigned char*)"3) Gleichgew.spreis");
    00000C60 D419                   MOV.L       L1236+36,R4; L579
    00000C62 4D0B                   JSR         @R13
    00000C64 0009                   NOP
    00000C66 DA19                   MOV.L       L1236+40,R10; _GetKey
    00000C68 9B1C                   MOV.W       L1236,R11  ; H'7542
    00000C6A 6CB3                   MOV         R11,R12
    00000C6C 9D1B                   MOV.W       L1236+2,R13; H'7547
    00000C6E 7CF0                   ADD         #-16,R12
    00000C70 DE17                   MOV.L       L1236+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   583        while (1) {
    00000C72              L1132:                            
      15062020.c   584            unsigned int key;       
      15062020.c   585            GetKey(&key);
    00000C72 4A0B                   JSR         @R10
    00000C74 64F3                   MOV         R15,R4
      15062020.c   586            if(KEY_CTRL_EXIT == key) {
    00000C76 62F2                   MOV.L       @R15,R2
    00000C78 32C0                   CMP/EQ      R12,R2
    00000C7A 8B03                   BF          L1133
      15062020.c   587                Bdisp_AllClr_DDVRAM();
    00000C7C 4E0B                   JSR         @R14
    00000C7E 0009                   NOP
      15062020.c   588                lf1menu();
    00000C80 BB84                   BSR         _lf1menu
    00000C82 0009                   NOP
    00000C84              L1133:                            
      15062020.c   589            }
      15062020.c   590            if(KEY_CTRL_UP == key) {
    00000C84 63F2                   MOV.L       @R15,R3
    00000C86 33B0                   CMP/EQ      R11,R3
    00000C88 8B03                   BF          L1134
      15062020.c   591                Bdisp_AllClr_DDVRAM();
    00000C8A 4E0B                   JSR         @R14
    00000C8C 0009                   NOP
      15062020.c   592                lf1menuitem5();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C8E BF4B                   BSR         _lf1menuitem5
    00000C90 0009                   NOP
    00000C92              L1134:                            
      15062020.c   593            }
      15062020.c   594            if(KEY_CTRL_DOWN == key) {
    00000C92 62F2                   MOV.L       @R15,R2
    00000C94 32D0                   CMP/EQ      R13,R2
    00000C96 8BEC                   BF          L1132
      15062020.c   595                Bdisp_AllClr_DDVRAM();
    00000C98 4E0B                   JSR         @R14
    00000C9A 0009                   NOP
      15062020.c   596                lf1menuitem5_2();
    00000C9C B01A                   BSR         _lf1menuitem5_2
    00000C9E 0009                   NOP
    00000CA0 AFE7                   BRA         L1132
    00000CA2 0009                   NOP
    00000CA4              L1236:                            
    00000CA4 7542                   .DATA.W     H'7542
    00000CA6 7547                   .DATA.W     H'7547
    00000CA8 <00000000>             .DATA.L     _locate
    00000CAC <00000000>             .DATA.L     _Print
    00000CB0 <00000000>             .DATA.L     L573
    00000CB4 <00000000>             .DATA.L     L574
    00000CB8 <00000000>             .DATA.L     L575
    00000CBC <00000000>             .DATA.L     L576
    00000CC0 <00000000>             .DATA.L     L577
    00000CC4 <00000000>             .DATA.L     L578
    00000CC8 <00000000>             .DATA.L     L579
    00000CCC <00000000>             .DATA.L     _GetKey
    00000CD0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   597            }
      15062020.c   598        } 
      15062020.c   599    }
      15062020.c   600    int lf1menuitem5_2(){
    00000CD4              _lf1menuitem5_2:                 ; function: lf1menuitem5_2
                                                           ; frame size=4
      15062020.c   601        locate(1,1);
    00000CD4 DE22                   MOV.L       L1237+4,R14; _locate
    00000CD6 E501                   MOV         #1,R5
    00000CD8 7FFC                   ADD         #-4,R15
    00000CDA 4E0B                   JSR         @R14
    00000CDC 6453                   MOV         R5,R4
      15062020.c   602        Print((unsigned char*)"Preisbildungs... 3/3");
    00000CDE DD21                   MOV.L       L1237+8,R13; _Print
    00000CE0 D421                   MOV.L       L1237+12,R4; L587
    00000CE2 4D0B                   JSR         @R13
    00000CE4 0009                   NOP
      15062020.c   603        locate(2,2);
    00000CE6 E502                   MOV         #2,R5
    00000CE8 4E0B                   JSR         @R14
    00000CEA 6453                   MOV         R5,R4
      15062020.c   604        Print((unsigned char*)"4) Verkaufermarkt");
    00000CEC D41F                   MOV.L       L1237+16,R4; L588
    00000CEE 4D0B                   JSR         @R13
    00000CF0 0009                   NOP
      15062020.c   605        locate(2,3);
    00000CF2 E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CF4 4E0B                   JSR         @R14
    00000CF6 E402                   MOV         #2,R4
      15062020.c   606        Print((unsigned char*)"5) Nachfragekurve");
    00000CF8 D41D                   MOV.L       L1237+20,R4; L589
    00000CFA 4D0B                   JSR         @R13
    00000CFC 0009                   NOP
      15062020.c   607        locate(1,5);
    00000CFE E505                   MOV         #5,R5
    00000D00 4E0B                   JSR         @R14
    00000D02 E401                   MOV         #1,R4
      15062020.c   608        Print((unsigned char*)"X = 50Eur, 350Stk.");
    00000D04 D41B                   MOV.L       L1237+24,R4; L590
    00000D06 4D0B                   JSR         @R13
    00000D08 0009                   NOP
      15062020.c   609        locate(2,6);
    00000D0A E506                   MOV         #6,R5
    00000D0C 4E0B                   JSR         @R14
    00000D0E E402                   MOV         #2,R4
      15062020.c   610        Print((unsigned char*)"Viel Umsatz=50Eur.");
    00000D10 D419                   MOV.L       L1237+28,R4; L591
    00000D12 4D0B                   JSR         @R13
    00000D14 0009                   NOP
      15062020.c   611        locate(2,7);
    00000D16 E507                   MOV         #7,R5
    00000D18 4E0B                   JSR         @R14
    00000D1A E402                   MOV         #2,R4
      15062020.c   612        Print((unsigned char*)"Viel Umsatz=350Stk.");
    00000D1C D417                   MOV.L       L1237+32,R4; L592
    00000D1E 4D0B                   JSR         @R13
    00000D20 0009                   NOP
      15062020.c   613        locate(2,8);
    00000D22 E508                   MOV         #8,R5
    00000D24 4E0B                   JSR         @R14
    00000D26 E402                   MOV         #2,R4
      15062020.c   614        Print((unsigned char*)"Umax=50E*350S=17,5k");
    00000D28 D415                   MOV.L       L1237+36,R4; L593
    00000D2A 4D0B                   JSR         @R13
    00000D2C 0009                   NOP
    00000D2E DB15                   MOV.L       L1237+40,R11; _GetKey
    00000D30 9C14                   MOV.W       L1237,R12  ; H'7532
    00000D32 6DC3                   MOV         R12,R13
    00000D34 DE14                   MOV.L       L1237+44,R14; _Bdisp_AllClr_DDVRAM
    00000D36 7D10                   ADD         #16,R13
      15062020.c   615        while (1) {
    00000D38              L1137:                            
      15062020.c   616            unsigned int key;       
      15062020.c   617            GetKey(&key);
    00000D38 4B0B                   JSR         @R11
    00000D3A 64F3                   MOV         R15,R4
      15062020.c   618            if(KEY_CTRL_EXIT == key) {
    00000D3C 62F2                   MOV.L       @R15,R2
    00000D3E 32C0                   CMP/EQ      R12,R2
    00000D40 8B03                   BF          L1138
      15062020.c   619                Bdisp_AllClr_DDVRAM();
    00000D42 4E0B                   JSR         @R14
    00000D44 0009                   NOP
      15062020.c   620                lf1menu();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D46 BB21                   BSR         _lf1menu
    00000D48 0009                   NOP
    00000D4A              L1138:                            
      15062020.c   621            }
      15062020.c   622            if(KEY_CTRL_UP == key) {
    00000D4A 63F2                   MOV.L       @R15,R3
    00000D4C 33D0                   CMP/EQ      R13,R3
    00000D4E 8BF3                   BF          L1137
      15062020.c   623                Bdisp_AllClr_DDVRAM();
    00000D50 4E0B                   JSR         @R14
    00000D52 0009                   NOP
      15062020.c   624                lf1menuitem5_1();
    00000D54 BF5A                   BSR         _lf1menuitem5_1
    00000D56 0009                   NOP
    00000D58 AFEE                   BRA         L1137
    00000D5A 0009                   NOP
    00000D5C              L1237:                            
    00000D5C 7532                   .DATA.W     H'7532
    00000D5E 0000                   .DATA.W     0
    00000D60 <00000000>             .DATA.L     _locate
    00000D64 <00000000>             .DATA.L     _Print
    00000D68 <00000000>             .DATA.L     L587
    00000D6C <00000000>             .DATA.L     L588
    00000D70 <00000000>             .DATA.L     L589
    00000D74 <00000000>             .DATA.L     L590
    00000D78 <00000000>             .DATA.L     L591
    00000D7C <00000000>             .DATA.L     L592
    00000D80 <00000000>             .DATA.L     L593
    00000D84 <00000000>             .DATA.L     _GetKey
    00000D88 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   625            }
      15062020.c   626        } 
      15062020.c   627    }
      15062020.c   628    
      15062020.c   629    //Lernfeld 2
      15062020.c   630    int lf2menu() {
    00000D8C              _lf2menu:                        ; function: lf2menu
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
      15062020.c   631        unsigned int i;
      15062020.c   632        unsigned int auswahl = 3;
      15062020.c   633        unsigned int menuItemsX = 2;
      15062020.c   634        unsigned int menuItemsY = 3;
      15062020.c   635        unsigned int menuItemsNbr = 4;
      15062020.c   636        unsigned char * menuItems[] = {
      15062020.c   637            "Organisation",
      15062020.c   638            "Regelkreis",
      15062020.c   639            "Organigramm",
      15062020.c   640            "ERP / SAP Systeme"
      15062020.c   641        };
    00000D8C D240                   MOV.L       L1238+8,R2 ; L605
    00000D8E 7FE8                   ADD         #-24,R15
    00000D90 EE03                   MOV         #3,R14
    00000D92 E304                   MOV         #4,R3
    00000D94 1F31                   MOV.L       R3,@(4,R15)
    00000D96 61F3                   MOV         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D98 D33E                   MOV.L       L1238+12,R3; __quick_evn_mvn
    00000D9A 7108                   ADD         #8,R1
    00000D9C 430B                   JSR         @R3
    00000D9E E010                   MOV         #16,R0
      15062020.c   642        Bdisp_AllClr_DDVRAM();
    00000DA0 DB3D                   MOV.L       L1238+16,R11; _Bdisp_AllClr_DDVRAM
    00000DA2 4B0B                   JSR         @R11
    00000DA4 0009                   NOP
      15062020.c   643        // TITLE 
      15062020.c   644        locate(1,1);
    00000DA6 E501                   MOV         #1,R5
    00000DA8 DD3C                   MOV.L       L1238+20,R13; _locate
    00000DAA 4D0B                   JSR         @R13
    00000DAC 6453                   MOV         R5,R4
      15062020.c   645        Print((unsigned char*)"Lernfeld 2");  
    00000DAE DC3C                   MOV.L       L1238+24,R12; _Print
    00000DB0 D43C                   MOV.L       L1238+28,R4; L354
    00000DB2 4C0B                   JSR         @R12
    00000DB4 0009                   NOP
      15062020.c   646        // Menu Items
      15062020.c   647        for(i=0; i < menuItemsNbr; i=i+1){
    00000DB6 EA00                   MOV         #0,R10
    00000DB8 69F3                   MOV         R15,R9
    00000DBA 7908                   ADD         #8,R9
    00000DBC E803                   MOV         #3,R8
    00000DBE              L1141:                            
      15062020.c   648            locate(menuItemsX, menuItemsY+i);
    00000DBE 6583                   MOV         R8,R5
    00000DC0 4D0B                   JSR         @R13
    00000DC2 E402                   MOV         #2,R4
      15062020.c   649            Print(menuItems[i]);
    00000DC4 4C0B                   JSR         @R12
    00000DC6 6496                   MOV.L       @R9+,R4
    00000DC8 52F1                   MOV.L       @(4,R15),R2
    00000DCA 7A01                   ADD         #1,R10
    00000DCC 3A22                   CMP/HS      R2,R10
    00000DCE 8FF6                   BF/S        L1141
    00000DD0 7801                   ADD         #1,R8
    00000DD2 9859                   MOV.W       L1238,R8   ; H'7542
    00000DD4 DA34                   MOV.L       L1238+32,R10; L366
    00000DD6 6983                   MOV         R8,R9
    00000DD8 7905                   ADD         #5,R9
      15062020.c   650        };
      15062020.c   651       
      15062020.c   652        // Cursor    
      15062020.c   653        while (1){
    00000DDA              L1143:                            
      15062020.c   654            unsigned int key;
      15062020.c   655            locate(1,auswahl);
    00000DDA 65E3                   MOV         R14,R5
    00000DDC 4D0B                   JSR         @R13
    00000DDE E401                   MOV         #1,R4
      15062020.c   656            Print((unsigned char*)">");       
    00000DE0 D432                   MOV.L       L1238+36,R4; L363
    00000DE2 4C0B                   JSR         @R12
    00000DE4 0009                   NOP
      15062020.c   657            GetKey(&key);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE6 D332                   MOV.L       L1238+40,R3; _GetKey
    00000DE8 430B                   JSR         @R3
    00000DEA 64F3                   MOV         R15,R4
      15062020.c   658            if(KEY_CTRL_UP == key) {
    00000DEC 62F2                   MOV.L       @R15,R2
    00000DEE 3280                   CMP/EQ      R8,R2
    00000DF0 8B0E                   BF          L1144
      15062020.c   659                if (auswahl == 3) {
    00000DF2 60E3                   MOV         R14,R0
    00000DF4 8803                   CMP/EQ      #3,R0
    00000DF6 8B05                   BF          L1145
      15062020.c   660                    locate(1,auswahl);
    00000DF8 65E3                   MOV         R14,R5
    00000DFA 4D0B                   JSR         @R13
    00000DFC E401                   MOV         #1,R4
      15062020.c   661                    Print((unsigned char*)" ");
    00000DFE 4C0B                   JSR         @R12
    00000E00 64A3                   MOV         R10,R4
      15062020.c   662                    auswahl = auswahl + 4;
    00000E02 7E04                   ADD         #4,R14
    00000E04              L1145:                            
      15062020.c   663                }
      15062020.c   664                locate(1,auswahl);
    00000E04 65E3                   MOV         R14,R5
    00000E06 4D0B                   JSR         @R13
    00000E08 E401                   MOV         #1,R4
      15062020.c   665                Print((unsigned char*)" ");
    00000E0A 4C0B                   JSR         @R12
    00000E0C 64A3                   MOV         R10,R4
      15062020.c   666                auswahl = auswahl - 1;
    00000E0E 7EFF                   ADD         #-1,R14
    00000E10              L1144:                            
      15062020.c   667            };
      15062020.c   668            if(KEY_CTRL_DOWN == key) {
    00000E10 63F2                   MOV.L       @R15,R3
    00000E12 3390                   CMP/EQ      R9,R3
    00000E14 8B0E                   BF          L1146
      15062020.c   669                if (auswahl == 6) {
    00000E16 60E3                   MOV         R14,R0
    00000E18 8806                   CMP/EQ      #6,R0
    00000E1A 8B05                   BF          L1147
      15062020.c   670                    locate(1,auswahl);
    00000E1C 65E3                   MOV         R14,R5
    00000E1E 4D0B                   JSR         @R13
    00000E20 E401                   MOV         #1,R4
      15062020.c   671                    Print((unsigned char*)" ");
    00000E22 4C0B                   JSR         @R12
    00000E24 64A3                   MOV         R10,R4
      15062020.c   672                    auswahl = auswahl - 4;
    00000E26 7EFC                   ADD         #-4,R14
    00000E28              L1147:                            
      15062020.c   673                }
      15062020.c   674                locate(1,auswahl);
    00000E28 65E3                   MOV         R14,R5
    00000E2A 4D0B                   JSR         @R13
    00000E2C E401                   MOV         #1,R4
      15062020.c   675                Print((unsigned char*)" ");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E2E 4C0B                   JSR         @R12
    00000E30 64A3                   MOV         R10,R4
      15062020.c   676                auswahl = auswahl + 1;
    00000E32 7E01                   ADD         #1,R14
    00000E34              L1146:                            
      15062020.c   677            };
      15062020.c   678            if (KEY_CTRL_EXE == key) {
    00000E34 9229                   MOV.W       L1238+2,R2 ; H'7534
    00000E36 63F2                   MOV.L       @R15,R3
    00000E38 3320                   CMP/EQ      R2,R3
    00000E3A 8B1B                   BF          L1148
      15062020.c   679                if (auswahl == 3) {
    00000E3C 60E3                   MOV         R14,R0
    00000E3E 8803                   CMP/EQ      #3,R0
    00000E40 8B03                   BF          L1149
      15062020.c   680                    Bdisp_AllClr_DDVRAM();
    00000E42 4B0B                   JSR         @R11
    00000E44 0009                   NOP
      15062020.c   681                    lf2menuitem1();
    00000E46 B035                   BSR         _lf2menuitem1
    00000E48 0009                   NOP
    00000E4A              L1149:                            
      15062020.c   682                }
      15062020.c   683                if (auswahl == 4) {
    00000E4A 60E3                   MOV         R14,R0
    00000E4C 8804                   CMP/EQ      #4,R0
    00000E4E 8B03                   BF          L1150
      15062020.c   684                    Bdisp_AllClr_DDVRAM();
    00000E50 4B0B                   JSR         @R11
    00000E52 0009                   NOP
      15062020.c   685                    lf2menuitem2();
    00000E54 B19C                   BSR         _lf2menuitem2
    00000E56 0009                   NOP
    00000E58              L1150:                            
      15062020.c   686                }
      15062020.c   687                if (auswahl == 5) {
    00000E58 60E3                   MOV         R14,R0
    00000E5A 8805                   CMP/EQ      #5,R0
    00000E5C 8B03                   BF          L1151
      15062020.c   688                    Bdisp_AllClr_DDVRAM();
    00000E5E 4B0B                   JSR         @R11
    00000E60 0009                   NOP
      15062020.c   689                    lf2menuitem3();
    00000E62 B1F7                   BSR         _lf2menuitem3
    00000E64 0009                   NOP
    00000E66              L1151:                            
      15062020.c   690                }
      15062020.c   691                if (auswahl == 6) {
    00000E66 60E3                   MOV         R14,R0
    00000E68 8806                   CMP/EQ      #6,R0
    00000E6A 8B03                   BF          L1148
      15062020.c   692                    Bdisp_AllClr_DDVRAM();
    00000E6C 4B0B                   JSR         @R11
    00000E6E 0009                   NOP
      15062020.c   693                    lf2menuitem4();
    00000E70 B22B                   BSR         _lf2menuitem4
    00000E72 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E74              L1148:                            
      15062020.c   694                }
      15062020.c   695            };
      15062020.c   696            if (KEY_CTRL_EXIT == key) {
    00000E74 930A                   MOV.W       L1238+4,R3 ; H'7532
    00000E76 62F2                   MOV.L       @R15,R2
    00000E78 3230                   CMP/EQ      R3,R2
    00000E7A 8BAE                   BF          L1143
      15062020.c   697                Bdisp_AllClr_DDVRAM();
    00000E7C 4B0B                   JSR         @R11
    00000E7E 0009                   NOP
      15062020.c   698                firstMenu();
    00000E80 B8D2                   BSR         _firstMenu
    00000E82 0009                   NOP
    00000E84 AFA9                   BRA         L1143
    00000E86 0009                   NOP
    00000E88              L1238:                            
    00000E88 7542                   .DATA.W     H'7542
    00000E8A 7534                   .DATA.W     H'7534
    00000E8C 7532                   .DATA.W     H'7532
    00000E8E 0000                   .DATA.W     0
    00000E90 <00000000>             .DATA.L     L605
    00000E94 <00000000>             .DATA.L     __quick_evn_mvn
    00000E98 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000E9C <00000000>             .DATA.L     _locate
    00000EA0 <00000000>             .DATA.L     _Print
    00000EA4 <00000000>             .DATA.L     L354
    00000EA8 <00000000>             .DATA.L     L366
    00000EAC <00000000>             .DATA.L     L363
    00000EB0 <00000000>             .DATA.L     _GetKey
      15062020.c   699            }
      15062020.c   700       }
      15062020.c   701    }
      15062020.c   702    int lf2menuitem1(){   
    00000EB4              _lf2menuitem1:                   ; function: lf2menuitem1
                                                           ; frame size=4
      15062020.c   703        locate(1,1);
    00000EB4 DE22                   MOV.L       L1239+4,R14; _locate
    00000EB6 E501                   MOV         #1,R5
    00000EB8 7FFC                   ADD         #-4,R15
    00000EBA 4E0B                   JSR         @R14
    00000EBC 6453                   MOV         R5,R4
      15062020.c   704        Print((unsigned char*)"Organisation 1/4");
    00000EBE DD21                   MOV.L       L1239+8,R13; _Print
    00000EC0 D421                   MOV.L       L1239+12,R4; L628
    00000EC2 4D0B                   JSR         @R13
    00000EC4 0009                   NOP
      15062020.c   705        locate(1,2);
    00000EC6 E502                   MOV         #2,R5
    00000EC8 4E0B                   JSR         @R14
    00000ECA E401                   MOV         #1,R4
      15062020.c   706        Print((unsigned char*)"-Zweckmassigkeit");
    00000ECC D41F                   MOV.L       L1239+16,R4; L629
    00000ECE 4D0B                   JSR         @R13
    00000ED0 0009                   NOP
      15062020.c   707        locate(2,3);
    00000ED2 E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ED4 4E0B                   JSR         @R14
    00000ED6 E402                   MOV         #2,R4
      15062020.c   708        Print((unsigned char*)"Aufgab./Tatigkeiten");
    00000ED8 D41D                   MOV.L       L1239+20,R4; L630
    00000EDA 4D0B                   JSR         @R13
    00000EDC 0009                   NOP
      15062020.c   709        locate(2,4);
    00000EDE E504                   MOV         #4,R5
    00000EE0 4E0B                   JSR         @R14
    00000EE2 E402                   MOV         #2,R4
      15062020.c   710        Print((unsigned char*)"sollten dem");
    00000EE4 D41B                   MOV.L       L1239+24,R4; L631
    00000EE6 4D0B                   JSR         @R13
    00000EE8 0009                   NOP
      15062020.c   711        locate(2,5);
    00000EEA E505                   MOV         #5,R5
    00000EEC 4E0B                   JSR         @R14
    00000EEE E402                   MOV         #2,R4
      15062020.c   712        Print((unsigned char*)"Unternehmensziel");
    00000EF0 D419                   MOV.L       L1239+28,R4; L632
    00000EF2 4D0B                   JSR         @R13
    00000EF4 0009                   NOP
      15062020.c   713        locate(2,6);
    00000EF6 E506                   MOV         #6,R5
    00000EF8 4E0B                   JSR         @R14
    00000EFA E402                   MOV         #2,R4
      15062020.c   714        Print((unsigned char*)"entsprechen alles");
    00000EFC D417                   MOV.L       L1239+32,R4; L633
    00000EFE 4D0B                   JSR         @R13
    00000F00 0009                   NOP
      15062020.c   715        locate(2,7);
    00000F02 E507                   MOV         #7,R5
    00000F04 4E0B                   JSR         @R14
    00000F06 E402                   MOV         #2,R4
      15062020.c   716        Print((unsigned char*)"andere ist unzweck.");
    00000F08 D415                   MOV.L       L1239+36,R4; L634
    00000F0A 4D0B                   JSR         @R13
    00000F0C 0009                   NOP
    00000F0E DB15                   MOV.L       L1239+40,R11; _GetKey
    00000F10 9C14                   MOV.W       L1239,R12  ; H'7532
    00000F12 6DC3                   MOV         R12,R13
    00000F14 DE14                   MOV.L       L1239+44,R14; _Bdisp_AllClr_DDVRAM
    00000F16 7D15                   ADD         #21,R13
      15062020.c   717        while (1){
    00000F18              L1155:                            
      15062020.c   718            unsigned int key;       
      15062020.c   719            GetKey(&key);
    00000F18 4B0B                   JSR         @R11
    00000F1A 64F3                   MOV         R15,R4
      15062020.c   720            if(KEY_CTRL_EXIT == key) {
    00000F1C 62F2                   MOV.L       @R15,R2
    00000F1E 32C0                   CMP/EQ      R12,R2
    00000F20 8B03                   BF          L1156
      15062020.c   721                Bdisp_AllClr_DDVRAM();
    00000F22 4E0B                   JSR         @R14
    00000F24 0009                   NOP
      15062020.c   722                lf2menu();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F26 BF31                   BSR         _lf2menu
    00000F28 0009                   NOP
    00000F2A              L1156:                            
      15062020.c   723            }
      15062020.c   724            if(KEY_CTRL_DOWN == key) {
    00000F2A 63F2                   MOV.L       @R15,R3
    00000F2C 33D0                   CMP/EQ      R13,R3
    00000F2E 8BF3                   BF          L1155
      15062020.c   725                Bdisp_AllClr_DDVRAM();
    00000F30 4E0B                   JSR         @R14
    00000F32 0009                   NOP
      15062020.c   726                lf2menuitem1_1();
    00000F34 B01A                   BSR         _lf2menuitem1_1
    00000F36 0009                   NOP
    00000F38 AFEE                   BRA         L1155
    00000F3A 0009                   NOP
    00000F3C              L1239:                            
    00000F3C 7532                   .DATA.W     H'7532
    00000F3E 0000                   .DATA.W     0
    00000F40 <00000000>             .DATA.L     _locate
    00000F44 <00000000>             .DATA.L     _Print
    00000F48 <00000000>             .DATA.L     L628
    00000F4C <00000000>             .DATA.L     L629
    00000F50 <00000000>             .DATA.L     L630
    00000F54 <00000000>             .DATA.L     L631
    00000F58 <00000000>             .DATA.L     L632
    00000F5C <00000000>             .DATA.L     L633
    00000F60 <00000000>             .DATA.L     L634
    00000F64 <00000000>             .DATA.L     _GetKey
    00000F68 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   727            }
      15062020.c   728        } 
      15062020.c   729    }
      15062020.c   730    int lf2menuitem1_1(){   
    00000F6C              _lf2menuitem1_1:                 ; function: lf2menuitem1_1
                                                           ; frame size=4
      15062020.c   731        locate(1,1);
    00000F6C DE26                   MOV.L       L1240+4,R14; _locate
    00000F6E E501                   MOV         #1,R5
    00000F70 7FFC                   ADD         #-4,R15
    00000F72 4E0B                   JSR         @R14
    00000F74 6453                   MOV         R5,R4
      15062020.c   732        Print((unsigned char*)"Organisation 2/4");
    00000F76 DD25                   MOV.L       L1240+8,R13; _Print
    00000F78 D425                   MOV.L       L1240+12,R4; L641
    00000F7A 4D0B                   JSR         @R13
    00000F7C 0009                   NOP
      15062020.c   733        locate(1,2);
    00000F7E E502                   MOV         #2,R5
    00000F80 4E0B                   JSR         @R14
    00000F82 E401                   MOV         #1,R4
      15062020.c   734        Print((unsigned char*)"-Wirtschaftlichkeit");
    00000F84 D423                   MOV.L       L1240+16,R4; L642
    00000F86 4D0B                   JSR         @R13
    00000F88 0009                   NOP
      15062020.c   735        locate(2,3);
    00000F8A E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F8C 4E0B                   JSR         @R14
    00000F8E E402                   MOV         #2,R4
      15062020.c   736        Print((unsigned char*)"T, A, Regelungen");
    00000F90 D421                   MOV.L       L1240+20,R4; L643
    00000F92 4D0B                   JSR         @R13
    00000F94 0009                   NOP
      15062020.c   737        locate(2,4);
    00000F96 E504                   MOV         #4,R5
    00000F98 4E0B                   JSR         @R14
    00000F9A E402                   MOV         #2,R4
      15062020.c   738        Print((unsigned char*)"sollten dem oko-");
    00000F9C D41F                   MOV.L       L1240+24,R4; L644
    00000F9E 4D0B                   JSR         @R13
    00000FA0 0009                   NOP
      15062020.c   739        locate(2,5);
    00000FA2 E505                   MOV         #5,R5
    00000FA4 4E0B                   JSR         @R14
    00000FA6 E402                   MOV         #2,R4
      15062020.c   740        Print((unsigned char*)"logischem Prinzip");
    00000FA8 D41D                   MOV.L       L1240+28,R4; L645
    00000FAA 4D0B                   JSR         @R13
    00000FAC 0009                   NOP
      15062020.c   741        locate(2,6);
    00000FAE E506                   MOV         #6,R5
    00000FB0 4E0B                   JSR         @R14
    00000FB2 E402                   MOV         #2,R4
      15062020.c   742        Print((unsigned char*)"entsprechen. Bsp.:");
    00000FB4 D41B                   MOV.L       L1240+32,R4; L646
    00000FB6 4D0B                   JSR         @R13
    00000FB8 0009                   NOP
      15062020.c   743        locate(2,7);
    00000FBA E507                   MOV         #7,R5
    00000FBC 4E0B                   JSR         @R14
    00000FBE E402                   MOV         #2,R4
      15062020.c   744        Print((unsigned char*)"Min. Max. Prinzip");
    00000FC0 D419                   MOV.L       L1240+36,R4; L647
    00000FC2 4D0B                   JSR         @R13
    00000FC4 0009                   NOP
    00000FC6 DA19                   MOV.L       L1240+40,R10; _GetKey
    00000FC8 9B1C                   MOV.W       L1240,R11  ; H'7542
    00000FCA 6CB3                   MOV         R11,R12
    00000FCC 9D1B                   MOV.W       L1240+2,R13; H'7547
    00000FCE 7CF0                   ADD         #-16,R12
    00000FD0 DE17                   MOV.L       L1240+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   745        while (1){
    00000FD2              L1159:                            
      15062020.c   746            unsigned int key;       
      15062020.c   747            GetKey(&key);
    00000FD2 4A0B                   JSR         @R10
    00000FD4 64F3                   MOV         R15,R4
      15062020.c   748            if(KEY_CTRL_EXIT == key) {
    00000FD6 62F2                   MOV.L       @R15,R2
    00000FD8 32C0                   CMP/EQ      R12,R2
    00000FDA 8B03                   BF          L1160
      15062020.c   749                Bdisp_AllClr_DDVRAM();
    00000FDC 4E0B                   JSR         @R14
    00000FDE 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   750                lf2menu();
    00000FE0 BED4                   BSR         _lf2menu
    00000FE2 0009                   NOP
    00000FE4              L1160:                            
      15062020.c   751            }
      15062020.c   752            if(KEY_CTRL_UP == key) {
    00000FE4 63F2                   MOV.L       @R15,R3
    00000FE6 33B0                   CMP/EQ      R11,R3
    00000FE8 8B03                   BF          L1161
      15062020.c   753                Bdisp_AllClr_DDVRAM();
    00000FEA 4E0B                   JSR         @R14
    00000FEC 0009                   NOP
      15062020.c   754                lf2menuitem1();
    00000FEE BF61                   BSR         _lf2menuitem1
    00000FF0 0009                   NOP
    00000FF2              L1161:                            
      15062020.c   755            }
      15062020.c   756            if(KEY_CTRL_DOWN == key) {
    00000FF2 62F2                   MOV.L       @R15,R2
    00000FF4 32D0                   CMP/EQ      R13,R2
    00000FF6 8BEC                   BF          L1159
      15062020.c   757                Bdisp_AllClr_DDVRAM();
    00000FF8 4E0B                   JSR         @R14
    00000FFA 0009                   NOP
      15062020.c   758                lf2menuitem1_2();
    00000FFC B01A                   BSR         _lf2menuitem1_2
    00000FFE 0009                   NOP
    00001000 AFE7                   BRA         L1159
    00001002 0009                   NOP
    00001004              L1240:                            
    00001004 7542                   .DATA.W     H'7542
    00001006 7547                   .DATA.W     H'7547
    00001008 <00000000>             .DATA.L     _locate
    0000100C <00000000>             .DATA.L     _Print
    00001010 <00000000>             .DATA.L     L641
    00001014 <00000000>             .DATA.L     L642
    00001018 <00000000>             .DATA.L     L643
    0000101C <00000000>             .DATA.L     L644
    00001020 <00000000>             .DATA.L     L645
    00001024 <00000000>             .DATA.L     L646
    00001028 <00000000>             .DATA.L     L647
    0000102C <00000000>             .DATA.L     _GetKey
    00001030 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   759            }
      15062020.c   760        } 
      15062020.c   761    }
      15062020.c   762    int lf2menuitem1_2(){   
    00001034              _lf2menuitem1_2:                 ; function: lf2menuitem1_2
                                                           ; frame size=4
      15062020.c   763        locate(1,1);
    00001034 DE26                   MOV.L       L1241+4,R14; _locate
    00001036 E501                   MOV         #1,R5
    00001038 7FFC                   ADD         #-4,R15
    0000103A 4E0B                   JSR         @R14
    0000103C 6453                   MOV         R5,R4
      15062020.c   764        Print((unsigned char*)"Organisation 3/4");
    0000103E DD25                   MOV.L       L1241+8,R13; _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001040 D425                   MOV.L       L1241+12,R4; L655
    00001042 4D0B                   JSR         @R13
    00001044 0009                   NOP
      15062020.c   765        locate(1,2);
    00001046 E502                   MOV         #2,R5
    00001048 4E0B                   JSR         @R14
    0000104A E401                   MOV         #1,R4
      15062020.c   766        Print((unsigned char*)"-Klarheit");
    0000104C D423                   MOV.L       L1241+16,R4; L656
    0000104E 4D0B                   JSR         @R13
    00001050 0009                   NOP
      15062020.c   767        locate(2,3);
    00001052 E503                   MOV         #3,R5
    00001054 4E0B                   JSR         @R14
    00001056 E402                   MOV         #2,R4
      15062020.c   768        Print((unsigned char*)"T, A, Regelungen");
    00001058 D421                   MOV.L       L1241+20,R4; L643
    0000105A 4D0B                   JSR         @R13
    0000105C 0009                   NOP
      15062020.c   769        locate(2,4);
    0000105E E504                   MOV         #4,R5
    00001060 4E0B                   JSR         @R14
    00001062 E402                   MOV         #2,R4
      15062020.c   770        Print((unsigned char*)"sollten klar");
    00001064 D41F                   MOV.L       L1241+24,R4; L657
    00001066 4D0B                   JSR         @R13
    00001068 0009                   NOP
      15062020.c   771        locate(2,5);
    0000106A E505                   MOV         #5,R5
    0000106C 4E0B                   JSR         @R14
    0000106E E402                   MOV         #2,R4
      15062020.c   772        Print((unsigned char*)"definiert sein,");
    00001070 D41D                   MOV.L       L1241+28,R4; L658
    00001072 4D0B                   JSR         @R13
    00001074 0009                   NOP
      15062020.c   773        locate(2,6);
    00001076 E506                   MOV         #6,R5
    00001078 4E0B                   JSR         @R14
    0000107A E402                   MOV         #2,R4
      15062020.c   774        Print((unsigned char*)"damit jeder es");
    0000107C D41B                   MOV.L       L1241+32,R4; L659
    0000107E 4D0B                   JSR         @R13
    00001080 0009                   NOP
      15062020.c   775        locate(2,7);
    00001082 E507                   MOV         #7,R5
    00001084 4E0B                   JSR         @R14
    00001086 E402                   MOV         #2,R4
      15062020.c   776        Print((unsigned char*)"versteht.");
    00001088 D419                   MOV.L       L1241+36,R4; L660
    0000108A 4D0B                   JSR         @R13
    0000108C 0009                   NOP
    0000108E DA19                   MOV.L       L1241+40,R10; _GetKey
    00001090 9B1C                   MOV.W       L1241,R11  ; H'7542
    00001092 6CB3                   MOV         R11,R12
    00001094 9D1B                   MOV.W       L1241+2,R13; H'7547
    00001096 7CF0                   ADD         #-16,R12
    00001098 DE17                   MOV.L       L1241+44,R14; _Bdisp_AllClr_DDVRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   777        while (1){
    0000109A              L1164:                            
      15062020.c   778            unsigned int key;       
      15062020.c   779            GetKey(&key);
    0000109A 4A0B                   JSR         @R10
    0000109C 64F3                   MOV         R15,R4
      15062020.c   780            if(KEY_CTRL_EXIT == key) {
    0000109E 62F2                   MOV.L       @R15,R2
    000010A0 32C0                   CMP/EQ      R12,R2
    000010A2 8B03                   BF          L1165
      15062020.c   781                Bdisp_AllClr_DDVRAM();
    000010A4 4E0B                   JSR         @R14
    000010A6 0009                   NOP
      15062020.c   782                lf2menu();
    000010A8 BE70                   BSR         _lf2menu
    000010AA 0009                   NOP
    000010AC              L1165:                            
      15062020.c   783            }
      15062020.c   784            if(KEY_CTRL_UP == key) {
    000010AC 63F2                   MOV.L       @R15,R3
    000010AE 33B0                   CMP/EQ      R11,R3
    000010B0 8B03                   BF          L1166
      15062020.c   785                Bdisp_AllClr_DDVRAM();
    000010B2 4E0B                   JSR         @R14
    000010B4 0009                   NOP
      15062020.c   786                lf2menuitem1_1();
    000010B6 BF59                   BSR         _lf2menuitem1_1
    000010B8 0009                   NOP
    000010BA              L1166:                            
      15062020.c   787            }
      15062020.c   788            if(KEY_CTRL_DOWN == key) {
    000010BA 62F2                   MOV.L       @R15,R2
    000010BC 32D0                   CMP/EQ      R13,R2
    000010BE 8BEC                   BF          L1164
      15062020.c   789                Bdisp_AllClr_DDVRAM();
    000010C0 4E0B                   JSR         @R14
    000010C2 0009                   NOP
      15062020.c   790                lf2menuitem1_3();
    000010C4 B01A                   BSR         _lf2menuitem1_3
    000010C6 0009                   NOP
    000010C8 AFE7                   BRA         L1164
    000010CA 0009                   NOP
    000010CC              L1241:                            
    000010CC 7542                   .DATA.W     H'7542
    000010CE 7547                   .DATA.W     H'7547
    000010D0 <00000000>             .DATA.L     _locate
    000010D4 <00000000>             .DATA.L     _Print
    000010D8 <00000000>             .DATA.L     L655
    000010DC <00000000>             .DATA.L     L656
    000010E0 <00000000>             .DATA.L     L643
    000010E4 <00000000>             .DATA.L     L657
    000010E8 <00000000>             .DATA.L     L658
    000010EC <00000000>             .DATA.L     L659
    000010F0 <00000000>             .DATA.L     L660
    000010F4 <00000000>             .DATA.L     _GetKey
    000010F8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   791            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   792        } 
      15062020.c   793    }
      15062020.c   794    int lf2menuitem1_3(){   
    000010FC              _lf2menuitem1_3:                 ; function: lf2menuitem1_3
                                                           ; frame size=4
      15062020.c   795        locate(1,1);
    000010FC DE42                   MOV.L       L1242+2,R14; _locate
    000010FE E501                   MOV         #1,R5
    00001100 7FFC                   ADD         #-4,R15
    00001102 4E0B                   JSR         @R14
    00001104 6453                   MOV         R5,R4
      15062020.c   796        Print((unsigned char*)"Organisation 4/4");
    00001106 DD41                   MOV.L       L1242+6,R13; _Print
    00001108 D441                   MOV.L       L1242+10,R4; L668
    0000110A 4D0B                   JSR         @R13
    0000110C 0009                   NOP
      15062020.c   797        locate(1,2);
    0000110E E502                   MOV         #2,R5
    00001110 4E0B                   JSR         @R14
    00001112 E401                   MOV         #1,R4
      15062020.c   798        Print((unsigned char*)"-Gleichgewicht");
    00001114 D43F                   MOV.L       L1242+14,R4; L669
    00001116 4D0B                   JSR         @R13
    00001118 0009                   NOP
      15062020.c   799        locate(2,3);
    0000111A E503                   MOV         #3,R5
    0000111C 4E0B                   JSR         @R14
    0000111E E402                   MOV         #2,R4
      15062020.c   800        Print((unsigned char*)"Dauerregel (Organ-");
    00001120 D43D                   MOV.L       L1242+18,R4; L670
    00001122 4D0B                   JSR         @R13
    00001124 0009                   NOP
      15062020.c   801        locate(2,4);
    00001126 E504                   MOV         #4,R5
    00001128 4E0B                   JSR         @R14
    0000112A E402                   MOV         #2,R4
      15062020.c   802        Print((unsigned char*)"isation), Einzel (");
    0000112C D43B                   MOV.L       L1242+22,R4; L671
    0000112E 4D0B                   JSR         @R13
    00001130 0009                   NOP
      15062020.c   803        locate(2,5);
    00001132 E505                   MOV         #5,R5
    00001134 4E0B                   JSR         @R14
    00001136 E402                   MOV         #2,R4
      15062020.c   804        Print((unsigned char*)"Disposition) u. ");
    00001138 D439                   MOV.L       L1242+26,R4; L672
    0000113A 4D0B                   JSR         @R13
    0000113C 0009                   NOP
      15062020.c   805        locate(2,6);
    0000113E E506                   MOV         #6,R5
    00001140 4E0B                   JSR         @R14
    00001142 E402                   MOV         #2,R4
      15062020.c   806        Print((unsigned char*)"Improvisation.");
    00001144 D437                   MOV.L       L1242+30,R4; L673
    00001146 4D0B                   JSR         @R13
    00001148 0009                   NOP
      15062020.c   807        locate(2,7);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000114A E507                   MOV         #7,R5
    0000114C 4E0B                   JSR         @R14
    0000114E E402                   MOV         #2,R4
      15062020.c   808        Print((unsigned char*)"unter/ueber-");
    00001150 D435                   MOV.L       L1242+34,R4; L674
    00001152 4D0B                   JSR         @R13
    00001154 0009                   NOP
      15062020.c   809        locate(2,8);
    00001156 E508                   MOV         #8,R5
    00001158 4E0B                   JSR         @R14
    0000115A E402                   MOV         #2,R4
      15062020.c   810        Print((unsigned char*)"organisation");
    0000115C D433                   MOV.L       L1242+38,R4; L675
    0000115E 4D0B                   JSR         @R13
    00001160 0009                   NOP
    00001162 DB33                   MOV.L       L1242+42,R11; _GetKey
    00001164 9C4F                   MOV.W       L1242,R12  ; H'7532
    00001166 6DC3                   MOV         R12,R13
    00001168 DE32                   MOV.L       L1242+46,R14; _Bdisp_AllClr_DDVRAM
    0000116A 7D10                   ADD         #16,R13
      15062020.c   811        while (1){
    0000116C              L1169:                            
      15062020.c   812            unsigned int key;       
      15062020.c   813            GetKey(&key);
    0000116C 4B0B                   JSR         @R11
    0000116E 64F3                   MOV         R15,R4
      15062020.c   814            if(KEY_CTRL_EXIT == key) {
    00001170 62F2                   MOV.L       @R15,R2
    00001172 32C0                   CMP/EQ      R12,R2
    00001174 8B03                   BF          L1170
      15062020.c   815                Bdisp_AllClr_DDVRAM();
    00001176 4E0B                   JSR         @R14
    00001178 0009                   NOP
      15062020.c   816                lf2menu();
    0000117A BE07                   BSR         _lf2menu
    0000117C 0009                   NOP
    0000117E              L1170:                            
      15062020.c   817            }
      15062020.c   818            if(KEY_CTRL_UP == key) {
    0000117E 63F2                   MOV.L       @R15,R3
    00001180 33D0                   CMP/EQ      R13,R3
    00001182 8BF3                   BF          L1169
      15062020.c   819                Bdisp_AllClr_DDVRAM();
    00001184 4E0B                   JSR         @R14
    00001186 0009                   NOP
      15062020.c   820                lf2menuitem1_2();
    00001188 BF54                   BSR         _lf2menuitem1_2
    0000118A 0009                   NOP
    0000118C AFEE                   BRA         L1169
    0000118E 0009                   NOP
      15062020.c   821            }
      15062020.c   822        } 
      15062020.c   823    }
      15062020.c   824    int lf2menuitem2(){   
    00001190              _lf2menuitem2:                   ; function: lf2menuitem2
                                                           ; frame size=4
      15062020.c   825        locate(1,1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001190 DE1D                   MOV.L       L1242+2,R14; _locate
    00001192 E501                   MOV         #1,R5
    00001194 7FFC                   ADD         #-4,R15
    00001196 4E0B                   JSR         @R14
    00001198 6453                   MOV         R5,R4
      15062020.c   826        Print((unsigned char*)"Regelkreis");
    0000119A DD1C                   MOV.L       L1242+6,R13; _Print
    0000119C D426                   MOV.L       L1242+50,R4; L607
    0000119E 4D0B                   JSR         @R13
    000011A0 0009                   NOP
      15062020.c   827        locate(1,3);
    000011A2 E503                   MOV         #3,R5
    000011A4 4E0B                   JSR         @R14
    000011A6 E401                   MOV         #1,R4
      15062020.c   828        Print((unsigned char*)"Mitte: Kommunikation");
    000011A8 D424                   MOV.L       L1242+54,R4; L681
    000011AA 4D0B                   JSR         @R13
    000011AC 0009                   NOP
      15062020.c   829        locate(2,4);
    000011AE E504                   MOV         #4,R5
    000011B0 4E0B                   JSR         @R14
    000011B2 E402                   MOV         #2,R4
      15062020.c   830        Print((unsigned char*)"1) Zielsetzung");
    000011B4 D422                   MOV.L       L1242+58,R4; L682
    000011B6 4D0B                   JSR         @R13
    000011B8 0009                   NOP
      15062020.c   831        locate(2,5);
    000011BA E505                   MOV         #5,R5
    000011BC 4E0B                   JSR         @R14
    000011BE E402                   MOV         #2,R4
      15062020.c   832        Print((unsigned char*)"2) Planung");
    000011C0 D420                   MOV.L       L1242+62,R4; L683
    000011C2 4D0B                   JSR         @R13
    000011C4 0009                   NOP
      15062020.c   833        locate(2,6);
    000011C6 E506                   MOV         #6,R5
    000011C8 4E0B                   JSR         @R14
    000011CA E402                   MOV         #2,R4
      15062020.c   834        Print((unsigned char*)"3) Entscheidung");
    000011CC D41E                   MOV.L       L1242+66,R4; L684
    000011CE 4D0B                   JSR         @R13
    000011D0 0009                   NOP
      15062020.c   835        locate(2,7);
    000011D2 E507                   MOV         #7,R5
    000011D4 4E0B                   JSR         @R14
    000011D6 E402                   MOV         #2,R4
      15062020.c   836        Print((unsigned char*)"4) Umsetzung");
    000011D8 D41C                   MOV.L       L1242+70,R4; L685
    000011DA 4D0B                   JSR         @R13
    000011DC 0009                   NOP
      15062020.c   837        locate(2,8);
    000011DE E508                   MOV         #8,R5
    000011E0 4E0B                   JSR         @R14
    000011E2 E402                   MOV         #2,R4
      15062020.c   838        Print((unsigned char*)"5) Kontrolle");
    000011E4 D41A                   MOV.L       L1242+74,R4; L686
    000011E6 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011E8 0009                   NOP
    000011EA DC12                   MOV.L       L1242+46,R12; _Bdisp_AllClr_DDVRAM
    000011EC DD10                   MOV.L       L1242+42,R13; _GetKey
    000011EE 9E0A                   MOV.W       L1242,R14  ; H'7532
      15062020.c   839        while (1){
    000011F0              L1173:                            
      15062020.c   840            unsigned int key;       
      15062020.c   841            GetKey(&key);
    000011F0 4D0B                   JSR         @R13
    000011F2 64F3                   MOV         R15,R4
      15062020.c   842            if(KEY_CTRL_EXIT == key) {
    000011F4 62F2                   MOV.L       @R15,R2
    000011F6 32E0                   CMP/EQ      R14,R2
    000011F8 8BFA                   BF          L1173
      15062020.c   843                Bdisp_AllClr_DDVRAM();
    000011FA 4C0B                   JSR         @R12
    000011FC 0009                   NOP
      15062020.c   844                lf2menu();
    000011FE BDC5                   BSR         _lf2menu
    00001200 0009                   NOP
    00001202 AFF5                   BRA         L1173
    00001204 0009                   NOP
    00001206              L1242:                            
    00001206 7532                   .DATA.W     H'7532
    00001208 <00000000>             .DATA.L     _locate
    0000120C <00000000>             .DATA.L     _Print
    00001210 <00000000>             .DATA.L     L668
    00001214 <00000000>             .DATA.L     L669
    00001218 <00000000>             .DATA.L     L670
    0000121C <00000000>             .DATA.L     L671
    00001220 <00000000>             .DATA.L     L672
    00001224 <00000000>             .DATA.L     L673
    00001228 <00000000>             .DATA.L     L674
    0000122C <00000000>             .DATA.L     L675
    00001230 <00000000>             .DATA.L     _GetKey
    00001234 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001238 <00000000>             .DATA.L     L607
    0000123C <00000000>             .DATA.L     L681
    00001240 <00000000>             .DATA.L     L682
    00001244 <00000000>             .DATA.L     L683
    00001248 <00000000>             .DATA.L     L684
    0000124C <00000000>             .DATA.L     L685
    00001250 <00000000>             .DATA.L     L686
      15062020.c   845            }
      15062020.c   846        } 
      15062020.c   847    }
      15062020.c   848    int lf2menuitem3(){   
    00001254              _lf2menuitem3:                   ; function: lf2menuitem3
                                                           ; frame size=4
      15062020.c   849        locate(1,1);
    00001254 DE3F                   MOV.L       L1243+2,R14; _locate
    00001256 E501                   MOV         #1,R5
    00001258 7FFC                   ADD         #-4,R15
    0000125A 4E0B                   JSR         @R14
    0000125C 6453                   MOV         R5,R4
      15062020.c   850        Print((unsigned char*)"Organigramm");
    0000125E DD3E                   MOV.L       L1243+6,R13; _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001260 D43E                   MOV.L       L1243+10,R4; L608
    00001262 4D0B                   JSR         @R13
    00001264 0009                   NOP
      15062020.c   851        locate(1,3);
    00001266 E503                   MOV         #3,R5
    00001268 4E0B                   JSR         @R14
    0000126A E401                   MOV         #1,R4
      15062020.c   852        Print((unsigned char*)"[[]] Instanz");
    0000126C D43C                   MOV.L       L1243+14,R4; L691
    0000126E 4D0B                   JSR         @R13
    00001270 0009                   NOP
      15062020.c   853        locate(2,4);
    00001272 E504                   MOV         #4,R5
    00001274 4E0B                   JSR         @R14
    00001276 E402                   MOV         #2,R4
      15062020.c   854        Print((unsigned char*)"leitende Stelle");
    00001278 D43A                   MOV.L       L1243+18,R4; L692
    0000127A 4D0B                   JSR         @R13
    0000127C 0009                   NOP
      15062020.c   855        locate(1,5);
    0000127E E505                   MOV         #5,R5
    00001280 4E0B                   JSR         @R14
    00001282 E401                   MOV         #1,R4
      15062020.c   856        Print((unsigned char*)"[] Mitarbeiterstelle");
    00001284 D438                   MOV.L       L1243+22,R4; L693
    00001286 4D0B                   JSR         @R13
    00001288 0009                   NOP
      15062020.c   857        locate(2,6);
    0000128A E506                   MOV         #6,R5
    0000128C 4E0B                   JSR         @R14
    0000128E E402                   MOV         #2,R4
      15062020.c   858        Print((unsigned char*)"Ausfuhrendestelle");
    00001290 D436                   MOV.L       L1243+26,R4; L694
    00001292 4D0B                   JSR         @R13
    00001294 0009                   NOP
      15062020.c   859        locate(1,7);
    00001296 E507                   MOV         #7,R5
    00001298 4E0B                   JSR         @R14
    0000129A E401                   MOV         #1,R4
      15062020.c   860        Print((unsigned char*)"() Stabstelle");
    0000129C D434                   MOV.L       L1243+30,R4; L695
    0000129E 4D0B                   JSR         @R13
    000012A0 0009                   NOP
      15062020.c   861        locate(2,8);
    000012A2 E508                   MOV         #8,R5
    000012A4 4E0B                   JSR         @R14
    000012A6 E402                   MOV         #2,R4
      15062020.c   862        Print((unsigned char*)"Beratende Stelle");
    000012A8 D432                   MOV.L       L1243+34,R4; L696
    000012AA 4D0B                   JSR         @R13
    000012AC 0009                   NOP
    000012AE DC32                   MOV.L       L1243+38,R12; _Bdisp_AllClr_DDVRAM
    000012B0 DD32                   MOV.L       L1243+42,R13; _GetKey
    000012B2 9E4E                   MOV.W       L1243,R14  ; H'7532
      15062020.c   863        while (1){
    000012B4              L1176:                            
      15062020.c   864            unsigned int key;       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   865            GetKey(&key);
    000012B4 4D0B                   JSR         @R13
    000012B6 64F3                   MOV         R15,R4
      15062020.c   866            if(KEY_CTRL_EXIT == key) {
    000012B8 62F2                   MOV.L       @R15,R2
    000012BA 32E0                   CMP/EQ      R14,R2
    000012BC 8BFA                   BF          L1176
      15062020.c   867                Bdisp_AllClr_DDVRAM();
    000012BE 4C0B                   JSR         @R12
    000012C0 0009                   NOP
      15062020.c   868                lf2menu();
    000012C2 BD63                   BSR         _lf2menu
    000012C4 0009                   NOP
    000012C6 AFF5                   BRA         L1176
    000012C8 0009                   NOP
      15062020.c   869            }
      15062020.c   870        } 
      15062020.c   871    }
      15062020.c   872    int lf2menuitem4(){   
    000012CA              _lf2menuitem4:                   ; function: lf2menuitem4
                                                           ; frame size=4
    000012CA 7FFC                   ADD         #-4,R15
      15062020.c   873        locate(1,1);
    000012CC DE21                   MOV.L       L1243+2,R14; _locate
    000012CE E501                   MOV         #1,R5
    000012D0 4E0B                   JSR         @R14
    000012D2 6453                   MOV         R5,R4
      15062020.c   874        Print((unsigned char*)"ERP / SAP Systeme1/5");
    000012D4 DD20                   MOV.L       L1243+6,R13; _Print
    000012D6 D42A                   MOV.L       L1243+46,R4; L701
    000012D8 4D0B                   JSR         @R13
    000012DA 0009                   NOP
      15062020.c   875        locate(1,3);
    000012DC E503                   MOV         #3,R5
    000012DE 4E0B                   JSR         @R14
    000012E0 E401                   MOV         #1,R4
      15062020.c   876        Print((unsigned char*)"Merkmale:");
    000012E2 D428                   MOV.L       L1243+50,R4; L702
    000012E4 4D0B                   JSR         @R13
    000012E6 0009                   NOP
      15062020.c   877        locate(2,4);
    000012E8 E504                   MOV         #4,R5
    000012EA 4E0B                   JSR         @R14
    000012EC E402                   MOV         #2,R4
      15062020.c   878        Print((unsigned char*)"-dient der");
    000012EE D426                   MOV.L       L1243+54,R4; L703
    000012F0 4D0B                   JSR         @R13
    000012F2 0009                   NOP
      15062020.c   879        locate(3,5);
    000012F4 E505                   MOV         #5,R5
    000012F6 4E0B                   JSR         @R14
    000012F8 E403                   MOV         #3,R4
      15062020.c   880        Print((unsigned char*)"bearbeitung von");
    000012FA D424                   MOV.L       L1243+58,R4; L704
    000012FC 4D0B                   JSR         @R13
    000012FE 0009                   NOP
      15062020.c   881        locate(3,6);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001300 E506                   MOV         #6,R5
    00001302 4E0B                   JSR         @R14
    00001304 E403                   MOV         #3,R4
      15062020.c   882        Print((unsigned char*)"Geschaftsprozessen");
    00001306 D422                   MOV.L       L1243+62,R4; L705
    00001308 4D0B                   JSR         @R13
    0000130A 0009                   NOP
      15062020.c   883        locate(2,7);
    0000130C E507                   MOV         #7,R5
    0000130E 4E0B                   JSR         @R14
    00001310 E402                   MOV         #2,R4
      15062020.c   884        Print((unsigned char*)"-zentrale Datenbank");
    00001312 D420                   MOV.L       L1243+66,R4; L706
    00001314 4D0B                   JSR         @R13
    00001316 0009                   NOP
      15062020.c   885        locate(2,8);
    00001318 E508                   MOV         #8,R5
    0000131A 4E0B                   JSR         @R14
    0000131C E402                   MOV         #2,R4
      15062020.c   886        Print((unsigned char*)"-Stammdaten");
    0000131E D41E                   MOV.L       L1243+70,R4; L707
    00001320 4D0B                   JSR         @R13
    00001322 0009                   NOP
    00001324 DB15                   MOV.L       L1243+42,R11; _GetKey
    00001326 9C14                   MOV.W       L1243,R12  ; H'7532
    00001328 DE13                   MOV.L       L1243+38,R14; _Bdisp_AllClr_DDVRAM
    0000132A 6DC3                   MOV         R12,R13
    0000132C 7D15                   ADD         #21,R13
      15062020.c   887        while (1){
    0000132E              L1179:                            
      15062020.c   888            unsigned int key;       
      15062020.c   889            GetKey(&key);
    0000132E 4B0B                   JSR         @R11
    00001330 64F3                   MOV         R15,R4
      15062020.c   890            if(KEY_CTRL_EXIT == key) {
    00001332 62F2                   MOV.L       @R15,R2
    00001334 32C0                   CMP/EQ      R12,R2
    00001336 8B03                   BF          L1180
      15062020.c   891                Bdisp_AllClr_DDVRAM();
    00001338 4E0B                   JSR         @R14
    0000133A 0009                   NOP
      15062020.c   892                lf2menu();
    0000133C BD26                   BSR         _lf2menu
    0000133E 0009                   NOP
    00001340              L1180:                            
      15062020.c   893            }
      15062020.c   894            if(KEY_CTRL_DOWN == key) {
    00001340 63F2                   MOV.L       @R15,R3
    00001342 33D0                   CMP/EQ      R13,R3
    00001344 8BF3                   BF          L1179
      15062020.c   895                Bdisp_AllClr_DDVRAM();
    00001346 4E0B                   JSR         @R14
    00001348 0009                   NOP
      15062020.c   896                lf2menuitem4_1();
    0000134A B027                   BSR         _lf2menuitem4_1
    0000134C 0009                   NOP
    0000134E AFEE                   BRA         L1179




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001350 0009                   NOP
    00001352              L1243:                            
    00001352 7532                   .DATA.W     H'7532
    00001354 <00000000>             .DATA.L     _locate
    00001358 <00000000>             .DATA.L     _Print
    0000135C <00000000>             .DATA.L     L608
    00001360 <00000000>             .DATA.L     L691
    00001364 <00000000>             .DATA.L     L692
    00001368 <00000000>             .DATA.L     L693
    0000136C <00000000>             .DATA.L     L694
    00001370 <00000000>             .DATA.L     L695
    00001374 <00000000>             .DATA.L     L696
    00001378 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000137C <00000000>             .DATA.L     _GetKey
    00001380 <00000000>             .DATA.L     L701
    00001384 <00000000>             .DATA.L     L702
    00001388 <00000000>             .DATA.L     L703
    0000138C <00000000>             .DATA.L     L704
    00001390 <00000000>             .DATA.L     L705
    00001394 <00000000>             .DATA.L     L706
    00001398 <00000000>             .DATA.L     L707
      15062020.c   897            }
      15062020.c   898        } 
      15062020.c   899    }
      15062020.c   900    int lf2menuitem4_1(){   
    0000139C              _lf2menuitem4_1:                 ; function: lf2menuitem4_1
                                                           ; frame size=4
      15062020.c   901        locate(1,1);
    0000139C DE23                   MOV.L       L1244+4,R14; _locate
    0000139E E501                   MOV         #1,R5
    000013A0 7FFC                   ADD         #-4,R15
    000013A2 4E0B                   JSR         @R14
    000013A4 6453                   MOV         R5,R4
      15062020.c   902        Print((unsigned char*)"ERP / SAP Systeme2/5");
    000013A6 DD22                   MOV.L       L1244+8,R13; _Print
    000013A8 D422                   MOV.L       L1244+12,R4; L714
    000013AA 4D0B                   JSR         @R13
    000013AC 0009                   NOP
      15062020.c   903        locate(2,2);
    000013AE E502                   MOV         #2,R5
    000013B0 4E0B                   JSR         @R14
    000013B2 6453                   MOV         R5,R4
      15062020.c   904        Print((unsigned char*)"-Integration vertik");
    000013B4 D420                   MOV.L       L1244+16,R4; L715
    000013B6 4D0B                   JSR         @R13
    000013B8 0009                   NOP
      15062020.c   905        locate(3,3);
    000013BA E503                   MOV         #3,R5
    000013BC 4E0B                   JSR         @R14
    000013BE 6453                   MOV         R5,R4
      15062020.c   906        Print((unsigned char*)"ale/horizontale");
    000013C0 D41E                   MOV.L       L1244+20,R4; L716
    000013C2 4D0B                   JSR         @R13
    000013C4 0009                   NOP
      15062020.c   907        locate(2,4);
    000013C6 E504                   MOV         #4,R5
    000013C8 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013CA E402                   MOV         #2,R4
      15062020.c   908        Print((unsigned char*)"-In vers Komponente");
    000013CC D41C                   MOV.L       L1244+24,R4; L717
    000013CE 4D0B                   JSR         @R13
    000013D0 0009                   NOP
      15062020.c   909        locate(3,5);
    000013D2 E505                   MOV         #5,R5
    000013D4 4E0B                   JSR         @R14
    000013D6 E403                   MOV         #3,R4
      15062020.c   910        Print((unsigned char*)"ausfgeteilt:");
    000013D8 D41A                   MOV.L       L1244+28,R4; L718
    000013DA 4D0B                   JSR         @R13
    000013DC 0009                   NOP
      15062020.c   911        locate(3,6);
    000013DE E506                   MOV         #6,R5
    000013E0 4E0B                   JSR         @R14
    000013E2 E403                   MOV         #3,R4
      15062020.c   912        Print((unsigned char*)"Vertrieb, ...");
    000013E4 D418                   MOV.L       L1244+32,R4; L719
    000013E6 4D0B                   JSR         @R13
    000013E8 0009                   NOP
    000013EA DA18                   MOV.L       L1244+36,R10; _GetKey
    000013EC 9B1C                   MOV.W       L1244,R11  ; H'7542
    000013EE 6CB3                   MOV         R11,R12
    000013F0 9D1B                   MOV.W       L1244+2,R13; H'7547
    000013F2 7CF0                   ADD         #-16,R12
    000013F4 DE16                   MOV.L       L1244+40,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   913        while (1){
    000013F6              L1183:                            
      15062020.c   914            unsigned int key;       
      15062020.c   915            GetKey(&key);
    000013F6 4A0B                   JSR         @R10
    000013F8 64F3                   MOV         R15,R4
      15062020.c   916            if(KEY_CTRL_EXIT == key) {
    000013FA 62F2                   MOV.L       @R15,R2
    000013FC 32C0                   CMP/EQ      R12,R2
    000013FE 8B03                   BF          L1184
      15062020.c   917                Bdisp_AllClr_DDVRAM();
    00001400 4E0B                   JSR         @R14
    00001402 0009                   NOP
      15062020.c   918                lf2menu();
    00001404 BCC2                   BSR         _lf2menu
    00001406 0009                   NOP
    00001408              L1184:                            
      15062020.c   919            }
      15062020.c   920            if(KEY_CTRL_UP == key) {
    00001408 63F2                   MOV.L       @R15,R3
    0000140A 33B0                   CMP/EQ      R11,R3
    0000140C 8B03                   BF          L1185
      15062020.c   921                Bdisp_AllClr_DDVRAM();
    0000140E 4E0B                   JSR         @R14
    00001410 0009                   NOP
      15062020.c   922                lf2menuitem4();
    00001412 BF5A                   BSR         _lf2menuitem4
    00001414 0009                   NOP
    00001416              L1185:                            
      15062020.c   923            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   924            if(KEY_CTRL_DOWN == key) {
    00001416 62F2                   MOV.L       @R15,R2
    00001418 32D0                   CMP/EQ      R13,R2
    0000141A 8BEC                   BF          L1183
      15062020.c   925                Bdisp_AllClr_DDVRAM();
    0000141C 4E0B                   JSR         @R14
    0000141E 0009                   NOP
      15062020.c   926                lf2menuitem4_2();
    00001420 B018                   BSR         _lf2menuitem4_2
    00001422 0009                   NOP
    00001424 AFE7                   BRA         L1183
    00001426 0009                   NOP
    00001428              L1244:                            
    00001428 7542                   .DATA.W     H'7542
    0000142A 7547                   .DATA.W     H'7547
    0000142C <00000000>             .DATA.L     _locate
    00001430 <00000000>             .DATA.L     _Print
    00001434 <00000000>             .DATA.L     L714
    00001438 <00000000>             .DATA.L     L715
    0000143C <00000000>             .DATA.L     L716
    00001440 <00000000>             .DATA.L     L717
    00001444 <00000000>             .DATA.L     L718
    00001448 <00000000>             .DATA.L     L719
    0000144C <00000000>             .DATA.L     _GetKey
    00001450 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   927            }
      15062020.c   928        } 
      15062020.c   929    }
      15062020.c   930    int lf2menuitem4_2(){   
    00001454              _lf2menuitem4_2:                 ; function: lf2menuitem4_2
                                                           ; frame size=4
      15062020.c   931        locate(1,1);
    00001454 DE29                   MOV.L       L1245+4,R14; _locate
    00001456 E501                   MOV         #1,R5
    00001458 7FFC                   ADD         #-4,R15
    0000145A 4E0B                   JSR         @R14
    0000145C 6453                   MOV         R5,R4
      15062020.c   932        Print((unsigned char*)"ERP / SAP Systeme3/5");
    0000145E DD28                   MOV.L       L1245+8,R13; _Print
    00001460 D428                   MOV.L       L1245+12,R4; L727
    00001462 4D0B                   JSR         @R13
    00001464 0009                   NOP
      15062020.c   933        locate(1,3);
    00001466 E503                   MOV         #3,R5
    00001468 4E0B                   JSR         @R14
    0000146A E401                   MOV         #1,R4
      15062020.c   934        Print((unsigned char*)"Vorteile:");
    0000146C D426                   MOV.L       L1245+16,R4; L728
    0000146E 4D0B                   JSR         @R13
    00001470 0009                   NOP
      15062020.c   935        locate(2,4);
    00001472 E504                   MOV         #4,R5
    00001474 4E0B                   JSR         @R14
    00001476 E402                   MOV         #2,R4
      15062020.c   936        Print((unsigned char*)"-Verbesserung/Besc-");
    00001478 D424                   MOV.L       L1245+20,R4; L729
    0000147A 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000147C 0009                   NOP
      15062020.c   937        locate(3,5);
    0000147E E505                   MOV         #5,R5
    00001480 4E0B                   JSR         @R14
    00001482 E403                   MOV         #3,R4
      15062020.c   938        Print((unsigned char*)"hleunigung von");
    00001484 D422                   MOV.L       L1245+24,R4; L730
    00001486 4D0B                   JSR         @R13
    00001488 0009                   NOP
      15062020.c   939        locate(3,6);
    0000148A E506                   MOV         #6,R5
    0000148C 4E0B                   JSR         @R14
    0000148E E403                   MOV         #3,R4
      15062020.c   940        Print((unsigned char*)"Prozessen");
    00001490 D420                   MOV.L       L1245+28,R4; L731
    00001492 4D0B                   JSR         @R13
    00001494 0009                   NOP
      15062020.c   941        locate(2,7);
    00001496 E507                   MOV         #7,R5
    00001498 4E0B                   JSR         @R14
    0000149A E402                   MOV         #2,R4
      15062020.c   942        Print((unsigned char*)"-Daten werden in");
    0000149C D41E                   MOV.L       L1245+32,R4; L732
    0000149E 4D0B                   JSR         @R13
    000014A0 0009                   NOP
      15062020.c   943        locate(3,7);
    000014A2 E507                   MOV         #7,R5
    000014A4 4E0B                   JSR         @R14
    000014A6 E403                   MOV         #3,R4
      15062020.c   944        Print((unsigned char*)"Echtzeit gesaved");
    000014A8 D41C                   MOV.L       L1245+36,R4; L733
    000014AA 4D0B                   JSR         @R13
    000014AC 0009                   NOP
      15062020.c   945        locate(3,8);
    000014AE E508                   MOV         #8,R5
    000014B0 4E0B                   JSR         @R14
    000014B2 E403                   MOV         #3,R4
      15062020.c   946        Print((unsigned char*)"alle haben Zugriff");
    000014B4 D41A                   MOV.L       L1245+40,R4; L734
    000014B6 4D0B                   JSR         @R13
    000014B8 0009                   NOP
    000014BA DA1A                   MOV.L       L1245+44,R10; _GetKey
    000014BC 9B1C                   MOV.W       L1245,R11  ; H'7542
    000014BE 6CB3                   MOV         R11,R12
    000014C0 9D1B                   MOV.W       L1245+2,R13; H'7547
    000014C2 7CF0                   ADD         #-16,R12
    000014C4 DE18                   MOV.L       L1245+48,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   947        while (1){
    000014C6              L1188:                            
      15062020.c   948            unsigned int key;       
      15062020.c   949            GetKey(&key);
    000014C6 4A0B                   JSR         @R10
    000014C8 64F3                   MOV         R15,R4
      15062020.c   950            if(KEY_CTRL_EXIT == key) {
    000014CA 62F2                   MOV.L       @R15,R2
    000014CC 32C0                   CMP/EQ      R12,R2
    000014CE 8B03                   BF          L1189




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   951                Bdisp_AllClr_DDVRAM();
    000014D0 4E0B                   JSR         @R14
    000014D2 0009                   NOP
      15062020.c   952                lf2menu();
    000014D4 BC5A                   BSR         _lf2menu
    000014D6 0009                   NOP
    000014D8              L1189:                            
      15062020.c   953            }
      15062020.c   954            if(KEY_CTRL_UP == key) {
    000014D8 63F2                   MOV.L       @R15,R3
    000014DA 33B0                   CMP/EQ      R11,R3
    000014DC 8B03                   BF          L1190
      15062020.c   955                Bdisp_AllClr_DDVRAM();
    000014DE 4E0B                   JSR         @R14
    000014E0 0009                   NOP
      15062020.c   956                lf2menuitem4_1();
    000014E2 BF5B                   BSR         _lf2menuitem4_1
    000014E4 0009                   NOP
    000014E6              L1190:                            
      15062020.c   957            }
      15062020.c   958            if(KEY_CTRL_DOWN == key) {
    000014E6 62F2                   MOV.L       @R15,R2
    000014E8 32D0                   CMP/EQ      R13,R2
    000014EA 8BEC                   BF          L1188
      15062020.c   959                Bdisp_AllClr_DDVRAM();
    000014EC 4E0B                   JSR         @R14
    000014EE 0009                   NOP
      15062020.c   960                lf2menuitem4_3();
    000014F0 B01C                   BSR         _lf2menuitem4_3
    000014F2 0009                   NOP
    000014F4 AFE7                   BRA         L1188
    000014F6 0009                   NOP
    000014F8              L1245:                            
    000014F8 7542                   .DATA.W     H'7542
    000014FA 7547                   .DATA.W     H'7547
    000014FC <00000000>             .DATA.L     _locate
    00001500 <00000000>             .DATA.L     _Print
    00001504 <00000000>             .DATA.L     L727
    00001508 <00000000>             .DATA.L     L728
    0000150C <00000000>             .DATA.L     L729
    00001510 <00000000>             .DATA.L     L730
    00001514 <00000000>             .DATA.L     L731
    00001518 <00000000>             .DATA.L     L732
    0000151C <00000000>             .DATA.L     L733
    00001520 <00000000>             .DATA.L     L734
    00001524 <00000000>             .DATA.L     _GetKey
    00001528 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   961            }
      15062020.c   962        } 
      15062020.c   963    }
      15062020.c   964    int lf2menuitem4_3(){   
    0000152C              _lf2menuitem4_3:                 ; function: lf2menuitem4_3
                                                           ; frame size=4
      15062020.c   965        locate(1,1);
    0000152C DE40                   MOV.L       L1246+8,R14; _locate
    0000152E E501                   MOV         #1,R5
    00001530 7FFC                   ADD         #-4,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001532 4E0B                   JSR         @R14
    00001534 6453                   MOV         R5,R4
      15062020.c   966        Print((unsigned char*)"ERP / SAP Systeme4/5");
    00001536 DD3F                   MOV.L       L1246+12,R13; _Print
    00001538 D43F                   MOV.L       L1246+16,R4; L742
    0000153A 4D0B                   JSR         @R13
    0000153C 0009                   NOP
      15062020.c   967        locate(2,3);
    0000153E E503                   MOV         #3,R5
    00001540 4E0B                   JSR         @R14
    00001542 E402                   MOV         #2,R4
      15062020.c   968        Print((unsigned char*)"-Automatisiert pro-");
    00001544 D43D                   MOV.L       L1246+20,R4; L743
    00001546 4D0B                   JSR         @R13
    00001548 0009                   NOP
      15062020.c   969        locate(3,4);
    0000154A E504                   MOV         #4,R5
    0000154C 4E0B                   JSR         @R14
    0000154E E403                   MOV         #3,R4
      15062020.c   970        Print((unsigned char*)"zesse, gespart");
    00001550 D43B                   MOV.L       L1246+24,R4; L744
    00001552 4D0B                   JSR         @R13
    00001554 0009                   NOP
      15062020.c   971        locate(3,5);
    00001556 E505                   MOV         #5,R5
    00001558 4E0B                   JSR         @R14
    0000155A E403                   MOV         #3,R4
      15062020.c   972        Print((unsigned char*)"wird Arbeitsplatz");
    0000155C D439                   MOV.L       L1246+28,R4; L745
    0000155E 4D0B                   JSR         @R13
    00001560 0009                   NOP
    00001562 DA39                   MOV.L       L1246+32,R10; _GetKey
    00001564 9B60                   MOV.W       L1246,R11  ; H'7542
    00001566 6CB3                   MOV         R11,R12
    00001568 9D5F                   MOV.W       L1246+2,R13; H'7547
    0000156A 7CF0                   ADD         #-16,R12
    0000156C DE37                   MOV.L       L1246+36,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   973        while (1){
    0000156E              L1193:                            
      15062020.c   974            unsigned int key;       
      15062020.c   975            GetKey(&key);
    0000156E 4A0B                   JSR         @R10
    00001570 64F3                   MOV         R15,R4
      15062020.c   976            if(KEY_CTRL_EXIT == key) {
    00001572 62F2                   MOV.L       @R15,R2
    00001574 32C0                   CMP/EQ      R12,R2
    00001576 8B03                   BF          L1194
      15062020.c   977                Bdisp_AllClr_DDVRAM();
    00001578 4E0B                   JSR         @R14
    0000157A 0009                   NOP
      15062020.c   978                lf2menu();
    0000157C BC06                   BSR         _lf2menu
    0000157E 0009                   NOP
    00001580              L1194:                            
      15062020.c   979            }
      15062020.c   980            if(KEY_CTRL_UP == key) {
    00001580 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001582 33B0                   CMP/EQ      R11,R3
    00001584 8B03                   BF          L1195
      15062020.c   981                Bdisp_AllClr_DDVRAM();
    00001586 4E0B                   JSR         @R14
    00001588 0009                   NOP
      15062020.c   982                lf2menuitem4_2();
    0000158A BF63                   BSR         _lf2menuitem4_2
    0000158C 0009                   NOP
    0000158E              L1195:                            
      15062020.c   983            }
      15062020.c   984            if(KEY_CTRL_DOWN == key) {
    0000158E 62F2                   MOV.L       @R15,R2
    00001590 32D0                   CMP/EQ      R13,R2
    00001592 8BEC                   BF          L1193
      15062020.c   985                Bdisp_AllClr_DDVRAM();
    00001594 4E0B                   JSR         @R14
    00001596 0009                   NOP
      15062020.c   986                lf2menuitem4_4();
    00001598 B002                   BSR         _lf2menuitem4_4
    0000159A 0009                   NOP
    0000159C AFE7                   BRA         L1193
    0000159E 0009                   NOP
      15062020.c   987            }
      15062020.c   988        } 
      15062020.c   989    }
      15062020.c   990    int lf2menuitem4_4(){   
    000015A0              _lf2menuitem4_4:                 ; function: lf2menuitem4_4
                                                           ; frame size=4
      15062020.c   991        locate(1,1);
    000015A0 DE23                   MOV.L       L1246+8,R14; _locate
    000015A2 E501                   MOV         #1,R5
    000015A4 7FFC                   ADD         #-4,R15
    000015A6 4E0B                   JSR         @R14
    000015A8 6453                   MOV         R5,R4
      15062020.c   992        Print((unsigned char*)"ERP / SAP Systeme5/5");
    000015AA DD22                   MOV.L       L1246+12,R13; _Print
    000015AC D428                   MOV.L       L1246+40,R4; L753
    000015AE 4D0B                   JSR         @R13
    000015B0 0009                   NOP
      15062020.c   993        locate(1,3);
    000015B2 E503                   MOV         #3,R5
    000015B4 4E0B                   JSR         @R14
    000015B6 E401                   MOV         #1,R4
      15062020.c   994        Print((unsigned char*)"Nachteile:");
    000015B8 D426                   MOV.L       L1246+44,R4; L754
    000015BA 4D0B                   JSR         @R13
    000015BC 0009                   NOP
      15062020.c   995        locate(2,4);
    000015BE E504                   MOV         #4,R5
    000015C0 4E0B                   JSR         @R14
    000015C2 E402                   MOV         #2,R4
      15062020.c   996        Print((unsigned char*)"-Anschaffungskosten");
    000015C4 D424                   MOV.L       L1246+48,R4; L755
    000015C6 4D0B                   JSR         @R13
    000015C8 0009                   NOP
      15062020.c   997        locate(2,5);
    000015CA E505                   MOV         #5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015CC 4E0B                   JSR         @R14
    000015CE E402                   MOV         #2,R4
      15062020.c   998        Print((unsigned char*)"-Abhaengigkeit");
    000015D0 D422                   MOV.L       L1246+52,R4; L756
    000015D2 4D0B                   JSR         @R13
    000015D4 0009                   NOP
      15062020.c   999        locate(2,6);
    000015D6 E506                   MOV         #6,R5
    000015D8 4E0B                   JSR         @R14
    000015DA E402                   MOV         #2,R4
      15062020.c  1000        Print((unsigned char*)"-hohe komplexitat");
    000015DC D420                   MOV.L       L1246+56,R4; L757
    000015DE 4D0B                   JSR         @R13
    000015E0 0009                   NOP
      15062020.c  1001        locate(2,7);
    000015E2 E507                   MOV         #7,R5
    000015E4 4E0B                   JSR         @R14
    000015E6 E402                   MOV         #2,R4
      15062020.c  1002        Print((unsigned char*)"-dauerhaft kontrol-");
    000015E8 D41E                   MOV.L       L1246+60,R4; L758
    000015EA 4D0B                   JSR         @R13
    000015EC 0009                   NOP
      15062020.c  1003        locate(3,7);
    000015EE E507                   MOV         #7,R5
    000015F0 4E0B                   JSR         @R14
    000015F2 E403                   MOV         #3,R4
      15062020.c  1004        Print((unsigned char*)"le der Mitarbeiter");
    000015F4 D41C                   MOV.L       L1246+64,R4; L759
    000015F6 4D0B                   JSR         @R13
    000015F8 0009                   NOP
    000015FA DB13                   MOV.L       L1246+32,R11; _GetKey
    000015FC 9C16                   MOV.W       L1246+4,R12; H'7532
    000015FE 6DC3                   MOV         R12,R13
    00001600 DE12                   MOV.L       L1246+36,R14; _Bdisp_AllClr_DDVRAM
    00001602 7D10                   ADD         #16,R13
      15062020.c  1005        while (1){
    00001604              L1198:                            
      15062020.c  1006            unsigned int key;       
      15062020.c  1007            GetKey(&key);
    00001604 4B0B                   JSR         @R11
    00001606 64F3                   MOV         R15,R4
      15062020.c  1008            if(KEY_CTRL_EXIT == key) {
    00001608 62F2                   MOV.L       @R15,R2
    0000160A 32C0                   CMP/EQ      R12,R2
    0000160C 8B03                   BF          L1199
      15062020.c  1009                Bdisp_AllClr_DDVRAM();
    0000160E 4E0B                   JSR         @R14
    00001610 0009                   NOP
      15062020.c  1010                lf2menu();
    00001612 BBBB                   BSR         _lf2menu
    00001614 0009                   NOP
    00001616              L1199:                            
      15062020.c  1011            }
      15062020.c  1012            if(KEY_CTRL_UP == key) {
    00001616 63F2                   MOV.L       @R15,R3
    00001618 33D0                   CMP/EQ      R13,R3
    0000161A 8BF3                   BF          L1198




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c  1013                Bdisp_AllClr_DDVRAM();
    0000161C 4E0B                   JSR         @R14
    0000161E 0009                   NOP
      15062020.c  1014                lf2menuitem4_3();
    00001620 BF84                   BSR         _lf2menuitem4_3
    00001622 0009                   NOP
    00001624 AFEE                   BRA         L1198
    00001626 0009                   NOP
    00001628              L1246:                            
    00001628 7542                   .DATA.W     H'7542
    0000162A 7547                   .DATA.W     H'7547
    0000162C 7532                   .DATA.W     H'7532
    0000162E 0000                   .DATA.W     0
    00001630 <00000000>             .DATA.L     _locate
    00001634 <00000000>             .DATA.L     _Print
    00001638 <00000000>             .DATA.L     L742
    0000163C <00000000>             .DATA.L     L743
    00001640 <00000000>             .DATA.L     L744
    00001644 <00000000>             .DATA.L     L745
    00001648 <00000000>             .DATA.L     _GetKey
    0000164C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001650 <00000000>             .DATA.L     L753
    00001654 <00000000>             .DATA.L     L754
    00001658 <00000000>             .DATA.L     L755
    0000165C <00000000>             .DATA.L     L756
    00001660 <00000000>             .DATA.L     L757
    00001664 <00000000>             .DATA.L     L758
    00001668 <00000000>             .DATA.L     L759
      15062020.c  1015            }
      15062020.c  1016        } 
      15062020.c  1017    }
      15062020.c  1018    
      15062020.c  1019    int lf3list(){   
    0000166C              _lf3list:                        ; function: lf3list
                                                           ; frame size=4
      15062020.c  1020        locate(1,1);
    0000166C DE22                   MOV.L       L1247+2,R14; _locate
    0000166E E501                   MOV         #1,R5
    00001670 7FFC                   ADD         #-4,R15
    00001672 4E0B                   JSR         @R14
    00001674 6453                   MOV         R5,R4
      15062020.c  1021        Print((unsigned char*)"Netzwerktechnik  1/4");
    00001676 DD21                   MOV.L       L1247+6,R13; _Print
    00001678 D421                   MOV.L       L1247+10,R4; L765
    0000167A 4D0B                   JSR         @R13
    0000167C 0009                   NOP
      15062020.c  1022        locate(1,3);
    0000167E E503                   MOV         #3,R5
    00001680 4E0B                   JSR         @R14
    00001682 E401                   MOV         #1,R4
      15062020.c  1023        Print((unsigned char*)"DNS=Domain Name ");
    00001684 D41F                   MOV.L       L1247+14,R4; L766
    00001686 4D0B                   JSR         @R13
    00001688 0009                   NOP
      15062020.c  1024        locate(3,4);
    0000168A E504                   MOV         #4,R5
    0000168C 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000168E E403                   MOV         #3,R4
      15062020.c  1025        Print((unsigned char*)"Service");
    00001690 D41D                   MOV.L       L1247+18,R4; L767
    00001692 4D0B                   JSR         @R13
    00001694 0009                   NOP
      15062020.c  1026        locate(1,5);
    00001696 E505                   MOV         #5,R5
    00001698 4E0B                   JSR         @R14
    0000169A E401                   MOV         #1,R4
      15062020.c  1027        Print((unsigned char*)"DHCP=Dynamic Host");
    0000169C D41B                   MOV.L       L1247+22,R4; L768
    0000169E 4D0B                   JSR         @R13
    000016A0 0009                   NOP
      15062020.c  1028        locate(3,6);
    000016A2 E506                   MOV         #6,R5
    000016A4 4E0B                   JSR         @R14
    000016A6 E403                   MOV         #3,R4
      15062020.c  1029        Print((unsigned char*)"Config.Protokoll");
    000016A8 D419                   MOV.L       L1247+26,R4; L769
    000016AA 4D0B                   JSR         @R13
    000016AC 0009                   NOP
      15062020.c  1030        locate(1,7);
    000016AE E507                   MOV         #7,R5
    000016B0 4E0B                   JSR         @R14
    000016B2 E401                   MOV         #1,R4
      15062020.c  1031        Print((unsigned char*)"WWW=Weltweites Netz");
    000016B4 D417                   MOV.L       L1247+30,R4; L770
    000016B6 4D0B                   JSR         @R13
    000016B8 0009                   NOP
      15062020.c  1032        locate(1,8);
    000016BA E508                   MOV         #8,R5
    000016BC 4E0B                   JSR         @R14
    000016BE E401                   MOV         #1,R4
      15062020.c  1033        Print((unsigned char*)"RJ45=Netzwerkstecker");
    000016C0 D415                   MOV.L       L1247+34,R4; L771
    000016C2 4D0B                   JSR         @R13
    000016C4 0009                   NOP
    000016C6 DB15                   MOV.L       L1247+38,R11; _GetKey
    000016C8 9C15                   MOV.W       L1247,R12  ; H'7532
    000016CA 6DC3                   MOV         R12,R13
    000016CC DE14                   MOV.L       L1247+42,R14; _Bdisp_AllClr_DDVRAM
    000016CE 7D15                   ADD         #21,R13
      15062020.c  1034        while (1){
    000016D0              L1202:                            
      15062020.c  1035            unsigned int key;       
      15062020.c  1036            GetKey(&key);
    000016D0 4B0B                   JSR         @R11
    000016D2 64F3                   MOV         R15,R4
      15062020.c  1037            if(KEY_CTRL_EXIT == key) {
    000016D4 62F2                   MOV.L       @R15,R2
    000016D6 32C0                   CMP/EQ      R12,R2
    000016D8 8B04                   BF          L1203
      15062020.c  1038                Bdisp_AllClr_DDVRAM();
    000016DA 4E0B                   JSR         @R14
    000016DC 0009                   NOP
      15062020.c  1039                firstMenu();
    000016DE D111                   MOV.L       L1247+46,R1; _firstMenu




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016E0 410B                   JSR         @R1
    000016E2 0009                   NOP
    000016E4              L1203:                            
      15062020.c  1040            }
      15062020.c  1041            if(KEY_CTRL_DOWN == key) {
    000016E4 63F2                   MOV.L       @R15,R3
    000016E6 33D0                   CMP/EQ      R13,R3
    000016E8 8BF2                   BF          L1202
      15062020.c  1042                Bdisp_AllClr_DDVRAM();
    000016EA 4E0B                   JSR         @R14
    000016EC 0009                   NOP
      15062020.c  1043                lf3list_1();
    000016EE B01B                   BSR         _lf3list_1
    000016F0 0009                   NOP
    000016F2 AFED                   BRA         L1202
    000016F4 0009                   NOP
    000016F6              L1247:                            
    000016F6 7532                   .DATA.W     H'7532
    000016F8 <00000000>             .DATA.L     _locate
    000016FC <00000000>             .DATA.L     _Print
    00001700 <00000000>             .DATA.L     L765
    00001704 <00000000>             .DATA.L     L766
    00001708 <00000000>             .DATA.L     L767
    0000170C <00000000>             .DATA.L     L768
    00001710 <00000000>             .DATA.L     L769
    00001714 <00000000>             .DATA.L     L770
    00001718 <00000000>             .DATA.L     L771
    0000171C <00000000>             .DATA.L     _GetKey
    00001720 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001724 <00000000>             .DATA.L     _firstMenu
      15062020.c  1044            }
      15062020.c  1045        } 
      15062020.c  1046    }
      15062020.c  1047    int lf3list_1(){   
    00001728              _lf3list_1:                      ; function: lf3list_1
                                                           ; frame size=4
      15062020.c  1048        locate(1,1);
    00001728 DE27                   MOV.L       L1248+6,R14; _locate
    0000172A E501                   MOV         #1,R5
    0000172C 7FFC                   ADD         #-4,R15
    0000172E 4E0B                   JSR         @R14
    00001730 6453                   MOV         R5,R4
      15062020.c  1049        Print((unsigned char*)"Netzwerktechnik  2/4");
    00001732 DD26                   MOV.L       L1248+10,R13; _Print
    00001734 D426                   MOV.L       L1248+14,R4; L778
    00001736 4D0B                   JSR         @R13
    00001738 0009                   NOP
      15062020.c  1050        locate(1,3);
    0000173A E503                   MOV         #3,R5
    0000173C 4E0B                   JSR         @R14
    0000173E E401                   MOV         #1,R4
      15062020.c  1051        Print((unsigned char*)"TCP/IP=Stand. Netz-");
    00001740 D424                   MOV.L       L1248+18,R4; L779
    00001742 4D0B                   JSR         @R13
    00001744 0009                   NOP
      15062020.c  1052        locate(3,4);
    00001746 E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001748 4E0B                   JSR         @R14
    0000174A E403                   MOV         #3,R4
      15062020.c  1053        Print((unsigned char*)"werk Protokoll");
    0000174C D422                   MOV.L       L1248+22,R4; L780
    0000174E 4D0B                   JSR         @R13
    00001750 0009                   NOP
      15062020.c  1054        locate(1,5);
    00001752 E505                   MOV         #5,R5
    00001754 4E0B                   JSR         @R14
    00001756 E401                   MOV         #1,R4
      15062020.c  1055        Print((unsigned char*)"MAC Adr.=feste Adr.");
    00001758 D420                   MOV.L       L1248+26,R4; L781
    0000175A 4D0B                   JSR         @R13
    0000175C 0009                   NOP
      15062020.c  1056        locate(3,6);
    0000175E E506                   MOV         #6,R5
    00001760 4E0B                   JSR         @R14
    00001762 E403                   MOV         #3,R4
      15062020.c  1057        Print((unsigned char*)"in der NW Karte");
    00001764 D41E                   MOV.L       L1248+30,R4; L782
    00001766 4D0B                   JSR         @R13
    00001768 0009                   NOP
      15062020.c  1058        locate(1,7);
    0000176A E507                   MOV         #7,R5
    0000176C 4E0B                   JSR         @R14
    0000176E E401                   MOV         #1,R4
      15062020.c  1059        Print((unsigned char*)"ipconfig=Windows");
    00001770 D41C                   MOV.L       L1248+34,R4; L783
    00001772 4D0B                   JSR         @R13
    00001774 0009                   NOP
      15062020.c  1060        locate(1,8);
    00001776 E508                   MOV         #8,R5
    00001778 4E0B                   JSR         @R14
    0000177A E401                   MOV         #1,R4
      15062020.c  1061        Print((unsigned char*)"twisted Pair...");
    0000177C D41A                   MOV.L       L1248+38,R4; L784
    0000177E 4D0B                   JSR         @R13
    00001780 0009                   NOP
    00001782 DA1A                   MOV.L       L1248+42,R10; _GetKey
    00001784 9B1D                   MOV.W       L1248,R11  ; H'7542
    00001786 6CB3                   MOV         R11,R12
    00001788 9D1C                   MOV.W       L1248+2,R13; H'7547
    0000178A 7CF0                   ADD         #-16,R12
    0000178C DE18                   MOV.L       L1248+46,R14; _Bdisp_AllClr_DDVRAM
      15062020.c  1062        while (1){
    0000178E              L1206:                            
      15062020.c  1063            unsigned int key;       
      15062020.c  1064            GetKey(&key);
    0000178E 4A0B                   JSR         @R10
    00001790 64F3                   MOV         R15,R4
      15062020.c  1065            if(KEY_CTRL_EXIT == key) {
    00001792 62F2                   MOV.L       @R15,R2
    00001794 32C0                   CMP/EQ      R12,R2
    00001796 8B04                   BF          L1207
      15062020.c  1066                Bdisp_AllClr_DDVRAM();
    00001798 4E0B                   JSR         @R14
    0000179A 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c  1067                firstMenu();
    0000179C D115                   MOV.L       L1248+50,R1; _firstMenu
    0000179E 410B                   JSR         @R1
    000017A0 0009                   NOP
    000017A2              L1207:                            
      15062020.c  1068            }
      15062020.c  1069            if(KEY_CTRL_UP == key) {
    000017A2 63F2                   MOV.L       @R15,R3
    000017A4 33B0                   CMP/EQ      R11,R3
    000017A6 8B03                   BF          L1208
      15062020.c  1070                Bdisp_AllClr_DDVRAM();
    000017A8 4E0B                   JSR         @R14
    000017AA 0009                   NOP
      15062020.c  1071                lf3list();
    000017AC BF5E                   BSR         _lf3list
    000017AE 0009                   NOP
    000017B0              L1208:                            
      15062020.c  1072            }
      15062020.c  1073            if(KEY_CTRL_DOWN == key) {
    000017B0 62F2                   MOV.L       @R15,R2
    000017B2 32D0                   CMP/EQ      R13,R2
    000017B4 8BEB                   BF          L1206
      15062020.c  1074                Bdisp_AllClr_DDVRAM();
    000017B6 4E0B                   JSR         @R14
    000017B8 0009                   NOP
      15062020.c  1075                lf3list_2();
    000017BA B01D                   BSR         _lf3list_2
    000017BC 0009                   NOP
    000017BE AFE6                   BRA         L1206
    000017C0 0009                   NOP
    000017C2              L1248:                            
    000017C2 7542                   .DATA.W     H'7542
    000017C4 7547                   .DATA.W     H'7547
    000017C6 0000                   .DATA.W     0
    000017C8 <00000000>             .DATA.L     _locate
    000017CC <00000000>             .DATA.L     _Print
    000017D0 <00000000>             .DATA.L     L778
    000017D4 <00000000>             .DATA.L     L779
    000017D8 <00000000>             .DATA.L     L780
    000017DC <00000000>             .DATA.L     L781
    000017E0 <00000000>             .DATA.L     L782
    000017E4 <00000000>             .DATA.L     L783
    000017E8 <00000000>             .DATA.L     L784
    000017EC <00000000>             .DATA.L     _GetKey
    000017F0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000017F4 <00000000>             .DATA.L     _firstMenu
      15062020.c  1076            }
      15062020.c  1077        } 
      15062020.c  1078    }
      15062020.c  1079    int lf3list_2(){   
    000017F8              _lf3list_2:                      ; function: lf3list_2
                                                           ; frame size=4
      15062020.c  1080        locate(1,1);
    000017F8 DE27                   MOV.L       L1249+6,R14; _locate
    000017FA E501                   MOV         #1,R5
    000017FC 7FFC                   ADD         #-4,R15
    000017FE 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001800 6453                   MOV         R5,R4
      15062020.c  1081        Print((unsigned char*)"PC Technik       3/4");
    00001802 DD26                   MOV.L       L1249+10,R13; _Print
    00001804 D426                   MOV.L       L1249+14,R4; L792
    00001806 4D0B                   JSR         @R13
    00001808 0009                   NOP
      15062020.c  1082        locate(1,3);
    0000180A E503                   MOV         #3,R5
    0000180C 4E0B                   JSR         @R14
    0000180E E401                   MOV         #1,R4
      15062020.c  1083        Print((unsigned char*)"-Northbridge (CPU/");
    00001810 D424                   MOV.L       L1249+18,R4; L793
    00001812 4D0B                   JSR         @R13
    00001814 0009                   NOP
      15062020.c  1084        locate(3,4);
    00001816 E504                   MOV         #4,R5
    00001818 4E0B                   JSR         @R14
    0000181A E403                   MOV         #3,R4
      15062020.c  1085        Print((unsigned char*)"RAM/PCI(e))");
    0000181C D422                   MOV.L       L1249+22,R4; L794
    0000181E 4D0B                   JSR         @R13
    00001820 0009                   NOP
      15062020.c  1086        locate(1,5);
    00001822 E505                   MOV         #5,R5
    00001824 4E0B                   JSR         @R14
    00001826 E401                   MOV         #1,R4
      15062020.c  1087        Print((unsigned char*)"-Sourcebridge (USB/");
    00001828 D420                   MOV.L       L1249+26,R4; L795
    0000182A 4D0B                   JSR         @R13
    0000182C 0009                   NOP
      15062020.c  1088        locate(3,6);
    0000182E E506                   MOV         #6,R5
    00001830 4E0B                   JSR         @R14
    00001832 E403                   MOV         #3,R4
      15062020.c  1089        Print((unsigned char*)"PS2/PCI/S-ATA/IDE)");
    00001834 D41E                   MOV.L       L1249+30,R4; L796
    00001836 4D0B                   JSR         @R13
    00001838 0009                   NOP
      15062020.c  1090        locate(1,7);
    0000183A E507                   MOV         #7,R5
    0000183C 4E0B                   JSR         @R14
    0000183E E401                   MOV         #1,R4
      15062020.c  1091        Print((unsigned char*)"-BIOS=SW fur Mboard");
    00001840 D41C                   MOV.L       L1249+34,R4; L797
    00001842 4D0B                   JSR         @R13
    00001844 0009                   NOP
      15062020.c  1092        locate(1,8);
    00001846 E508                   MOV         #8,R5
    00001848 4E0B                   JSR         @R14
    0000184A E401                   MOV         #1,R4
      15062020.c  1093        Print((unsigned char*)"-POST=PowerOnSelfTest");
    0000184C D41A                   MOV.L       L1249+38,R4; L798
    0000184E 4D0B                   JSR         @R13
    00001850 0009                   NOP
    00001852 DA1A                   MOV.L       L1249+42,R10; _GetKey
    00001854 9B1D                   MOV.W       L1249,R11  ; H'7542
    00001856 6CB3                   MOV         R11,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001858 9D1C                   MOV.W       L1249+2,R13; H'7547
    0000185A 7CF0                   ADD         #-16,R12
    0000185C DE18                   MOV.L       L1249+46,R14; _Bdisp_AllClr_DDVRAM
      15062020.c  1094        while (1){
    0000185E              L1211:                            
      15062020.c  1095            unsigned int key;       
      15062020.c  1096            GetKey(&key);
    0000185E 4A0B                   JSR         @R10
    00001860 64F3                   MOV         R15,R4
      15062020.c  1097            if(KEY_CTRL_EXIT == key) {
    00001862 62F2                   MOV.L       @R15,R2
    00001864 32C0                   CMP/EQ      R12,R2
    00001866 8B04                   BF          L1212
      15062020.c  1098                Bdisp_AllClr_DDVRAM();
    00001868 4E0B                   JSR         @R14
    0000186A 0009                   NOP
      15062020.c  1099                firstMenu();
    0000186C D115                   MOV.L       L1249+50,R1; _firstMenu
    0000186E 410B                   JSR         @R1
    00001870 0009                   NOP
    00001872              L1212:                            
      15062020.c  1100            }
      15062020.c  1101            if(KEY_CTRL_UP == key) {
    00001872 63F2                   MOV.L       @R15,R3
    00001874 33B0                   CMP/EQ      R11,R3
    00001876 8B03                   BF          L1213
      15062020.c  1102                Bdisp_AllClr_DDVRAM();
    00001878 4E0B                   JSR         @R14
    0000187A 0009                   NOP
      15062020.c  1103                lf3list_1();
    0000187C BF54                   BSR         _lf3list_1
    0000187E 0009                   NOP
    00001880              L1213:                            
      15062020.c  1104            }
      15062020.c  1105            if(KEY_CTRL_DOWN == key) {
    00001880 62F2                   MOV.L       @R15,R2
    00001882 32D0                   CMP/EQ      R13,R2
    00001884 8BEB                   BF          L1211
      15062020.c  1106                Bdisp_AllClr_DDVRAM();
    00001886 4E0B                   JSR         @R14
    00001888 0009                   NOP
      15062020.c  1107                lf3list_3();
    0000188A B01D                   BSR         _lf3list_3
    0000188C 0009                   NOP
    0000188E AFE6                   BRA         L1211
    00001890 0009                   NOP
    00001892              L1249:                            
    00001892 7542                   .DATA.W     H'7542
    00001894 7547                   .DATA.W     H'7547
    00001896 0000                   .DATA.W     0
    00001898 <00000000>             .DATA.L     _locate
    0000189C <00000000>             .DATA.L     _Print
    000018A0 <00000000>             .DATA.L     L792
    000018A4 <00000000>             .DATA.L     L793
    000018A8 <00000000>             .DATA.L     L794
    000018AC <00000000>             .DATA.L     L795
    000018B0 <00000000>             .DATA.L     L796




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018B4 <00000000>             .DATA.L     L797
    000018B8 <00000000>             .DATA.L     L798
    000018BC <00000000>             .DATA.L     _GetKey
    000018C0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000018C4 <00000000>             .DATA.L     _firstMenu
      15062020.c  1108            }
      15062020.c  1109        } 
      15062020.c  1110    }
      15062020.c  1111    int lf3list_3(){   
    000018C8              _lf3list_3:                      ; function: lf3list_3
                                                           ; frame size=4
      15062020.c  1112        locate(1,1);
    000018C8 DE22                   MOV.L       L1250+2,R14; _locate
    000018CA E501                   MOV         #1,R5
    000018CC 7FFC                   ADD         #-4,R15
    000018CE 4E0B                   JSR         @R14
    000018D0 6453                   MOV         R5,R4
      15062020.c  1113        Print((unsigned char*)"PC Technik       4/4");
    000018D2 DD21                   MOV.L       L1250+6,R13; _Print
    000018D4 D421                   MOV.L       L1250+10,R4; L806
    000018D6 4D0B                   JSR         @R13
    000018D8 0009                   NOP
      15062020.c  1114        locate(1,3);
    000018DA E503                   MOV         #3,R5
    000018DC 4E0B                   JSR         @R14
    000018DE E401                   MOV         #1,R4
      15062020.c  1115        Print((unsigned char*)"-Speichermedien(Fes-");
    000018E0 D41F                   MOV.L       L1250+14,R4; L807
    000018E2 4D0B                   JSR         @R13
    000018E4 0009                   NOP
      15062020.c  1116        locate(3,4);
    000018E6 E504                   MOV         #4,R5
    000018E8 4E0B                   JSR         @R14
    000018EA E403                   MOV         #3,R4
      15062020.c  1117        Print((unsigned char*)"tplatte(SSD/HDD)/");
    000018EC D41D                   MOV.L       L1250+18,R4; L808
    000018EE 4D0B                   JSR         @R13
    000018F0 0009                   NOP
      15062020.c  1118        locate(3,5);
    000018F2 E505                   MOV         #5,R5
    000018F4 4E0B                   JSR         @R14
    000018F6 E403                   MOV         #3,R4
      15062020.c  1119        Print((unsigned char*)"RAM/USB-Stick)");
    000018F8 D41B                   MOV.L       L1250+22,R4; L809
    000018FA 4D0B                   JSR         @R13
    000018FC 0009                   NOP
      15062020.c  1120        locate(1,6);
    000018FE E506                   MOV         #6,R5
    00001900 4E0B                   JSR         @R14
    00001902 E401                   MOV         #1,R4
      15062020.c  1121        Print((unsigned char*)"-Dateiendungen (Word");
    00001904 D419                   MOV.L       L1250+26,R4; L810
    00001906 4D0B                   JSR         @R13
    00001908 0009                   NOP
      15062020.c  1122        locate(3,7);
    0000190A E507                   MOV         #7,R5
    0000190C 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000190E E403                   MOV         #3,R4
      15062020.c  1123        Print((unsigned char*)"=doc/docx PP=pptx/");
    00001910 D417                   MOV.L       L1250+30,R4; L811
    00001912 4D0B                   JSR         @R13
    00001914 0009                   NOP
      15062020.c  1124        locate(3,8);
    00001916 E508                   MOV         #8,R5
    00001918 4E0B                   JSR         @R14
    0000191A E403                   MOV         #3,R4
      15062020.c  1125        Print((unsigned char*)"ppt Excel=xls/xlsx");
    0000191C D415                   MOV.L       L1250+34,R4; L812
    0000191E 4D0B                   JSR         @R13
    00001920 0009                   NOP
    00001922 DB15                   MOV.L       L1250+38,R11; _GetKey
    00001924 9C15                   MOV.W       L1250,R12  ; H'7532
    00001926 6DC3                   MOV         R12,R13
    00001928 DE14                   MOV.L       L1250+42,R14; _Bdisp_AllClr_DDVRAM
    0000192A 7D10                   ADD         #16,R13
      15062020.c  1126        while (1){
    0000192C              L1216:                            
      15062020.c  1127            unsigned int key;       
      15062020.c  1128            GetKey(&key);
    0000192C 4B0B                   JSR         @R11
    0000192E 64F3                   MOV         R15,R4
      15062020.c  1129            if(KEY_CTRL_EXIT == key) {
    00001930 62F2                   MOV.L       @R15,R2
    00001932 32C0                   CMP/EQ      R12,R2
    00001934 8B04                   BF          L1217
      15062020.c  1130                Bdisp_AllClr_DDVRAM();
    00001936 4E0B                   JSR         @R14
    00001938 0009                   NOP
      15062020.c  1131                firstMenu();
    0000193A D111                   MOV.L       L1250+46,R1; _firstMenu
    0000193C 410B                   JSR         @R1
    0000193E 0009                   NOP
    00001940              L1217:                            
      15062020.c  1132            }
      15062020.c  1133            if(KEY_CTRL_UP == key) {
    00001940 63F2                   MOV.L       @R15,R3
    00001942 33D0                   CMP/EQ      R13,R3
    00001944 8BF2                   BF          L1216
      15062020.c  1134                Bdisp_AllClr_DDVRAM();
    00001946 4E0B                   JSR         @R14
    00001948 0009                   NOP
      15062020.c  1135                lf3list_2();
    0000194A BF55                   BSR         _lf3list_2
    0000194C 0009                   NOP
    0000194E AFED                   BRA         L1216
    00001950 0009                   NOP
    00001952              L1250:                            
    00001952 7532                   .DATA.W     H'7532
    00001954 <00000000>             .DATA.L     _locate
    00001958 <00000000>             .DATA.L     _Print
    0000195C <00000000>             .DATA.L     L806
    00001960 <00000000>             .DATA.L     L807
    00001964 <00000000>             .DATA.L     L808
    00001968 <00000000>             .DATA.L     L809




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000196C <00000000>             .DATA.L     L810
    00001970 <00000000>             .DATA.L     L811
    00001974 <00000000>             .DATA.L     L812
    00001978 <00000000>             .DATA.L     _GetKey
    0000197C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001980 <00000000>             .DATA.L     _firstMenu
      15062020.c  1136            }
      15062020.c  1137        } 
      15062020.c  1138    }
      15062020.c  1139    
      15062020.c  1140    //****************************************************************************
      15062020.c  1141    //**************                                              ****************
      15062020.c  1142    //**************                 Notice!                      ****************
      15062020.c  1143    //**************                                              ****************
      15062020.c  1144    //**************  Please do not change the following source.  ****************
      15062020.c  1145    //**************                                              ****************
      15062020.c  1146    //****************************************************************************
      15062020.c  1147    #pragma section _BR_Size
      15062020.c  1148    unsigned long BR_Size;
      15062020.c  1149    #pragma section
      15062020.c  1150    #pragma section _TOP
      15062020.c  1151    //****************************************************************************
      15062020.c  1152    //  InitializeSystem
      15062020.c  1153    //
      15062020.c  1154    //  param   :   isAppli   : 1 = Application / 0 = eActivity
      15062020.c  1155    //              OptionNum : Option Number (only eActivity)
      15062020.c  1156    //
      15062020.c  1157    //  retval  :   1 = No error / 0 = Error
      15062020.c  1158    //
      15062020.c  1159    //****************************************************************************
      15062020.c  1160    int InitializeSystem(int isAppli, unsigned short OptionNum){
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      15062020.c  1161        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L1251+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1251:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      15062020.c  1162    }
      15062020.c  1163    #pragma section
D   00000000              _drmCheck:                       ; static: drmCheck
    00000000 00000000               .DATA.L     H'00000000
C   00000000              L352:
    00000000 <00000000>             .DATA.L     L353,L354,L355,L356,L357,L358
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000018              L359:
    00000018 537069636B             .SDATA      "Spicker :D"
             6572203A44   
    00000022 00                     .DATA.B     H'00
    00000023 00000001               .RES.B      1
    00000024              L363:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000024 3E                     .SDATA      ">"
    00000025 00                     .DATA.B     H'00
    00000026 00000002               .RES.W      1
    00000028              L366:
    00000028 20                     .SDATA      " "
    00000029 00                     .DATA.B     H'00
    0000002A 00000002               .RES.W      1
    0000002C              L377:
    0000002C 5445535434             .SDATA      "TEST4"
    00000031 00                     .DATA.B     H'00
    00000032 00000002               .RES.W      1
    00000034              L379:
    00000034 5445535435             .SDATA      "TEST5"
    00000039 00                     .DATA.B     H'00
    0000003A 00000002               .RES.W      1
    0000003C              L386:
    0000003C 44524D                 .SDATA      "DRM"
    0000003F 00                     .DATA.B     H'00
    00000040              L387:
    00000040 436F646520             .SDATA      "Code eingeben"
             65696E6765   
             62656E       
    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L388:
    00000050 5B205D205B             .SDATA      "[ ] [ ] [ ]"
             205D205B20   
             5D           
    0000005B 00                     .DATA.B     H'00
    0000005C              L391:
    0000005C 30                     .SDATA      "0"
    0000005D 00                     .DATA.B     H'00
    0000005E 00000002               .RES.W      1
    00000060              L393:
    00000060 31                     .SDATA      "1"
    00000061 00                     .DATA.B     H'00
    00000062 00000002               .RES.W      1
    00000064              L395:
    00000064 32                     .SDATA      "2"
    00000065 00                     .DATA.B     H'00
    00000066 00000002               .RES.W      1
    00000068              L397:
    00000068 33                     .SDATA      "3"
    00000069 00                     .DATA.B     H'00
    0000006A 00000002               .RES.W      1
    0000006C              L399:
    0000006C 34                     .SDATA      "4"
    0000006D 00                     .DATA.B     H'00
    0000006E 00000002               .RES.W      1
    00000070              L401:
    00000070 35                     .SDATA      "5"
    00000071 00                     .DATA.B     H'00
    00000072 00000002               .RES.W      1
    00000074              L403:
    00000074 36                     .SDATA      "6"
    00000075 00                     .DATA.B     H'00
    00000076 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000078              L405:
    00000078 37                     .SDATA      "7"
    00000079 00                     .DATA.B     H'00
    0000007A 00000002               .RES.W      1
    0000007C              L407:
    0000007C 38                     .SDATA      "8"
    0000007D 00                     .DATA.B     H'00
    0000007E 00000002               .RES.W      1
    00000080              L409:
    00000080 39                     .SDATA      "9"
    00000081 00                     .DATA.B     H'00
    00000082 00000002               .RES.W      1
    00000084              L421:
    00000084 <00000000>             .DATA.L     L422,L423,L424,L425,L426
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000098              L447:
    00000098 2D4D696E69             .SDATA      "-Minimal Prinzip"
             6D616C2050   
             72696E7A69   
             70           
    000000A8 00                     .DATA.B     H'00
    000000A9 00000001               .RES.B      1
    000000AA 00000002               .RES.W      1
    000000AC              L448:
    000000AC 566F726765             .SDATA      "Vorgegebenes Ziel"
             676562656E   
             6573205A69   
             656C         
    000000BD 00                     .DATA.B     H'00
    000000BE 00000002               .RES.W      1
    000000C0              L449:
    000000C0 77656E6967             .SDATA      "wenig Ausgaben"
             2041757367   
             6162656E     
    000000CE 00                     .DATA.B     H'00
    000000CF 00000001               .RES.B      1
    000000D0              L450:
    000000D0 2D4D617869             .SDATA      "-Maximal Prinzip"
             6D616C2050   
             72696E7A69   
             70           
    000000E0 00                     .DATA.B     H'00
    000000E1 00000001               .RES.B      1
    000000E2 00000002               .RES.W      1
    000000E4              L451:
    000000E4 45696E7361             .SDATA      "Einsatz vorgegeben"
             747A20766F   
             7267656765   
             62656E       
    000000F6 00                     .DATA.B     H'00
    000000F7 00000001               .RES.B      1
    000000F8              L452:
    000000F8 7669656C20             .SDATA      "viel Ziel erreichen"
             5A69656C20   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6572726569   
             6368656E     
    0000010B 00                     .DATA.B     H'00
    0000010C              L457:
    0000010C 5265636874             .SDATA      "Rechtsformen 1/2"
             73666F726D   
             656E20312F   
             32           
    0000011C 00                     .DATA.B     H'00
    0000011D 00000001               .RES.B      1
    0000011E 00000002               .RES.W      1
    00000120              L458:
    00000120 506572736F             .SDATA      "Personengesellschaft"
             6E656E6765   
             73656C6C73   
             6368616674   
    00000134 00                     .DATA.B     H'00
    00000135 00000001               .RES.B      1
    00000136 00000002               .RES.W      1
    00000138              L459:
    00000138 2D652E4B2E             .SDATA      "-e.K. eingetragener"
             2065696E67   
             6574726167   
             656E6572     
    0000014B 00                     .DATA.B     H'00
    0000014C              L460:
    0000014C 4B6175666D             .SDATA      "Kaufmann"
             616E6E       
    00000154 00                     .DATA.B     H'00
    00000155 00000001               .RES.B      1
    00000156 00000002               .RES.W      1
    00000158              L461:
    00000158 2D4F484720             .SDATA      "-OHG offene Handels-"
             6F6666656E   
             652048616E   
             64656C732D   
    0000016C 00                     .DATA.B     H'00
    0000016D 00000001               .RES.B      1
    0000016E 00000002               .RES.W      1
    00000170              L462:
    00000170 676573656C             .SDATA      "gesellschaft"
             6C73636861   
             6674         
    0000017C 00                     .DATA.B     H'00
    0000017D 00000001               .RES.B      1
    0000017E 00000002               .RES.W      1
    00000180              L463:
    00000180 2D4B67204B             .SDATA      "-Kg Kommandit-"
             6F6D6D616E   
             6469742D     
    0000018E 00                     .DATA.B     H'00
    0000018F 00000001               .RES.B      1
    00000190              L470:
    00000190 5265636874             .SDATA      "Rechtsformen 2/2"
             73666F726D   
             656E20322F   
             32           




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001A0 00                     .DATA.B     H'00
    000001A1 00000001               .RES.B      1
    000001A2 00000002               .RES.W      1
    000001A4              L471:
    000001A4 4B61706974             .SDATA      "Kapitalgesellschaft"
             616C676573   
             656C6C7363   
             68616674     
    000001B7 00                     .DATA.B     H'00
    000001B8              L472:
    000001B8 2D476D6248             .SDATA      "-GmbH Gesellschaft"
             2047657365   
             6C6C736368   
             616674       
    000001CA 00                     .DATA.B     H'00
    000001CB 00000001               .RES.B      1
    000001CC              L473:
    000001CC 6D69742062             .SDATA      "mit beschrankter"
             6573636872   
             616E6B7465   
             72           
    000001DC 00                     .DATA.B     H'00
    000001DD 00000001               .RES.B      1
    000001DE 00000002               .RES.W      1
    000001E0              L474:
    000001E0 4861667475             .SDATA      "Haftung"
             6E67         
    000001E7 00                     .DATA.B     H'00
    000001E8              L475:
    000001E8 2D41472041             .SDATA      "-AG Aktien-"
             6B7469656E   
             2D           
    000001F3 00                     .DATA.B     H'00
    000001F4              L481:
    000001F4 2D4F48473A             .SDATA      "-OHG: 4% auf Kapital"
             2034252061   
             7566204B61   
             706974616C   
    00000208 00                     .DATA.B     H'00
    00000209 00000001               .RES.B      1
    0000020A 00000002               .RES.W      1
    0000020C              L482:
    0000020C 45696E6C61             .SDATA      "Einlagen, Rest nach"
             67656E2C20   
             5265737420   
             6E616368     
    0000021F 00                     .DATA.B     H'00
    00000220              L483:
    00000220 4B6F657066             .SDATA      "Koepfen."
             656E2E       
    00000228 00                     .DATA.B     H'00
    00000229 00000001               .RES.B      1
    0000022A 00000002               .RES.W      1
    0000022C              L484:
    0000022C 2D4B473A20             .SDATA      "-KG: 4% auf Kapital"
             3425206175   
             66204B6170   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6974616C     
    0000023F 00                     .DATA.B     H'00
    00000240              L485:
    00000240 45696E6C61             .SDATA      "Einlagen, Rest im"
             67656E2C20   
             5265737420   
             696D         
    00000251 00                     .DATA.B     H'00
    00000252 00000002               .RES.W      1
    00000254              L486:
    00000254 616E67656D             .SDATA      "angemessenen"
             657373656E   
             656E         
    00000260 00                     .DATA.B     H'00
    00000261 00000001               .RES.B      1
    00000262 00000002               .RES.W      1
    00000264              L487:
    00000264 5665726861             .SDATA      "Verhaeltnissen"
             656C746E69   
             7373656E     
    00000272 00                     .DATA.B     H'00
    00000273 00000001               .RES.B      1
    00000274              L492:
    00000274 4861667475             .SDATA      "Haftung 1/5"
             6E6720312F   
             35           
    0000027F 00                     .DATA.B     H'00
    00000280              L493:
    00000280 4B6F6D6D61             .SDATA      "Kommanditgesellschaf"
             6E64697467   
             6573656C6C   
             7363686166   
    00000294 00                     .DATA.B     H'00
    00000295 00000001               .RES.B      1
    00000296 00000002               .RES.W      1
    00000298              L494:
    00000298 2D4B6F6D6D             .SDATA      "-Kommandist: Haftung"
             616E646973   
             743A204861   
             6674756E67   
    000002AC 00                     .DATA.B     H'00
    000002AD 00000001               .RES.B      1
    000002AE 00000002               .RES.W      1
    000002B0              L495:
    000002B0 6D69742065             .SDATA      "mit eingelargertem"
             696E67656C   
             6172676572   
             74656D       
    000002C2 00                     .DATA.B     H'00
    000002C3 00000001               .RES.B      1
    000002C4              L496:
    000002C4 4B61706974             .SDATA      "Kapital, keine"
             616C2C206B   
             65696E65     
    000002D2 00                     .DATA.B     H'00
    000002D3 00000001               .RES.B      1
    000002D4              L497:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D4 4765736368             .SDATA      "Geschaftsfuhrung"
             6166747366   
             756872756E   
             67           
    000002E4 00                     .DATA.B     H'00
    000002E5 00000001               .RES.B      1
    000002E6 00000002               .RES.W      1
    000002E8              L498:
    000002E8 2D4B6F6D70             .SDATA      "-Komplimentaer"
             6C696D656E   
             74616572     
    000002F6 00                     .DATA.B     H'00
    000002F7 00000001               .RES.B      1
    000002F8              L499:
    000002F8 4861667475             .SDATA      "Haftung mit Kapital"
             6E67206D69   
             74204B6170   
             6974616C     
    0000030B 00                     .DATA.B     H'00
    0000030C              L506:
    0000030C 4861667475             .SDATA      "Haftung 2/5"
             6E6720322F   
             35           
    00000317 00                     .DATA.B     H'00
    00000318              L507:
    00000318 45696E6C61             .SDATA      "Einlagen und privat"
             67656E2075   
             6E64207072   
             69766174     
    0000032B 00                     .DATA.B     H'00
    0000032C              L508:
    0000032C 4765736368             .SDATA      "Geschaftsfuhrer"
             6166747366   
             7568726572   
    0000033B 00                     .DATA.B     H'00
    0000033C              L509:
    0000033C 4F6666656E             .SDATA      "Offene Handelsgesel."
             652048616E   
             64656C7367   
             6573656C2E   
    00000350 00                     .DATA.B     H'00
    00000351 00000001               .RES.B      1
    00000352 00000002               .RES.W      1
    00000354              L510:
    00000354 2D756E6D69             .SDATA      "-unmittelbar ("
             7474656C62   
             61722028     
    00000362 00                     .DATA.B     H'00
    00000363 00000001               .RES.B      1
    00000364              L511:
    00000364 476C617562             .SDATA      "Glaubiger kann an"
             6967657220   
             6B616E6E20   
             616E         
    00000375 00                     .DATA.B     H'00
    00000376 00000002               .RES.W      1
    00000378              L512:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000378 476573656C             .SDATA      "Gesellschafter"
             6C73636861   
             66746572     
    00000386 00                     .DATA.B     H'00
    00000387 00000001               .RES.B      1
    00000388              L520:
    00000388 4861667475             .SDATA      "Haftung 3/5"
             6E6720332F   
             35           
    00000393 00                     .DATA.B     H'00
    00000394              L521:
    00000394 686572616E             .SDATA      "herantreten und"
             7472657465   
             6E20756E64   
    000003A3 00                     .DATA.B     H'00
    000003A4              L522:
    000003A4 536368756C             .SDATA      "Schulden einfordern"
             64656E2065   
             696E666F72   
             6465726E     
    000003B7 00                     .DATA.B     H'00
    000003B8              L523:
    000003B8 2D756E6265             .SDATA      "-unbeschrankt ("
             7363687261   
             6E6B742028   
    000003C7 00                     .DATA.B     H'00
    000003C8              L524:
    000003C8 7072697661             .SDATA      "privat+Gesellschaft"
             742B476573   
             656C6C7363   
             68616674     
    000003DB 00                     .DATA.B     H'00
    000003DC              L525:
    000003DC 7665726D6F             .SDATA      "vermoegen)"
             6567656E29   
    000003E6 00                     .DATA.B     H'00
    000003E7 00000001               .RES.B      1
    000003E8              L526:
    000003E8 2D536F6C69             .SDATA      "-Solidarisch ("
             6461726973   
             63682028     
    000003F6 00                     .DATA.B     H'00
    000003F7 00000001               .RES.B      1
    000003F8              L527:
    000003F8 67656D6569             .SDATA      "gemeinsame Haftung"
             6E73616D65   
             2048616674   
             756E67       
    0000040A 00                     .DATA.B     H'00
    0000040B 00000001               .RES.B      1
    0000040C              L535:
    0000040C 4861667475             .SDATA      "Haftung 4/5"
             6E6720342F   
             35           
    00000417 00                     .DATA.B     H'00
    00000418              L536:
    00000418 696E20616C             .SDATA      "in alle fuer einen"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6C65206675   
             6572206569   
             6E656E       
    0000042A 00                     .DATA.B     H'00
    0000042B 00000001               .RES.B      1
    0000042C              L537:
    0000042C 4D75736B65             .SDATA      "Musketierprinzip)"
             7469657270   
             72696E7A69   
             7029         
    0000043D 00                     .DATA.B     H'00
    0000043E 00000002               .RES.W      1
    00000440              L538:
    00000440 476D624820             .SDATA      "GmbH (Grundungs-"
             284772756E   
             64756E6773   
             2D           
    00000450 00                     .DATA.B     H'00
    00000451 00000001               .RES.B      1
    00000452 00000002               .RES.W      1
    00000454              L539:
    00000454 6B61706974             .SDATA      "kapital 25.000Eur,"
             616C203235   
             2E30303045   
             75722C       
    00000466 00                     .DATA.B     H'00
    00000467 00000001               .RES.B      1
    00000468              L540:
    00000468 6E61636820             .SDATA      "nach Anteilen am"
             416E746569   
             6C656E2061   
             6D           
    00000478 00                     .DATA.B     H'00
    00000479 00000001               .RES.B      1
    0000047A 00000002               .RES.W      1
    0000047C              L548:
    0000047C 4861667475             .SDATA      "Haftung 5/5"
             6E6720352F   
             35           
    00000487 00                     .DATA.B     H'00
    00000488              L549:
    00000488 476573616D             .SDATA      "Gesamtvermoegen)"
             747665726D   
             6F6567656E   
             29           
    00000498 00                     .DATA.B     H'00
    00000499 00000001               .RES.B      1
    0000049A 00000002               .RES.W      1
    0000049C              L550:
    0000049C 2D41472028             .SDATA      "-AG (Grundungs-"
             4772756E64   
             756E67732D   
    000004AB 00                     .DATA.B     H'00
    000004AC              L551:
    000004AC 6B61706974             .SDATA      "kapital 50.000Eur,"
             616C203530   
             2E30303045   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             75722C       
    000004BE 00                     .DATA.B     H'00
    000004BF 00000001               .RES.B      1
    000004C0              L552:
    000004C0 4469766964             .SDATA      "Dividenden, Kurs-"
             656E64656E   
             2C204B7572   
             732D         
    000004D1 00                     .DATA.B     H'00
    000004D2 00000002               .RES.W      1
    000004D4              L553:
    000004D4 676577696E             .SDATA      "gewinne, Anteile)"
             6E652C2041   
             6E7465696C   
             6529         
    000004E5 00                     .DATA.B     H'00
    000004E6 00000002               .RES.W      1
    000004E8              L559:
    000004E8 5072656973             .SDATA      "Preisbildungs... 1/3"
             62696C6475   
             6E67732E2E   
             2E20312F33   
    000004FC 00                     .DATA.B     H'00
    000004FD 00000001               .RES.B      1
    000004FE 00000002               .RES.W      1
    00000500              L560:
    00000500 2D4D61726B             .SDATA      "-Markt"
             74           
    00000506 00                     .DATA.B     H'00
    00000507 00000001               .RES.B      1
    00000508              L561:
    00000508 416E676562             .SDATA      "Angebot<->Nachfrage"
             6F743C2D3E   
             4E61636866   
             72616765     
    0000051B 00                     .DATA.B     H'00
    0000051C              L562:
    0000051C 446572204D             .SDATA      "Der Markt wird"
             61726B7420   
             77697264     
    0000052A 00                     .DATA.B     H'00
    0000052B 00000001               .RES.B      1
    0000052C              L563:
    0000052C 4D69746869             .SDATA      "Mithilfe eines"
             6C66652065   
             696E6573     
    0000053A 00                     .DATA.B     H'00
    0000053B 00000001               .RES.B      1
    0000053C              L564:
    0000053C 4D6F64656C             .SDATA      "Modells vereinfacht"
             6C73207665   
             7265696E66   
             61636874     
    0000054F 00                     .DATA.B     H'00
    00000550              L565:
    00000550 6461726765             .SDATA      "dargestellt:"
             7374656C6C   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             743A         
    0000055C 00                     .DATA.B     H'00
    0000055D 00000001               .RES.B      1
    0000055E 00000002               .RES.W      1
    00000560              L566:
    00000560 766F6C6C6B             .SDATA      "vollkommener Markt"
             6F6D6D656E   
             6572204D61   
             726B74       
    00000572 00                     .DATA.B     H'00
    00000573 00000001               .RES.B      1
    00000574              L573:
    00000574 5072656973             .SDATA      "Preisbildungs... 2/3"
             62696C6475   
             6E67732E2E   
             2E20322F33   
    00000588 00                     .DATA.B     H'00
    00000589 00000001               .RES.B      1
    0000058A 00000002               .RES.W      1
    0000058C              L574:
    0000058C 5265616C69             .SDATA      "Realitat:"
             7461743A     
    00000595 00                     .DATA.B     H'00
    00000596 00000002               .RES.W      1
    00000598              L575:
    00000598 756E766F6C             .SDATA      "unvollkomm. Markt"
             6C6B6F6D6D   
             2E204D6172   
             6B74         
    000005A9 00                     .DATA.B     H'00
    000005AA 00000002               .RES.W      1
    000005AC              L576:
    000005AC 416E676562             .SDATA      "Angebotskurve"
             6F74736B75   
             727665       
    000005B9 00                     .DATA.B     H'00
    000005BA 00000002               .RES.W      1
    000005BC              L577:
    000005BC 312920416E             .SDATA      "1) Angebotskurve"
             6765626F74   
             736B757276   
             65           
    000005CC 00                     .DATA.B     H'00
    000005CD 00000001               .RES.B      1
    000005CE 00000002               .RES.W      1
    000005D0              L578:
    000005D0 3229204B61             .SDATA      "2) Kaufermarkt"
             756665726D   
             61726B74     
    000005DE 00                     .DATA.B     H'00
    000005DF 00000001               .RES.B      1
    000005E0              L579:
    000005E0 332920476C             .SDATA      "3) Gleichgew.spreis"
             6569636867   
             65772E7370   
             72656973     
    000005F3 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005F4              L587:
    000005F4 5072656973             .SDATA      "Preisbildungs... 3/3"
             62696C6475   
             6E67732E2E   
             2E20332F33   
    00000608 00                     .DATA.B     H'00
    00000609 00000001               .RES.B      1
    0000060A 00000002               .RES.W      1
    0000060C              L588:
    0000060C 3429205665             .SDATA      "4) Verkaufermarkt"
             726B617566   
             65726D6172   
             6B74         
    0000061D 00                     .DATA.B     H'00
    0000061E 00000002               .RES.W      1
    00000620              L589:
    00000620 3529204E61             .SDATA      "5) Nachfragekurve"
             6368667261   
             67656B7572   
             7665         
    00000631 00                     .DATA.B     H'00
    00000632 00000002               .RES.W      1
    00000634              L590:
    00000634 58203D2035             .SDATA      "X = 50Eur, 350Stk."
             304575722C   
             2033353053   
             746B2E       
    00000646 00                     .DATA.B     H'00
    00000647 00000001               .RES.B      1
    00000648              L591:
    00000648 5669656C20             .SDATA      "Viel Umsatz=50Eur."
             556D736174   
             7A3D353045   
             75722E       
    0000065A 00                     .DATA.B     H'00
    0000065B 00000001               .RES.B      1
    0000065C              L592:
    0000065C 5669656C20             .SDATA      "Viel Umsatz=350Stk."
             556D736174   
             7A3D333530   
             53746B2E     
    0000066F 00                     .DATA.B     H'00
    00000670              L593:
    00000670 556D61783D             .SDATA      "Umax=50E*350S=17,5k"
             3530452A33   
             3530533D31   
             372C356B     
    00000683 00                     .DATA.B     H'00
    00000684              L605:
    00000684 <00000000>             .DATA.L     L606,L607,L608,L609
             <00000000>   
             <00000000>   
             <00000000>   
    00000694              L628:
    00000694 4F7267616E             .SDATA      "Organisation 1/4"
             6973617469   
             6F6E20312F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             34           
    000006A4 00                     .DATA.B     H'00
    000006A5 00000001               .RES.B      1
    000006A6 00000002               .RES.W      1
    000006A8              L629:
    000006A8 2D5A776563             .SDATA      "-Zweckmassigkeit"
             6B6D617373   
             69676B6569   
             74           
    000006B8 00                     .DATA.B     H'00
    000006B9 00000001               .RES.B      1
    000006BA 00000002               .RES.W      1
    000006BC              L630:
    000006BC 4175666761             .SDATA      "Aufgab./Tatigkeiten"
             622E2F5461   
             7469676B65   
             6974656E     
    000006CF 00                     .DATA.B     H'00
    000006D0              L631:
    000006D0 736F6C6C74             .SDATA      "sollten dem"
             656E206465   
             6D           
    000006DB 00                     .DATA.B     H'00
    000006DC              L632:
    000006DC 556E746572             .SDATA      "Unternehmensziel"
             6E65686D65   
             6E737A6965   
             6C           
    000006EC 00                     .DATA.B     H'00
    000006ED 00000001               .RES.B      1
    000006EE 00000002               .RES.W      1
    000006F0              L633:
    000006F0 656E747370             .SDATA      "entsprechen alles"
             7265636865   
             6E20616C6C   
             6573         
    00000701 00                     .DATA.B     H'00
    00000702 00000002               .RES.W      1
    00000704              L634:
    00000704 616E646572             .SDATA      "andere ist unzweck."
             6520697374   
             20756E7A77   
             65636B2E     
    00000717 00                     .DATA.B     H'00
    00000718              L641:
    00000718 4F7267616E             .SDATA      "Organisation 2/4"
             6973617469   
             6F6E20322F   
             34           
    00000728 00                     .DATA.B     H'00
    00000729 00000001               .RES.B      1
    0000072A 00000002               .RES.W      1
    0000072C              L642:
    0000072C 2D57697274             .SDATA      "-Wirtschaftlichkeit"
             7363686166   
             746C696368   
             6B656974     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000073F 00                     .DATA.B     H'00
    00000740              L643:
    00000740 542C20412C             .SDATA      "T, A, Regelungen"
             2052656765   
             6C756E6765   
             6E           
    00000750 00                     .DATA.B     H'00
    00000751 00000001               .RES.B      1
    00000752 00000002               .RES.W      1
    00000754              L644:
    00000754 736F6C6C74             .SDATA      "sollten dem oko-"
             656E206465   
             6D206F6B6F   
             2D           
    00000764 00                     .DATA.B     H'00
    00000765 00000001               .RES.B      1
    00000766 00000002               .RES.W      1
    00000768              L645:
    00000768 6C6F676973             .SDATA      "logischem Prinzip"
             6368656D20   
             5072696E7A   
             6970         
    00000779 00                     .DATA.B     H'00
    0000077A 00000002               .RES.W      1
    0000077C              L646:
    0000077C 656E747370             .SDATA      "entsprechen. Bsp.:"
             7265636865   
             6E2E204273   
             702E3A       
    0000078E 00                     .DATA.B     H'00
    0000078F 00000001               .RES.B      1
    00000790              L647:
    00000790 4D696E2E20             .SDATA      "Min. Max. Prinzip"
             4D61782E20   
             5072696E7A   
             6970         
    000007A1 00                     .DATA.B     H'00
    000007A2 00000002               .RES.W      1
    000007A4              L655:
    000007A4 4F7267616E             .SDATA      "Organisation 3/4"
             6973617469   
             6F6E20332F   
             34           
    000007B4 00                     .DATA.B     H'00
    000007B5 00000001               .RES.B      1
    000007B6 00000002               .RES.W      1
    000007B8              L656:
    000007B8 2D4B6C6172             .SDATA      "-Klarheit"
             68656974     
    000007C1 00                     .DATA.B     H'00
    000007C2 00000002               .RES.W      1
    000007C4              L657:
    000007C4 736F6C6C74             .SDATA      "sollten klar"
             656E206B6C   
             6172         
    000007D0 00                     .DATA.B     H'00
    000007D1 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007D2 00000002               .RES.W      1
    000007D4              L658:
    000007D4 646566696E             .SDATA      "definiert sein,"
             6965727420   
             7365696E2C   
    000007E3 00                     .DATA.B     H'00
    000007E4              L659:
    000007E4 64616D6974             .SDATA      "damit jeder es"
             206A656465   
             72206573     
    000007F2 00                     .DATA.B     H'00
    000007F3 00000001               .RES.B      1
    000007F4              L660:
    000007F4 7665727374             .SDATA      "versteht."
             6568742E     
    000007FD 00                     .DATA.B     H'00
    000007FE 00000002               .RES.W      1
    00000800              L668:
    00000800 4F7267616E             .SDATA      "Organisation 4/4"
             6973617469   
             6F6E20342F   
             34           
    00000810 00                     .DATA.B     H'00
    00000811 00000001               .RES.B      1
    00000812 00000002               .RES.W      1
    00000814              L669:
    00000814 2D476C6569             .SDATA      "-Gleichgewicht"
             6368676577   
             69636874     
    00000822 00                     .DATA.B     H'00
    00000823 00000001               .RES.B      1
    00000824              L670:
    00000824 4461756572             .SDATA      "Dauerregel (Organ-"
             726567656C   
             20284F7267   
             616E2D       
    00000836 00                     .DATA.B     H'00
    00000837 00000001               .RES.B      1
    00000838              L671:
    00000838 6973617469             .SDATA      "isation), Einzel ("
             6F6E292C20   
             45696E7A65   
             6C2028       
    0000084A 00                     .DATA.B     H'00
    0000084B 00000001               .RES.B      1
    0000084C              L672:
    0000084C 446973706F             .SDATA      "Disposition) u. "
             736974696F   
             6E2920752E   
             20           
    0000085C 00                     .DATA.B     H'00
    0000085D 00000001               .RES.B      1
    0000085E 00000002               .RES.W      1
    00000860              L673:
    00000860 496D70726F             .SDATA      "Improvisation."
             7669736174   
             696F6E2E     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000086E 00                     .DATA.B     H'00
    0000086F 00000001               .RES.B      1
    00000870              L674:
    00000870 756E746572             .SDATA      "unter/ueber-"
             2F75656265   
             722D         
    0000087C 00                     .DATA.B     H'00
    0000087D 00000001               .RES.B      1
    0000087E 00000002               .RES.W      1
    00000880              L675:
    00000880 6F7267616E             .SDATA      "organisation"
             6973617469   
             6F6E         
    0000088C 00                     .DATA.B     H'00
    0000088D 00000001               .RES.B      1
    0000088E 00000002               .RES.W      1
    00000890              L681:
    00000890 4D69747465             .SDATA      "Mitte: Kommunikation"
             3A204B6F6D   
             6D756E696B   
             6174696F6E   
    000008A4 00                     .DATA.B     H'00
    000008A5 00000001               .RES.B      1
    000008A6 00000002               .RES.W      1
    000008A8              L682:
    000008A8 3129205A69             .SDATA      "1) Zielsetzung"
             656C736574   
             7A756E67     
    000008B6 00                     .DATA.B     H'00
    000008B7 00000001               .RES.B      1
    000008B8              L683:
    000008B8 322920506C             .SDATA      "2) Planung"
             616E756E67   
    000008C2 00                     .DATA.B     H'00
    000008C3 00000001               .RES.B      1
    000008C4              L684:
    000008C4 332920456E             .SDATA      "3) Entscheidung"
             7473636865   
             6964756E67   
    000008D3 00                     .DATA.B     H'00
    000008D4              L685:
    000008D4 342920556D             .SDATA      "4) Umsetzung"
             7365747A75   
             6E67         
    000008E0 00                     .DATA.B     H'00
    000008E1 00000001               .RES.B      1
    000008E2 00000002               .RES.W      1
    000008E4              L686:
    000008E4 3529204B6F             .SDATA      "5) Kontrolle"
             6E74726F6C   
             6C65         
    000008F0 00                     .DATA.B     H'00
    000008F1 00000001               .RES.B      1
    000008F2 00000002               .RES.W      1
    000008F4              L691:
    000008F4 5B5B5D5D20             .SDATA      "[[]] Instanz"
             496E737461   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6E7A         
    00000900 00                     .DATA.B     H'00
    00000901 00000001               .RES.B      1
    00000902 00000002               .RES.W      1
    00000904              L692:
    00000904 6C65697465             .SDATA      "leitende Stelle"
             6E64652053   
             74656C6C65   
    00000913 00                     .DATA.B     H'00
    00000914              L693:
    00000914 5B5D204D69             .SDATA      "[] Mitarbeiterstelle"
             7461726265   
             6974657273   
             74656C6C65   
    00000928 00                     .DATA.B     H'00
    00000929 00000001               .RES.B      1
    0000092A 00000002               .RES.W      1
    0000092C              L694:
    0000092C 4175736675             .SDATA      "Ausfuhrendestelle"
             6872656E64   
             657374656C   
             6C65         
    0000093D 00                     .DATA.B     H'00
    0000093E 00000002               .RES.W      1
    00000940              L695:
    00000940 2829205374             .SDATA      "() Stabstelle"
             6162737465   
             6C6C65       
    0000094D 00                     .DATA.B     H'00
    0000094E 00000002               .RES.W      1
    00000950              L696:
    00000950 4265726174             .SDATA      "Beratende Stelle"
             656E646520   
             5374656C6C   
             65           
    00000960 00                     .DATA.B     H'00
    00000961 00000001               .RES.B      1
    00000962 00000002               .RES.W      1
    00000964              L701:
    00000964 455250202F             .SDATA      "ERP / SAP Systeme1/5"
             2053415020   
             5379737465   
             6D65312F35   
    00000978 00                     .DATA.B     H'00
    00000979 00000001               .RES.B      1
    0000097A 00000002               .RES.W      1
    0000097C              L702:
    0000097C 4D65726B6D             .SDATA      "Merkmale:"
             616C653A     
    00000985 00                     .DATA.B     H'00
    00000986 00000002               .RES.W      1
    00000988              L703:
    00000988 2D6469656E             .SDATA      "-dient der"
             7420646572   
    00000992 00                     .DATA.B     H'00
    00000993 00000001               .RES.B      1
    00000994              L704:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000994 6265617262             .SDATA      "bearbeitung von"
             656974756E   
             6720766F6E   
    000009A3 00                     .DATA.B     H'00
    000009A4              L705:
    000009A4 4765736368             .SDATA      "Geschaftsprozessen"
             6166747370   
             726F7A6573   
             73656E       
    000009B6 00                     .DATA.B     H'00
    000009B7 00000001               .RES.B      1
    000009B8              L706:
    000009B8 2D7A656E74             .SDATA      "-zentrale Datenbank"
             72616C6520   
             446174656E   
             62616E6B     
    000009CB 00                     .DATA.B     H'00
    000009CC              L707:
    000009CC 2D5374616D             .SDATA      "-Stammdaten"
             6D64617465   
             6E           
    000009D7 00                     .DATA.B     H'00
    000009D8              L714:
    000009D8 455250202F             .SDATA      "ERP / SAP Systeme2/5"
             2053415020   
             5379737465   
             6D65322F35   
    000009EC 00                     .DATA.B     H'00
    000009ED 00000001               .RES.B      1
    000009EE 00000002               .RES.W      1
    000009F0              L715:
    000009F0 2D496E7465             .SDATA      "-Integration vertik"
             6772617469   
             6F6E207665   
             7274696B     
    00000A03 00                     .DATA.B     H'00
    00000A04              L716:
    00000A04 616C652F68             .SDATA      "ale/horizontale"
             6F72697A6F   
             6E74616C65   
    00000A13 00                     .DATA.B     H'00
    00000A14              L717:
    00000A14 2D496E2076             .SDATA      "-In vers Komponente"
             657273204B   
             6F6D706F6E   
             656E7465     
    00000A27 00                     .DATA.B     H'00
    00000A28              L718:
    00000A28 6175736667             .SDATA      "ausfgeteilt:"
             657465696C   
             743A         
    00000A34 00                     .DATA.B     H'00
    00000A35 00000001               .RES.B      1
    00000A36 00000002               .RES.W      1
    00000A38              L719:
    00000A38 5665727472             .SDATA      "Vertrieb, ..."
             6965622C20   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2E2E2E       
    00000A45 00                     .DATA.B     H'00
    00000A46 00000002               .RES.W      1
    00000A48              L727:
    00000A48 455250202F             .SDATA      "ERP / SAP Systeme3/5"
             2053415020   
             5379737465   
             6D65332F35   
    00000A5C 00                     .DATA.B     H'00
    00000A5D 00000001               .RES.B      1
    00000A5E 00000002               .RES.W      1
    00000A60              L728:
    00000A60 566F727465             .SDATA      "Vorteile:"
             696C653A     
    00000A69 00                     .DATA.B     H'00
    00000A6A 00000002               .RES.W      1
    00000A6C              L729:
    00000A6C 2D56657262             .SDATA      "-Verbesserung/Besc-"
             6573736572   
             756E672F42   
             6573632D     
    00000A7F 00                     .DATA.B     H'00
    00000A80              L730:
    00000A80 686C65756E             .SDATA      "hleunigung von"
             6967756E67   
             20766F6E     
    00000A8E 00                     .DATA.B     H'00
    00000A8F 00000001               .RES.B      1
    00000A90              L731:
    00000A90 50726F7A65             .SDATA      "Prozessen"
             7373656E     
    00000A99 00                     .DATA.B     H'00
    00000A9A 00000002               .RES.W      1
    00000A9C              L732:
    00000A9C 2D44617465             .SDATA      "-Daten werden in"
             6E20776572   
             64656E2069   
             6E           
    00000AAC 00                     .DATA.B     H'00
    00000AAD 00000001               .RES.B      1
    00000AAE 00000002               .RES.W      1
    00000AB0              L733:
    00000AB0 456368747A             .SDATA      "Echtzeit gesaved"
             6569742067   
             6573617665   
             64           
    00000AC0 00                     .DATA.B     H'00
    00000AC1 00000001               .RES.B      1
    00000AC2 00000002               .RES.W      1
    00000AC4              L734:
    00000AC4 616C6C6520             .SDATA      "alle haben Zugriff"
             686162656E   
             205A756772   
             696666       
    00000AD6 00                     .DATA.B     H'00
    00000AD7 00000001               .RES.B      1
    00000AD8              L742:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD8 455250202F             .SDATA      "ERP / SAP Systeme4/5"
             2053415020   
             5379737465   
             6D65342F35   
    00000AEC 00                     .DATA.B     H'00
    00000AED 00000001               .RES.B      1
    00000AEE 00000002               .RES.W      1
    00000AF0              L743:
    00000AF0 2D4175746F             .SDATA      "-Automatisiert pro-"
             6D61746973   
             6965727420   
             70726F2D     
    00000B03 00                     .DATA.B     H'00
    00000B04              L744:
    00000B04 7A65737365             .SDATA      "zesse, gespart"
             2C20676573   
             70617274     
    00000B12 00                     .DATA.B     H'00
    00000B13 00000001               .RES.B      1
    00000B14              L745:
    00000B14 7769726420             .SDATA      "wird Arbeitsplatz"
             4172626569   
             7473706C61   
             747A         
    00000B25 00                     .DATA.B     H'00
    00000B26 00000002               .RES.W      1
    00000B28              L753:
    00000B28 455250202F             .SDATA      "ERP / SAP Systeme5/5"
             2053415020   
             5379737465   
             6D65352F35   
    00000B3C 00                     .DATA.B     H'00
    00000B3D 00000001               .RES.B      1
    00000B3E 00000002               .RES.W      1
    00000B40              L754:
    00000B40 4E61636874             .SDATA      "Nachteile:"
             65696C653A   
    00000B4A 00                     .DATA.B     H'00
    00000B4B 00000001               .RES.B      1
    00000B4C              L755:
    00000B4C 2D416E7363             .SDATA      "-Anschaffungskosten"
             6861666675   
             6E67736B6F   
             7374656E     
    00000B5F 00                     .DATA.B     H'00
    00000B60              L756:
    00000B60 2D41626861             .SDATA      "-Abhaengigkeit"
             656E676967   
             6B656974     
    00000B6E 00                     .DATA.B     H'00
    00000B6F 00000001               .RES.B      1
    00000B70              L757:
    00000B70 2D686F6865             .SDATA      "-hohe komplexitat"
             206B6F6D70   
             6C65786974   
             6174         
    00000B81 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B82 00000002               .RES.W      1
    00000B84              L758:
    00000B84 2D64617565             .SDATA      "-dauerhaft kontrol-"
             7268616674   
             206B6F6E74   
             726F6C2D     
    00000B97 00                     .DATA.B     H'00
    00000B98              L759:
    00000B98 6C65206465             .SDATA      "le der Mitarbeiter"
             72204D6974   
             6172626569   
             746572       
    00000BAA 00                     .DATA.B     H'00
    00000BAB 00000001               .RES.B      1
    00000BAC              L765:
    00000BAC 4E65747A77             .SDATA      "Netzwerktechnik  1/4"
             65726B7465   
             63686E696B   
             2020312F34   
    00000BC0 00                     .DATA.B     H'00
    00000BC1 00000001               .RES.B      1
    00000BC2 00000002               .RES.W      1
    00000BC4              L766:
    00000BC4 444E533D44             .SDATA      "DNS=Domain Name "
             6F6D61696E   
             204E616D65   
             20           
    00000BD4 00                     .DATA.B     H'00
    00000BD5 00000001               .RES.B      1
    00000BD6 00000002               .RES.W      1
    00000BD8              L767:
    00000BD8 5365727669             .SDATA      "Service"
             6365         
    00000BDF 00                     .DATA.B     H'00
    00000BE0              L768:
    00000BE0 444843503D             .SDATA      "DHCP=Dynamic Host"
             44796E616D   
             696320486F   
             7374         
    00000BF1 00                     .DATA.B     H'00
    00000BF2 00000002               .RES.W      1
    00000BF4              L769:
    00000BF4 436F6E6669             .SDATA      "Config.Protokoll"
             672E50726F   
             746F6B6F6C   
             6C           
    00000C04 00                     .DATA.B     H'00
    00000C05 00000001               .RES.B      1
    00000C06 00000002               .RES.W      1
    00000C08              L770:
    00000C08 5757573D57             .SDATA      "WWW=Weltweites Netz"
             656C747765   
             6974657320   
             4E65747A     
    00000C1B 00                     .DATA.B     H'00
    00000C1C              L771:
    00000C1C 524A34353D             .SDATA      "RJ45=Netzwerkstecker"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             4E65747A77   
             65726B7374   
             65636B6572   
    00000C30 00                     .DATA.B     H'00
    00000C31 00000001               .RES.B      1
    00000C32 00000002               .RES.W      1
    00000C34              L778:
    00000C34 4E65747A77             .SDATA      "Netzwerktechnik  2/4"
             65726B7465   
             63686E696B   
             2020322F34   
    00000C48 00                     .DATA.B     H'00
    00000C49 00000001               .RES.B      1
    00000C4A 00000002               .RES.W      1
    00000C4C              L779:
    00000C4C 5443502F49             .SDATA      "TCP/IP=Stand. Netz-"
             503D537461   
             6E642E204E   
             65747A2D     
    00000C5F 00                     .DATA.B     H'00
    00000C60              L780:
    00000C60 7765726B20             .SDATA      "werk Protokoll"
             50726F746F   
             6B6F6C6C     
    00000C6E 00                     .DATA.B     H'00
    00000C6F 00000001               .RES.B      1
    00000C70              L781:
    00000C70 4D41432041             .SDATA      "MAC Adr.=feste Adr."
             64722E3D66   
             6573746520   
             4164722E     
    00000C83 00                     .DATA.B     H'00
    00000C84              L782:
    00000C84 696E206465             .SDATA      "in der NW Karte"
             72204E5720   
             4B61727465   
    00000C93 00                     .DATA.B     H'00
    00000C94              L783:
    00000C94 6970636F6E             .SDATA      "ipconfig=Windows"
             6669673D57   
             696E646F77   
             73           
    00000CA4 00                     .DATA.B     H'00
    00000CA5 00000001               .RES.B      1
    00000CA6 00000002               .RES.W      1
    00000CA8              L784:
    00000CA8 7477697374             .SDATA      "twisted Pair..."
             6564205061   
             69722E2E2E   
    00000CB7 00                     .DATA.B     H'00
    00000CB8              L792:
    00000CB8 5043205465             .SDATA      "PC Technik       3/4"
             63686E696B   
             2020202020   
             2020332F34   
    00000CCC 00                     .DATA.B     H'00
    00000CCD 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CCE 00000002               .RES.W      1
    00000CD0              L793:
    00000CD0 2D4E6F7274             .SDATA      "-Northbridge (CPU/"
             6862726964   
             6765202843   
             50552F       
    00000CE2 00                     .DATA.B     H'00
    00000CE3 00000001               .RES.B      1
    00000CE4              L794:
    00000CE4 52414D2F50             .SDATA      "RAM/PCI(e))"
             4349286529   
             29           
    00000CEF 00                     .DATA.B     H'00
    00000CF0              L795:
    00000CF0 2D536F7572             .SDATA      "-Sourcebridge (USB/"
             6365627269   
             6467652028   
             5553422F     
    00000D03 00                     .DATA.B     H'00
    00000D04              L796:
    00000D04 5053322F50             .SDATA      "PS2/PCI/S-ATA/IDE)"
             43492F532D   
             4154412F49   
             444529       
    00000D16 00                     .DATA.B     H'00
    00000D17 00000001               .RES.B      1
    00000D18              L797:
    00000D18 2D42494F53             .SDATA      "-BIOS=SW fur Mboard"
             3D53572066   
             7572204D62   
             6F617264     
    00000D2B 00                     .DATA.B     H'00
    00000D2C              L798:
    00000D2C 2D504F5354             .SDATA      "-POST=PowerOnSelfTest"
             3D506F7765   
             724F6E5365   
             6C66546573   
             74           
    00000D41 00                     .DATA.B     H'00
    00000D42 00000002               .RES.W      1
    00000D44              L806:
    00000D44 5043205465             .SDATA      "PC Technik       4/4"
             63686E696B   
             2020202020   
             2020342F34   
    00000D58 00                     .DATA.B     H'00
    00000D59 00000001               .RES.B      1
    00000D5A 00000002               .RES.W      1
    00000D5C              L807:
    00000D5C 2D53706569             .SDATA      "-Speichermedien(Fes-"
             636865726D   
             656469656E   
             284665732D   
    00000D70 00                     .DATA.B     H'00
    00000D71 00000001               .RES.B      1
    00000D72 00000002               .RES.W      1
    00000D74              L808:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D74 74706C6174             .SDATA      "tplatte(SSD/HDD)/"
             7465285353   
             442F484444   
             292F         
    00000D85 00                     .DATA.B     H'00
    00000D86 00000002               .RES.W      1
    00000D88              L809:
    00000D88 52414D2F55             .SDATA      "RAM/USB-Stick)"
             53422D5374   
             69636B29     
    00000D96 00                     .DATA.B     H'00
    00000D97 00000001               .RES.B      1
    00000D98              L810:
    00000D98 2D44617465             .SDATA      "-Dateiendungen (Word"
             69656E6475   
             6E67656E20   
             28576F7264   
    00000DAC 00                     .DATA.B     H'00
    00000DAD 00000001               .RES.B      1
    00000DAE 00000002               .RES.W      1
    00000DB0              L811:
    00000DB0 3D646F632F             .SDATA      "=doc/docx PP=pptx/"
             646F637820   
             50503D7070   
             74782F       
    00000DC2 00                     .DATA.B     H'00
    00000DC3 00000001               .RES.B      1
    00000DC4              L812:
    00000DC4 7070742045             .SDATA      "ppt Excel=xls/xlsx"
             7863656C3D   
             786C732F78   
             6C7378       
    00000DD6 00                     .DATA.B     H'00
    00000DD7 00000001               .RES.B      1
    00000DD8              L353:
    00000DD8 4C65726E66             .SDATA      "Lernfeld 1"
             656C642031   
    00000DE2 00                     .DATA.B     H'00
    00000DE3 00000001               .RES.B      1
    00000DE4              L354:
    00000DE4 4C65726E66             .SDATA      "Lernfeld 2"
             656C642032   
    00000DEE 00                     .DATA.B     H'00
    00000DEF 00000001               .RES.B      1
    00000DF0              L355:
    00000DF0 50432F4E65             .SDATA      "PC/Netzwerktechnik"
             747A776572   
             6B74656368   
             6E696B       
    00000E02 00                     .DATA.B     H'00
    00000E03 00000001               .RES.B      1
    00000E04              L356:
    00000E04 5465737434             .SDATA      "Test4"
    00000E09 00                     .DATA.B     H'00
    00000E0A 00000002               .RES.W      1
    00000E0C              L357:
    00000E0C 5465737435             .SDATA      "Test5"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E11 00                     .DATA.B     H'00
    00000E12 00000002               .RES.W      1
    00000E14              L358:
    00000E14 5465737436             .SDATA      "Test6"
    00000E19 00                     .DATA.B     H'00
    00000E1A 00000002               .RES.W      1
    00000E1C              L422:
    00000E1C 4F6B6F6E6F             .SDATA      "Okonomisches Prinzip"
             6D69736368   
             6573205072   
             696E7A6970   
    00000E30 00                     .DATA.B     H'00
    00000E31 00000001               .RES.B      1
    00000E32 00000002               .RES.W      1
    00000E34              L423:
    00000E34 5265636874             .SDATA      "Rechtsformen"
             73666F726D   
             656E         
    00000E40 00                     .DATA.B     H'00
    00000E41 00000001               .RES.B      1
    00000E42 00000002               .RES.W      1
    00000E44              L424:
    00000E44 476577696E             .SDATA      "Gewinnverteilung"
             6E76657274   
             65696C756E   
             67           
    00000E54 00                     .DATA.B     H'00
    00000E55 00000001               .RES.B      1
    00000E56 00000002               .RES.W      1
    00000E58              L425:
    00000E58 4861667475             .SDATA      "Haftung, Infos"
             6E672C2049   
             6E666F73     
    00000E66 00                     .DATA.B     H'00
    00000E67 00000001               .RES.B      1
    00000E68              L426:
    00000E68 5072656973             .SDATA      "Preisbildungsprozes"
             62696C6475   
             6E67737072   
             6F7A6573     
    00000E7B 00                     .DATA.B     H'00
    00000E7C              L606:
    00000E7C 4F7267616E             .SDATA      "Organisation"
             6973617469   
             6F6E         
    00000E88 00                     .DATA.B     H'00
    00000E89 00000001               .RES.B      1
    00000E8A 00000002               .RES.W      1
    00000E8C              L607:
    00000E8C 526567656C             .SDATA      "Regelkreis"
             6B72656973   
    00000E96 00                     .DATA.B     H'00
    00000E97 00000001               .RES.B      1
    00000E98              L608:
    00000E98 4F7267616E             .SDATA      "Organigramm"
             696772616D   
             6D           




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EA3 00                     .DATA.B     H'00
    00000EA4              L609:
    00000EA4 455250202F             .SDATA      "ERP / SAP Systeme"
             2053415020   
             5379737465   
             6D65         
    00000EB5 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1




















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 16:32:59  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1163



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001984 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000EB6 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000004 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000284E Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          35
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           400






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Luca\AppData\Local\Temp\hmk91D5.tmp 

