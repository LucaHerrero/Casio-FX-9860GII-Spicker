SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Luca\Desktop\Abschlussprüfung\15062020.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c     1    #include "fxlib.h"
      15062020.c     2    #include "stdio.h"
      15062020.c     3    
      15062020.c     4    #define TRUE 1
      15062020.c     5    #define FALSE 0
      15062020.c     6    
      15062020.c     7    int drmCheck = 0;
      15062020.c     8    
      15062020.c     9    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
    00000000 4F22                   STS.L       PR,@-R15
      15062020.c    10    {
      15062020.c    11        Bdisp_AllClr_DDVRAM();
    00000002 D307                   MOV.L       L1306+2,R3 ; _Bdisp_AllClr_DDVRAM
    00000004 430B                   JSR         @R3
    00000006 0009                   NOP
      15062020.c    12        drm();
    00000008 B0AC                   BSR         _drm
    0000000A 0009                   NOP
      15062020.c    13        if (drmCheck == 1){
    0000000C D305                   MOV.L       L1306+6,R3 ; _drmCheck
    0000000E 6032                   MOV.L       @R3,R0
    00000010 8801                   CMP/EQ      #1,R0
    00000012 8B01                   BF          L1107
      15062020.c    14            firstMenu();
    00000014 B008                   BSR         _firstMenu
    00000016 0009                   NOP
    00000018              L1107:                            
      15062020.c    15        }
      15062020.c    16        return 1;
      15062020.c    17    }
    00000018 4F26                   LDS.L       @R15+,PR
    0000001A 000B                   RTS
    0000001C E001                   MOV         #1,R0
    0000001E              L1306:                            
    0000001E 0000                   .DATA.W     0
    00000020 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000024 <00000000>             .DATA.L     _drmCheck
      15062020.c    18    int firstMenu() {
    00000028              _firstMenu:                      ; function: firstMenu
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
      15062020.c    19        unsigned int i;
      15062020.c    20        unsigned int auswahl = 3;
      15062020.c    21        unsigned int menuItemsX = 2;
      15062020.c    22        unsigned int menuItemsY = 3;
      15062020.c    23        unsigned int menuItemsNbr = 6;
      15062020.c    24        unsigned char * menuItems[] = {
      15062020.c    25            "Lernfeld 1",
      15062020.c    26            "Lernfeld 2",
      15062020.c    27            "PC/Netzwerktechnik",
      15062020.c    28            "Reihenschaltung",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    29            "Test5",
      15062020.c    30            "Test6"
      15062020.c    31        };
    00000028 D242                   MOV.L       L1307+6,R2 ; L352
    0000002A 7FE4                   ADD         #-28,R15
    0000002C D342                   MOV.L       L1307+10,R3; __quick_evn_mvn
    0000002E EE03                   MOV         #3,R14
    00000030 E806                   MOV         #6,R8
    00000032 61F3                   MOV         R15,R1
    00000034 7104                   ADD         #4,R1
    00000036 430B                   JSR         @R3
    00000038 E018                   MOV         #24,R0
      15062020.c    32        // TITLE 
      15062020.c    33        locate(1,1);
    0000003A E501                   MOV         #1,R5
    0000003C DD3F                   MOV.L       L1307+14,R13; _locate
    0000003E 4D0B                   JSR         @R13
    00000040 6453                   MOV         R5,R4
      15062020.c    34        Print((unsigned char*)"Spicker :D");  
    00000042 DC3F                   MOV.L       L1307+18,R12; _Print
    00000044 D43F                   MOV.L       L1307+22,R4; L359
    00000046 4C0B                   JSR         @R12
    00000048 0009                   NOP
      15062020.c    35        // Menu Items
      15062020.c    36        for(i=0; i < menuItemsNbr; i=i+1){
    0000004A EB00                   MOV         #0,R11
    0000004C 6AF3                   MOV         R15,R10
    0000004E 7A04                   ADD         #4,R10
    00000050 E903                   MOV         #3,R9
    00000052              L1110:                            
      15062020.c    37            locate(menuItemsX, menuItemsY+i);
    00000052 6593                   MOV         R9,R5
    00000054 4D0B                   JSR         @R13
    00000056 E402                   MOV         #2,R4
      15062020.c    38            Print(menuItems[i]);
    00000058 4C0B                   JSR         @R12
    0000005A 64A6                   MOV.L       @R10+,R4
    0000005C 7B01                   ADD         #1,R11
    0000005E 3B82                   CMP/HS      R8,R11
    00000060 8FF7                   BF/S        L1110
    00000062 7901                   ADD         #1,R9
    00000064 9863                   MOV.W       L1307,R8   ; H'7534
    00000066 6983                   MOV         R8,R9
    00000068 DA37                   MOV.L       L1307+26,R10; L366
    0000006A 79FE                   ADD         #-2,R9
    0000006C DB37                   MOV.L       L1307+30,R11; _Bdisp_AllClr_DDVRAM
      15062020.c    39        };
      15062020.c    40       
      15062020.c    41        // Cursor    
      15062020.c    42        while (1){
    0000006E              L1112:                            
      15062020.c    43            unsigned int key;
      15062020.c    44            locate(1,auswahl);
    0000006E 65E3                   MOV         R14,R5
    00000070 4D0B                   JSR         @R13
    00000072 E401                   MOV         #1,R4
      15062020.c    45            Print((unsigned char*)">");       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000074 D436                   MOV.L       L1307+34,R4; L363
    00000076 4C0B                   JSR         @R12
    00000078 0009                   NOP
      15062020.c    46            GetKey(&key);
    0000007A D236                   MOV.L       L1307+38,R2; _GetKey
    0000007C 420B                   JSR         @R2
    0000007E 64F3                   MOV         R15,R4
      15062020.c    47            if(KEY_CTRL_UP == key) {
    00000080 9356                   MOV.W       L1307+2,R3 ; H'7542
    00000082 62F2                   MOV.L       @R15,R2
    00000084 3230                   CMP/EQ      R3,R2
    00000086 8B0E                   BF          L1113
      15062020.c    48                if (auswahl == 3) {
    00000088 60E3                   MOV         R14,R0
    0000008A 8803                   CMP/EQ      #3,R0
    0000008C 8B05                   BF          L1114
      15062020.c    49                    locate(1,auswahl);
    0000008E 65E3                   MOV         R14,R5
    00000090 4D0B                   JSR         @R13
    00000092 E401                   MOV         #1,R4
      15062020.c    50                    Print((unsigned char*)" ");
    00000094 4C0B                   JSR         @R12
    00000096 64A3                   MOV         R10,R4
      15062020.c    51                    auswahl = auswahl + 6;
    00000098 7E06                   ADD         #6,R14
    0000009A              L1114:                            
      15062020.c    52                }
      15062020.c    53                locate(1,auswahl);
    0000009A 65E3                   MOV         R14,R5
    0000009C 4D0B                   JSR         @R13
    0000009E E401                   MOV         #1,R4
      15062020.c    54                Print((unsigned char*)" ");
    000000A0 4C0B                   JSR         @R12
    000000A2 64A3                   MOV         R10,R4
      15062020.c    55                auswahl = auswahl - 1;
    000000A4 7EFF                   ADD         #-1,R14
    000000A6              L1113:                            
      15062020.c    56            };
      15062020.c    57            if(KEY_CTRL_DOWN == key) {
    000000A6 9344                   MOV.W       L1307+4,R3 ; H'7547
    000000A8 62F2                   MOV.L       @R15,R2
    000000AA 3230                   CMP/EQ      R3,R2
    000000AC 8B0E                   BF          L1115
      15062020.c    58                if (auswahl == 8) {
    000000AE 60E3                   MOV         R14,R0
    000000B0 8808                   CMP/EQ      #8,R0
    000000B2 8B05                   BF          L1116
      15062020.c    59                    locate(1,auswahl);
    000000B4 65E3                   MOV         R14,R5
    000000B6 4D0B                   JSR         @R13
    000000B8 E401                   MOV         #1,R4
      15062020.c    60                    Print((unsigned char*)" ");
    000000BA 4C0B                   JSR         @R12
    000000BC 64A3                   MOV         R10,R4
      15062020.c    61                    auswahl = auswahl - 6;
    000000BE 7EFA                   ADD         #-6,R14
    000000C0              L1116:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    62                }
      15062020.c    63                locate(1,auswahl);
    000000C0 65E3                   MOV         R14,R5
    000000C2 4D0B                   JSR         @R13
    000000C4 E401                   MOV         #1,R4
      15062020.c    64                Print((unsigned char*)" ");
    000000C6 4C0B                   JSR         @R12
    000000C8 64A3                   MOV         R10,R4
      15062020.c    65                auswahl = auswahl + 1;
    000000CA 7E01                   ADD         #1,R14
    000000CC              L1115:                            
      15062020.c    66            };
      15062020.c    67            if (KEY_CTRL_EXE == key) {
    000000CC 63F2                   MOV.L       @R15,R3
    000000CE 3380                   CMP/EQ      R8,R3
    000000D0 8B26                   BF          L1117
      15062020.c    68                if (auswahl == 3) {
    000000D2 60E3                   MOV         R14,R0
    000000D4 8803                   CMP/EQ      #3,R0
    000000D6 8B03                   BF          L1118
      15062020.c    69                    Bdisp_AllClr_DDVRAM();
    000000D8 4B0B                   JSR         @R11
    000000DA 0009                   NOP
      15062020.c    70                    lf1menu();
    000000DC B152                   BSR         _lf1menu
    000000DE 0009                   NOP
    000000E0              L1118:                            
      15062020.c    71                }
      15062020.c    72                if (auswahl == 4) {
    000000E0 60E3                   MOV         R14,R0
    000000E2 8804                   CMP/EQ      #4,R0
    000000E4 8B03                   BF          L1119
      15062020.c    73                    Bdisp_AllClr_DDVRAM();
    000000E6 4B0B                   JSR         @R11
    000000E8 0009                   NOP
      15062020.c    74                    lf2menu();
    000000EA B64B                   BSR         _lf2menu
    000000EC 0009                   NOP
    000000EE              L1119:                            
      15062020.c    75                }
      15062020.c    76                if (auswahl == 5) {
    000000EE 60E3                   MOV         R14,R0
    000000F0 8805                   CMP/EQ      #5,R0
    000000F2 8B04                   BF          L1120
      15062020.c    77                    Bdisp_AllClr_DDVRAM();
    000000F4 4B0B                   JSR         @R11
    000000F6 0009                   NOP
      15062020.c    78                    lf3list();
    000000F8 D217                   MOV.L       L1307+42,R2; _lf3list
    000000FA 420B                   JSR         @R2
    000000FC 0009                   NOP
    000000FE              L1120:                            
      15062020.c    79                }
      15062020.c    80                if (auswahl == 6) {
    000000FE 60E3                   MOV         R14,R0
    00000100 8806                   CMP/EQ      #6,R0
    00000102 8B04                   BF          L1121




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c    81                    Bdisp_AllClr_DDVRAM();
    00000104 4B0B                   JSR         @R11
    00000106 0009                   NOP
      15062020.c    82                    lf4list();
    00000108 D214                   MOV.L       L1307+46,R2; _lf4list
    0000010A 420B                   JSR         @R2
    0000010C 0009                   NOP
    0000010E              L1121:                            
      15062020.c    83                }
      15062020.c    84                if (auswahl == 7) {
    0000010E 60E3                   MOV         R14,R0
    00000110 8807                   CMP/EQ      #7,R0
    00000112 8B05                   BF          L1117
      15062020.c    85                    locate(8,1);
    00000114 E501                   MOV         #1,R5
    00000116 4D0B                   JSR         @R13
    00000118 E408                   MOV         #8,R4
      15062020.c    86                    Print((unsigned char*)"TEST5");
    0000011A D411                   MOV.L       L1307+50,R4; L379
    0000011C 4C0B                   JSR         @R12
    0000011E 0009                   NOP
    00000120              L1117:                            
      15062020.c    87                }
      15062020.c    88            };
      15062020.c    89            if (KEY_CTRL_EXIT == key) {
    00000120 62F2                   MOV.L       @R15,R2
    00000122 3290                   CMP/EQ      R9,R2
    00000124 8BA3                   BF          L1112
      15062020.c    90                Bdisp_AllClr_DDVRAM();
    00000126 4B0B                   JSR         @R11
    00000128 0009                   NOP
    0000012A AFA0                   BRA         L1112
    0000012C 0009                   NOP
    0000012E              L1307:                            
    0000012E 7534                   .DATA.W     H'7534
    00000130 7542                   .DATA.W     H'7542
    00000132 7547                   .DATA.W     H'7547
    00000134 <00000000>             .DATA.L     L352
    00000138 <00000000>             .DATA.L     __quick_evn_mvn
    0000013C <00000000>             .DATA.L     _locate
    00000140 <00000000>             .DATA.L     _Print
    00000144 <00000000>             .DATA.L     L359
    00000148 <00000000>             .DATA.L     L366
    0000014C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000150 <00000000>             .DATA.L     L363
    00000154 <00000000>             .DATA.L     _GetKey
    00000158 <00000000>             .DATA.L     _lf3list
    0000015C <00000000>             .DATA.L     _lf4list
    00000160 <00000000>             .DATA.L     L379
      15062020.c    91            }
      15062020.c    92       }
      15062020.c    93    }
      15062020.c    94    
      15062020.c    95    // DRM System
      15062020.c    96    int drm() {
    00000164              _drm:                            ; function: drm
                                                           ; frame size=64




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000164 2FE6                   MOV.L       R14,@-R15
      15062020.c    97        unsigned int key;
      15062020.c    98        int selectedNumber = 0;
      15062020.c    99        int corsur = 7;
      15062020.c   100        int eingaben[4];
      15062020.c   101        locate(10,2);
    00000166 E502                   MOV         #2,R5
    00000168 2FD6                   MOV.L       R13,@-R15
    0000016A EE00                   MOV         #0,R14
    0000016C 2FC6                   MOV.L       R12,@-R15
    0000016E 2FB6                   MOV.L       R11,@-R15
    00000170 2FA6                   MOV.L       R10,@-R15
    00000172 2F96                   MOV.L       R9,@-R15
    00000174 2F86                   MOV.L       R8,@-R15
    00000176 E807                   MOV         #7,R8
    00000178 DC67                   MOV.L       L1308,R12  ; _locate
    0000017A 6D83                   MOV         R8,R13
    0000017C 4F22                   STS.L       PR,@-R15
    0000017E 7FE0                   ADD         #-32,R15
    00000180 4C0B                   JSR         @R12
    00000182 E40A                   MOV         #10,R4
      15062020.c   102        Print((unsigned char*)"DRM");
    00000184 DB65                   MOV.L       L1308+4,R11; _Print
    00000186 D466                   MOV.L       L1308+8,R4 ; L386
    00000188 4B0B                   JSR         @R11
    0000018A 0009                   NOP
      15062020.c   103        locate(5,3);
    0000018C E503                   MOV         #3,R5
    0000018E 4C0B                   JSR         @R12
    00000190 E405                   MOV         #5,R4
      15062020.c   104        Print((unsigned char*)"Code eingeben");
    00000192 D464                   MOV.L       L1308+12,R4; L387
    00000194 4B0B                   JSR         @R11
    00000196 0009                   NOP
      15062020.c   105        locate(6,5);
    00000198 E505                   MOV         #5,R5
    0000019A 4C0B                   JSR         @R12
    0000019C E406                   MOV         #6,R4
      15062020.c   106        Print((unsigned char*)"[ ] [ ] [ ]");
    0000019E D462                   MOV.L       L1308+16,R4; L388
    000001A0 4B0B                   JSR         @R11
    000001A2 0009                   NOP
    000001A4 6AF3                   MOV         R15,R10
    000001A6 7A10                   ADD         #16,R10
    000001A8 63A3                   MOV         R10,R3
    000001AA 6233                   MOV         R3,R2
    000001AC 1F33                   MOV.L       R3,@(12,R15)
    000001AE E901                   MOV         #1,R9
    000001B0 7204                   ADD         #4,R2
    000001B2 6133                   MOV         R3,R1
    000001B4 1F21                   MOV.L       R2,@(4,R15)
    000001B6 7108                   ADD         #8,R1
    000001B8 1F12                   MOV.L       R1,@(8,R15)
      15062020.c   107        while (1)
    000001BA              L1125:                            
      15062020.c   108        {
      15062020.c   109            GetKey(&key);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001BA D25C                   MOV.L       L1308+20,R2; _GetKey
    000001BC 420B                   JSR         @R2
    000001BE 64F3                   MOV         R15,R4
      15062020.c   110            if (KEY_CHAR_0 == key){
    000001C0 60F2                   MOV.L       @R15,R0
    000001C2 8830                   CMP/EQ      #48,R0
    000001C4 8B0B                   BF          L1126
      15062020.c   111                eingaben[selectedNumber] = 0;
    000001C6 60E3                   MOV         R14,R0
    000001C8 4008                   SHLL2       R0
    000001CA E300                   MOV         #0,R3
    000001CC 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   112                locate(corsur, 5);
    000001CE E505                   MOV         #5,R5
    000001D0 4C0B                   JSR         @R12
    000001D2 64D3                   MOV         R13,R4
      15062020.c   113                Print((unsigned char*)"0");
    000001D4 D456                   MOV.L       L1308+24,R4; L391
    000001D6 4B0B                   JSR         @R11
    000001D8 0009                   NOP
      15062020.c   114                selectedNumber = selectedNumber + 1;
    000001DA 7E01                   ADD         #1,R14
      15062020.c   115                corsur = corsur + 4;
    000001DC 7D04                   ADD         #4,R13
    000001DE              L1126:                            
      15062020.c   116            }
      15062020.c   117            if (KEY_CHAR_1 == key){
    000001DE 60F2                   MOV.L       @R15,R0
    000001E0 8831                   CMP/EQ      #49,R0
    000001E2 8B0A                   BF          L1127
      15062020.c   118                eingaben[selectedNumber] = 1;
    000001E4 60E3                   MOV         R14,R0
    000001E6 4008                   SHLL2       R0
    000001E8 0A96                   MOV.L       R9,@(R0,R10)
      15062020.c   119                locate(corsur, 5);
    000001EA E505                   MOV         #5,R5
    000001EC 4C0B                   JSR         @R12
    000001EE 64D3                   MOV         R13,R4
      15062020.c   120                Print((unsigned char*)"1");
    000001F0 D450                   MOV.L       L1308+28,R4; L393
    000001F2 4B0B                   JSR         @R11
    000001F4 0009                   NOP
      15062020.c   121                selectedNumber = selectedNumber + 1;
    000001F6 7E01                   ADD         #1,R14
      15062020.c   122                corsur = corsur + 4;
    000001F8 7D04                   ADD         #4,R13
    000001FA              L1127:                            
      15062020.c   123            }
      15062020.c   124            if (KEY_CHAR_2 == key){
    000001FA 60F2                   MOV.L       @R15,R0
    000001FC 8832                   CMP/EQ      #50,R0
    000001FE 8B0B                   BF          L1128
      15062020.c   125                eingaben[selectedNumber] = 2;
    00000200 60E3                   MOV         R14,R0
    00000202 4008                   SHLL2       R0
    00000204 E302                   MOV         #2,R3
      15062020.c   126                locate(corsur, 5);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000206 E505                   MOV         #5,R5
    00000208 0A36                   MOV.L       R3,@(R0,R10)
    0000020A 4C0B                   JSR         @R12
    0000020C 64D3                   MOV         R13,R4
      15062020.c   127                Print((unsigned char*)"2");
    0000020E D44A                   MOV.L       L1308+32,R4; L395
    00000210 4B0B                   JSR         @R11
    00000212 0009                   NOP
      15062020.c   128                selectedNumber = selectedNumber + 1;
    00000214 7E01                   ADD         #1,R14
      15062020.c   129                corsur = corsur + 4;
    00000216 7D04                   ADD         #4,R13
    00000218              L1128:                            
      15062020.c   130            }
      15062020.c   131            if (KEY_CHAR_3 == key){
    00000218 60F2                   MOV.L       @R15,R0
    0000021A 8833                   CMP/EQ      #51,R0
    0000021C 8B0B                   BF          L1129
      15062020.c   132                eingaben[selectedNumber] = 3;
    0000021E 60E3                   MOV         R14,R0
    00000220 4008                   SHLL2       R0
    00000222 E303                   MOV         #3,R3
    00000224 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   133                locate(corsur, 5);
    00000226 E505                   MOV         #5,R5
    00000228 4C0B                   JSR         @R12
    0000022A 64D3                   MOV         R13,R4
      15062020.c   134                Print((unsigned char*)"3");
    0000022C D443                   MOV.L       L1308+36,R4; L397
    0000022E 4B0B                   JSR         @R11
    00000230 0009                   NOP
      15062020.c   135                selectedNumber = selectedNumber + 1;
    00000232 7E01                   ADD         #1,R14
      15062020.c   136                corsur = corsur + 4;
    00000234 7D04                   ADD         #4,R13
    00000236              L1129:                            
      15062020.c   137            }
      15062020.c   138            if (KEY_CHAR_4 == key){
    00000236 60F2                   MOV.L       @R15,R0
    00000238 8834                   CMP/EQ      #52,R0
    0000023A 8B0B                   BF          L1130
      15062020.c   139                eingaben[selectedNumber] = 4;
    0000023C 60E3                   MOV         R14,R0
    0000023E 4008                   SHLL2       R0
    00000240 E304                   MOV         #4,R3
      15062020.c   140                locate(corsur, 5);
    00000242 E505                   MOV         #5,R5
    00000244 0A36                   MOV.L       R3,@(R0,R10)
    00000246 4C0B                   JSR         @R12
    00000248 64D3                   MOV         R13,R4
      15062020.c   141                Print((unsigned char*)"4");
    0000024A D43D                   MOV.L       L1308+40,R4; L399
    0000024C 4B0B                   JSR         @R11
    0000024E 0009                   NOP
      15062020.c   142                selectedNumber = selectedNumber + 1;
    00000250 7E01                   ADD         #1,R14
      15062020.c   143                corsur = corsur + 4;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000252 7D04                   ADD         #4,R13
    00000254              L1130:                            
      15062020.c   144            }
      15062020.c   145            if (KEY_CHAR_5 == key){
    00000254 60F2                   MOV.L       @R15,R0
    00000256 8835                   CMP/EQ      #53,R0
    00000258 8B0B                   BF          L1131
      15062020.c   146                eingaben[selectedNumber] = 5;
    0000025A 60E3                   MOV         R14,R0
    0000025C 4008                   SHLL2       R0
    0000025E E305                   MOV         #5,R3
    00000260 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   147                locate(corsur, 5);
    00000262 6533                   MOV         R3,R5
    00000264 4C0B                   JSR         @R12
    00000266 64D3                   MOV         R13,R4
      15062020.c   148                Print((unsigned char*)"5");
    00000268 D436                   MOV.L       L1308+44,R4; L401
    0000026A 4B0B                   JSR         @R11
    0000026C 0009                   NOP
      15062020.c   149                selectedNumber = selectedNumber + 1;
    0000026E 7E01                   ADD         #1,R14
      15062020.c   150                corsur = corsur + 4;
    00000270 7D04                   ADD         #4,R13
    00000272              L1131:                            
      15062020.c   151            }
      15062020.c   152            if (KEY_CHAR_6 == key){
    00000272 60F2                   MOV.L       @R15,R0
    00000274 8836                   CMP/EQ      #54,R0
    00000276 8B0B                   BF          L1132
      15062020.c   153                eingaben[selectedNumber] = 6;
    00000278 60E3                   MOV         R14,R0
    0000027A 4008                   SHLL2       R0
    0000027C E306                   MOV         #6,R3
      15062020.c   154                locate(corsur, 5);
    0000027E E505                   MOV         #5,R5
    00000280 0A36                   MOV.L       R3,@(R0,R10)
    00000282 4C0B                   JSR         @R12
    00000284 64D3                   MOV         R13,R4
      15062020.c   155                Print((unsigned char*)"6");
    00000286 D430                   MOV.L       L1308+48,R4; L403
    00000288 4B0B                   JSR         @R11
    0000028A 0009                   NOP
      15062020.c   156                selectedNumber = selectedNumber + 1;
    0000028C 7E01                   ADD         #1,R14
      15062020.c   157                corsur = corsur + 4;
    0000028E 7D04                   ADD         #4,R13
    00000290              L1132:                            
      15062020.c   158            }
      15062020.c   159            if (KEY_CHAR_7 == key){
    00000290 60F2                   MOV.L       @R15,R0
    00000292 8837                   CMP/EQ      #55,R0
    00000294 8B0A                   BF          L1133
      15062020.c   160                eingaben[selectedNumber] = 7;
    00000296 60E3                   MOV         R14,R0
    00000298 4008                   SHLL2       R0
      15062020.c   161                locate(corsur, 5);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000029A E505                   MOV         #5,R5
    0000029C 0A86                   MOV.L       R8,@(R0,R10)
    0000029E 4C0B                   JSR         @R12
    000002A0 64D3                   MOV         R13,R4
      15062020.c   162                Print((unsigned char*)"7");
    000002A2 D42A                   MOV.L       L1308+52,R4; L405
    000002A4 4B0B                   JSR         @R11
    000002A6 0009                   NOP
      15062020.c   163                selectedNumber = selectedNumber + 1;
    000002A8 7E01                   ADD         #1,R14
      15062020.c   164                corsur = corsur + 4;
    000002AA 7D04                   ADD         #4,R13
    000002AC              L1133:                            
      15062020.c   165            }
      15062020.c   166            if (KEY_CHAR_8 == key){
    000002AC 60F2                   MOV.L       @R15,R0
    000002AE 8838                   CMP/EQ      #56,R0
    000002B0 8B0B                   BF          L1134
      15062020.c   167                eingaben[selectedNumber] = 8;
    000002B2 60E3                   MOV         R14,R0
    000002B4 4008                   SHLL2       R0
    000002B6 E308                   MOV         #8,R3
    000002B8 0A36                   MOV.L       R3,@(R0,R10)
      15062020.c   168                locate(corsur, 5);
    000002BA E505                   MOV         #5,R5
    000002BC 4C0B                   JSR         @R12
    000002BE 64D3                   MOV         R13,R4
      15062020.c   169                Print((unsigned char*)"8");
    000002C0 D423                   MOV.L       L1308+56,R4; L407
    000002C2 4B0B                   JSR         @R11
    000002C4 0009                   NOP
      15062020.c   170                selectedNumber = selectedNumber + 1;
    000002C6 7E01                   ADD         #1,R14
      15062020.c   171                corsur = corsur + 4;
    000002C8 7D04                   ADD         #4,R13
    000002CA              L1134:                            
      15062020.c   172            }
      15062020.c   173            if (KEY_CHAR_9 == key){
    000002CA 60F2                   MOV.L       @R15,R0
    000002CC 8839                   CMP/EQ      #57,R0
    000002CE 8B0B                   BF          L1135
      15062020.c   174                eingaben[selectedNumber] = 9;
    000002D0 60E3                   MOV         R14,R0
    000002D2 4008                   SHLL2       R0
    000002D4 E309                   MOV         #9,R3
      15062020.c   175                locate(corsur, 5);
    000002D6 E505                   MOV         #5,R5
    000002D8 0A36                   MOV.L       R3,@(R0,R10)
    000002DA 4C0B                   JSR         @R12
    000002DC 64D3                   MOV         R13,R4
      15062020.c   176                Print((unsigned char*)"9");
    000002DE D41D                   MOV.L       L1308+60,R4; L409
    000002E0 4B0B                   JSR         @R11
    000002E2 0009                   NOP
      15062020.c   177                selectedNumber = selectedNumber + 1;
    000002E4 7E01                   ADD         #1,R14
      15062020.c   178                corsur = corsur + 4;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E6 7D04                   ADD         #4,R13
    000002E8              L1135:                            
      15062020.c   179            }
      15062020.c   180            if (selectedNumber == 3){
    000002E8 60E3                   MOV         R14,R0
    000002EA 8803                   CMP/EQ      #3,R0
    000002EC 8901                   BT          L1309
    000002EE AF64                   BRA         L1125
    000002F0 0009                   NOP
    000002F2              L1309:                            
      15062020.c   181                if (eingaben[0] == 6) {
    000002F2 50F3                   MOV.L       @(12,R15),R0
    000002F4 6002                   MOV.L       @R0,R0
    000002F6 8806                   CMP/EQ      #6,R0
    000002F8 8B09                   BF          L1137
      15062020.c   182                    if (eingaben[1] == 8) {
    000002FA 50F1                   MOV.L       @(4,R15),R0
    000002FC 6002                   MOV.L       @R0,R0
    000002FE 8808                   CMP/EQ      #8,R0
    00000300 8B05                   BF          L1137
      15062020.c   183                        if (eingaben[2] == 4) {
    00000302 50F2                   MOV.L       @(8,R15),R0
    00000304 6002                   MOV.L       @R0,R0
    00000306 8804                   CMP/EQ      #4,R0
    00000308 8B01                   BF          L1137
      15062020.c   184                            drmCheck = 1;
    0000030A D213                   MOV.L       L1308+64,R2; _drmCheck
    0000030C 2292                   MOV.L       R9,@R2
    0000030E              L1137:                            
      15062020.c   185                        }
      15062020.c   186                    }
      15062020.c   187                }
      15062020.c   188                Bdisp_AllClr_DDVRAM();
    0000030E D313                   MOV.L       L1308+68,R3; _Bdisp_AllClr_DDVRAM
    00000310 430B                   JSR         @R3
    00000312 0009                   NOP
      15062020.c   189                Sleep(300);
    00000314 A024                   BRA         L1304
    00000316 0009                   NOP
    00000318              L1308:                            
    00000318 <00000000>             .DATA.L     _locate
    0000031C <00000000>             .DATA.L     _Print
    00000320 <00000000>             .DATA.L     L386
    00000324 <00000000>             .DATA.L     L387
    00000328 <00000000>             .DATA.L     L388
    0000032C <00000000>             .DATA.L     _GetKey
    00000330 <00000000>             .DATA.L     L391
    00000334 <00000000>             .DATA.L     L393
    00000338 <00000000>             .DATA.L     L395
    0000033C <00000000>             .DATA.L     L397
    00000340 <00000000>             .DATA.L     L399
    00000344 <00000000>             .DATA.L     L401
    00000348 <00000000>             .DATA.L     L403
    0000034C <00000000>             .DATA.L     L405
    00000350 <00000000>             .DATA.L     L407
    00000354 <00000000>             .DATA.L     L409
    00000358 <00000000>             .DATA.L     _drmCheck




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000035C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000360              L1304:                            
    00000360 940D                   MOV.W       L1310,R4   ; H'012C
    00000362 D207                   MOV.L       L1310+2,R2 ; _Sleep
    00000364 420B                   JSR         @R2
    00000366 0009                   NOP
      15062020.c   190                return(0);
    00000368 E000                   MOV         #0,R0
      15062020.c   191            }
      15062020.c   192        }
      15062020.c   193    }
    0000036A 7F20                   ADD         #32,R15
    0000036C 4F26                   LDS.L       @R15+,PR
    0000036E 68F6                   MOV.L       @R15+,R8
    00000370 69F6                   MOV.L       @R15+,R9
    00000372 6AF6                   MOV.L       @R15+,R10
    00000374 6BF6                   MOV.L       @R15+,R11
    00000376 6CF6                   MOV.L       @R15+,R12
    00000378 6DF6                   MOV.L       @R15+,R13
    0000037A 000B                   RTS
    0000037C 6EF6                   MOV.L       @R15+,R14
    0000037E              L1310:                            
    0000037E 012C                   .DATA.W     H'012C
    00000380 <00000000>             .DATA.L     _Sleep
      15062020.c   194    
      15062020.c   195    
      15062020.c   196    // Lernfeld 1
      15062020.c   197    int lf1menu() {
    00000384              _lf1menu:                        ; function: lf1menu
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
      15062020.c   198        unsigned int i;
      15062020.c   199        unsigned int auswahl = 3;
      15062020.c   200        unsigned int menuItemsX = 2;
      15062020.c   201        unsigned int menuItemsY = 3;
      15062020.c   202        unsigned int menuItemsNbr = 5;
      15062020.c   203        unsigned char * menuItems[] = {
      15062020.c   204            "Okonomisches Prinzip",
      15062020.c   205            "Rechtsformen",
      15062020.c   206            "Gewinnverteilung",
      15062020.c   207            "Haftung, Infos",
      15062020.c   208            "Preisbildungsprozes"
      15062020.c   209        };
    00000384 D241                   MOV.L       L1311+8,R2 ; L421
    00000386 7FE4                   ADD         #-28,R15
    00000388 EE03                   MOV         #3,R14
    0000038A E305                   MOV         #5,R3
    0000038C 1F31                   MOV.L       R3,@(4,R15)
    0000038E 61F3                   MOV         R15,R1
    00000390 D33F                   MOV.L       L1311+12,R3; __quick_odd_mvn
    00000392 7108                   ADD         #8,R1
    00000394 430B                   JSR         @R3
    00000396 E014                   MOV         #20,R0
      15062020.c   210        Bdisp_AllClr_DDVRAM();
    00000398 DB3E                   MOV.L       L1311+16,R11; _Bdisp_AllClr_DDVRAM
    0000039A 4B0B                   JSR         @R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039C 0009                   NOP
      15062020.c   211        // TITLE 
      15062020.c   212        locate(1,1);
    0000039E E501                   MOV         #1,R5
    000003A0 DC3D                   MOV.L       L1311+20,R12; _locate
    000003A2 4C0B                   JSR         @R12
    000003A4 6453                   MOV         R5,R4
      15062020.c   213        Print((unsigned char*)"Lernfeld 1");  
    000003A6 DD3D                   MOV.L       L1311+24,R13; _Print
    000003A8 D43D                   MOV.L       L1311+28,R4; L353
    000003AA 4D0B                   JSR         @R13
    000003AC 0009                   NOP
      15062020.c   214        // Menu Items
      15062020.c   215        for(i=0; i < menuItemsNbr; i=i+1){
    000003AE EA00                   MOV         #0,R10
    000003B0 69F3                   MOV         R15,R9
    000003B2 7908                   ADD         #8,R9
    000003B4 E803                   MOV         #3,R8
    000003B6              L1142:                            
      15062020.c   216            locate(menuItemsX, menuItemsY+i);
    000003B6 6583                   MOV         R8,R5
    000003B8 4C0B                   JSR         @R12
    000003BA E402                   MOV         #2,R4
      15062020.c   217            Print(menuItems[i]);
    000003BC 4D0B                   JSR         @R13
    000003BE 6496                   MOV.L       @R9+,R4
    000003C0 52F1                   MOV.L       @(4,R15),R2
    000003C2 7A01                   ADD         #1,R10
    000003C4 3A22                   CMP/HS      R2,R10
    000003C6 8FF6                   BF/S        L1142
    000003C8 7801                   ADD         #1,R8
    000003CA 985B                   MOV.W       L1311,R8   ; H'7547
    000003CC DA35                   MOV.L       L1311+32,R10; L366
    000003CE 6983                   MOV         R8,R9
    000003D0 79FB                   ADD         #-5,R9
      15062020.c   218        };
      15062020.c   219       
      15062020.c   220        // Cursor    
      15062020.c   221        while (1){
    000003D2              L1144:                            
      15062020.c   222            unsigned int key;
      15062020.c   223            locate(1,auswahl);
    000003D2 65E3                   MOV         R14,R5
    000003D4 4C0B                   JSR         @R12
    000003D6 E401                   MOV         #1,R4
      15062020.c   224            Print((unsigned char*)">");       
    000003D8 D433                   MOV.L       L1311+36,R4; L363
    000003DA 4D0B                   JSR         @R13
    000003DC 0009                   NOP
      15062020.c   225            GetKey(&key);
    000003DE D333                   MOV.L       L1311+40,R3; _GetKey
    000003E0 430B                   JSR         @R3
    000003E2 64F3                   MOV         R15,R4
      15062020.c   226            if(KEY_CTRL_UP == key) {
    000003E4 62F2                   MOV.L       @R15,R2
    000003E6 3290                   CMP/EQ      R9,R2
    000003E8 8B0E                   BF          L1145




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   227                if (auswahl == 3) {
    000003EA 60E3                   MOV         R14,R0
    000003EC 8803                   CMP/EQ      #3,R0
    000003EE 8B05                   BF          L1146
      15062020.c   228                    locate(1,auswahl);
    000003F0 65E3                   MOV         R14,R5
    000003F2 4C0B                   JSR         @R12
    000003F4 E401                   MOV         #1,R4
      15062020.c   229                    Print((unsigned char*)" ");
    000003F6 4D0B                   JSR         @R13
    000003F8 64A3                   MOV         R10,R4
      15062020.c   230                    auswahl = auswahl + 5;
    000003FA 7E05                   ADD         #5,R14
    000003FC              L1146:                            
      15062020.c   231                }
      15062020.c   232                locate(1,auswahl);
    000003FC 65E3                   MOV         R14,R5
    000003FE 4C0B                   JSR         @R12
    00000400 E401                   MOV         #1,R4
      15062020.c   233                Print((unsigned char*)" ");
    00000402 4D0B                   JSR         @R13
    00000404 64A3                   MOV         R10,R4
      15062020.c   234                auswahl = auswahl - 1;
    00000406 7EFF                   ADD         #-1,R14
    00000408              L1145:                            
      15062020.c   235            };
      15062020.c   236            if(KEY_CTRL_DOWN == key) {
    00000408 63F2                   MOV.L       @R15,R3
    0000040A 3380                   CMP/EQ      R8,R3
    0000040C 8B0E                   BF          L1147
      15062020.c   237                if (auswahl == 7) {
    0000040E 60E3                   MOV         R14,R0
    00000410 8807                   CMP/EQ      #7,R0
    00000412 8B05                   BF          L1148
      15062020.c   238                    locate(1,auswahl);
    00000414 65E3                   MOV         R14,R5
    00000416 4C0B                   JSR         @R12
    00000418 E401                   MOV         #1,R4
      15062020.c   239                    Print((unsigned char*)" ");
    0000041A 4D0B                   JSR         @R13
    0000041C 64A3                   MOV         R10,R4
      15062020.c   240                    auswahl = auswahl - 5;
    0000041E 7EFB                   ADD         #-5,R14
    00000420              L1148:                            
      15062020.c   241                }
      15062020.c   242                locate(1,auswahl);
    00000420 65E3                   MOV         R14,R5
    00000422 4C0B                   JSR         @R12
    00000424 E401                   MOV         #1,R4
      15062020.c   243                Print((unsigned char*)" ");
    00000426 4D0B                   JSR         @R13
    00000428 64A3                   MOV         R10,R4
      15062020.c   244                auswahl = auswahl + 1;
    0000042A 7E01                   ADD         #1,R14
    0000042C              L1147:                            
      15062020.c   245            };
      15062020.c   246            if (KEY_CTRL_EXE == key) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000042C 922B                   MOV.W       L1311+2,R2 ; H'7534
    0000042E 63F2                   MOV.L       @R15,R3
    00000430 3320                   CMP/EQ      R2,R3
    00000432 8B22                   BF          L1149
      15062020.c   247                if (auswahl == 3) {
    00000434 60E3                   MOV         R14,R0
    00000436 8803                   CMP/EQ      #3,R0
    00000438 8B03                   BF          L1150
      15062020.c   248                    Bdisp_AllClr_DDVRAM();
    0000043A 4B0B                   JSR         @R11
    0000043C 0009                   NOP
      15062020.c   249                    lf1menuitem1();
    0000043E B03E                   BSR         _lf1menuitem1
    00000440 0009                   NOP
    00000442              L1150:                            
      15062020.c   250                }
      15062020.c   251                if (auswahl == 4) {
    00000442 60E3                   MOV         R14,R0
    00000444 8804                   CMP/EQ      #4,R0
    00000446 8B03                   BF          L1151
      15062020.c   252                    Bdisp_AllClr_DDVRAM();
    00000448 4B0B                   JSR         @R11
    0000044A 0009                   NOP
      15062020.c   253                    lf1menuitem2();
    0000044C B072                   BSR         _lf1menuitem2
    0000044E 0009                   NOP
    00000450              L1151:                            
      15062020.c   254                }
      15062020.c   255                if (auswahl == 5) {
    00000450 60E3                   MOV         R14,R0
    00000452 8805                   CMP/EQ      #5,R0
    00000454 8B03                   BF          L1152
      15062020.c   256                    Bdisp_AllClr_DDVRAM();
    00000456 4B0B                   JSR         @R11
    00000458 0009                   NOP
      15062020.c   257                    lf1menuitem3();
    0000045A B11D                   BSR         _lf1menuitem3
    0000045C 0009                   NOP
    0000045E              L1152:                            
      15062020.c   258                }
      15062020.c   259                if (auswahl == 6) {
    0000045E 60E3                   MOV         R14,R0
    00000460 8806                   CMP/EQ      #6,R0
    00000462 8B03                   BF          L1153
      15062020.c   260                    Bdisp_AllClr_DDVRAM();
    00000464 4B0B                   JSR         @R11
    00000466 0009                   NOP
      15062020.c   261                    lf1menuitem4();
    00000468 B17E                   BSR         _lf1menuitem4
    0000046A 0009                   NOP
    0000046C              L1153:                            
      15062020.c   262                }
      15062020.c   263                if (auswahl == 7) {
    0000046C 60E3                   MOV         R14,R0
    0000046E 8807                   CMP/EQ      #7,R0
    00000470 8B03                   BF          L1149
      15062020.c   264                    Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000472 4B0B                   JSR         @R11
    00000474 0009                   NOP
      15062020.c   265                    lf1menuitem5();
    00000476 B353                   BSR         _lf1menuitem5
    00000478 0009                   NOP
    0000047A              L1149:                            
      15062020.c   266                }
      15062020.c   267            };
      15062020.c   268            if (KEY_CTRL_EXIT == key) {
    0000047A 9305                   MOV.W       L1311+4,R3 ; H'7532
    0000047C 62F2                   MOV.L       @R15,R2
    0000047E 3230                   CMP/EQ      R3,R2
    00000480 A016                   BRA         L1305
    00000482 0009                   NOP
    00000484              L1311:                            
    00000484 7547                   .DATA.W     H'7547
    00000486 7534                   .DATA.W     H'7534
    00000488 7532                   .DATA.W     H'7532
    0000048A 0000                   .DATA.W     0
    0000048C <00000000>             .DATA.L     L421
    00000490 <00000000>             .DATA.L     __quick_odd_mvn
    00000494 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000498 <00000000>             .DATA.L     _locate
    0000049C <00000000>             .DATA.L     _Print
    000004A0 <00000000>             .DATA.L     L353
    000004A4 <00000000>             .DATA.L     L366
    000004A8 <00000000>             .DATA.L     L363
    000004AC <00000000>             .DATA.L     _GetKey
    000004B0              L1305:                            
    000004B0 8B8F                   BF          L1144
      15062020.c   269                Bdisp_AllClr_DDVRAM();
    000004B2 4B0B                   JSR         @R11
    000004B4 0009                   NOP
      15062020.c   270                firstMenu();
    000004B6 BDB7                   BSR         _firstMenu
    000004B8 0009                   NOP
    000004BA AF8A                   BRA         L1144
    000004BC 0009                   NOP
      15062020.c   271            }
      15062020.c   272       }
      15062020.c   273    }
      15062020.c   274    int lf1menuitem1(){   
    000004BE              _lf1menuitem1:                   ; function: lf1menuitem1
                                                           ; frame size=4
    000004BE 7FFC                   ADD         #-4,R15
      15062020.c   275        locate(1,1);
    000004C0 DE41                   MOV.L       L1312+2,R14; _locate
    000004C2 E501                   MOV         #1,R5
    000004C4 4E0B                   JSR         @R14
    000004C6 6453                   MOV         R5,R4
      15062020.c   276        Print((unsigned char*)"Okonomisches Prinzip");
    000004C8 DD40                   MOV.L       L1312+6,R13; _Print
    000004CA D441                   MOV.L       L1312+10,R4; L422
    000004CC 4D0B                   JSR         @R13
    000004CE 0009                   NOP
      15062020.c   277        locate(1,2);
    000004D0 E502                   MOV         #2,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D2 4E0B                   JSR         @R14
    000004D4 E401                   MOV         #1,R4
      15062020.c   278        Print((unsigned char*)"-Minimal Prinzip");
    000004D6 D43F                   MOV.L       L1312+14,R4; L447
    000004D8 4D0B                   JSR         @R13
    000004DA 0009                   NOP
      15062020.c   279        locate(2,3);
    000004DC E503                   MOV         #3,R5
    000004DE 4E0B                   JSR         @R14
    000004E0 E402                   MOV         #2,R4
      15062020.c   280        Print((unsigned char*)"Vorgegebenes Ziel");
    000004E2 D43D                   MOV.L       L1312+18,R4; L448
    000004E4 4D0B                   JSR         @R13
    000004E6 0009                   NOP
      15062020.c   281        locate(2,4);
    000004E8 E504                   MOV         #4,R5
    000004EA 4E0B                   JSR         @R14
    000004EC E402                   MOV         #2,R4
      15062020.c   282        Print((unsigned char*)"wenig Ausgaben");
    000004EE D43B                   MOV.L       L1312+22,R4; L449
    000004F0 4D0B                   JSR         @R13
    000004F2 0009                   NOP
      15062020.c   283        locate(1,5);
    000004F4 E505                   MOV         #5,R5
    000004F6 4E0B                   JSR         @R14
    000004F8 E401                   MOV         #1,R4
      15062020.c   284        Print((unsigned char*)"-Maximal Prinzip");
    000004FA D439                   MOV.L       L1312+26,R4; L450
    000004FC 4D0B                   JSR         @R13
    000004FE 0009                   NOP
      15062020.c   285        locate(2,6);
    00000500 E506                   MOV         #6,R5
    00000502 4E0B                   JSR         @R14
    00000504 E402                   MOV         #2,R4
      15062020.c   286        Print((unsigned char*)"Einsatz vorgegeben");
    00000506 D437                   MOV.L       L1312+30,R4; L451
    00000508 4D0B                   JSR         @R13
    0000050A 0009                   NOP
      15062020.c   287        locate(2,7);
    0000050C E507                   MOV         #7,R5
    0000050E 4E0B                   JSR         @R14
    00000510 E402                   MOV         #2,R4
      15062020.c   288        Print((unsigned char*)"viel Ziel erreichen");
    00000512 D435                   MOV.L       L1312+34,R4; L452
    00000514 4D0B                   JSR         @R13
    00000516 0009                   NOP
    00000518 DC34                   MOV.L       L1312+38,R12; _Bdisp_AllClr_DDVRAM
    0000051A DD35                   MOV.L       L1312+42,R13; _GetKey
    0000051C 9E53                   MOV.W       L1312,R14  ; H'7532
      15062020.c   289        while (1){
    0000051E              L1157:                            
      15062020.c   290            unsigned int key;       
      15062020.c   291            GetKey(&key);
    0000051E 4D0B                   JSR         @R13
    00000520 64F3                   MOV         R15,R4
      15062020.c   292            if(KEY_CTRL_EXIT == key) {
    00000522 62F2                   MOV.L       @R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000524 32E0                   CMP/EQ      R14,R2
    00000526 8BFA                   BF          L1157
      15062020.c   293                Bdisp_AllClr_DDVRAM();
    00000528 4C0B                   JSR         @R12
    0000052A 0009                   NOP
      15062020.c   294                lf1menu();
    0000052C BF2A                   BSR         _lf1menu
    0000052E 0009                   NOP
    00000530 AFF5                   BRA         L1157
    00000532 0009                   NOP
      15062020.c   295            }
      15062020.c   296        } 
      15062020.c   297    }
      15062020.c   298    int lf1menuitem2(){
    00000534              _lf1menuitem2:                   ; function: lf1menuitem2
                                                           ; frame size=8
      15062020.c   299        locate(1,1);
    00000534 DE24                   MOV.L       L1312+2,R14; _locate
    00000536 E501                   MOV         #1,R5
    00000538 7FF8                   ADD         #-8,R15
    0000053A 4E0B                   JSR         @R14
    0000053C 6453                   MOV         R5,R4
      15062020.c   300        Print((unsigned char*)"Rechtsformen 1/2");
    0000053E DD23                   MOV.L       L1312+6,R13; _Print
    00000540 D42C                   MOV.L       L1312+46,R4; L457
    00000542 4D0B                   JSR         @R13
    00000544 0009                   NOP
      15062020.c   301        locate(1,2);
    00000546 E502                   MOV         #2,R5
    00000548 4E0B                   JSR         @R14
    0000054A E401                   MOV         #1,R4
      15062020.c   302        Print((unsigned char*)"Personengesellschaft");
    0000054C D42A                   MOV.L       L1312+50,R4; L458
    0000054E 4D0B                   JSR         @R13
    00000550 0009                   NOP
      15062020.c   303        locate(1,3);
    00000552 E503                   MOV         #3,R5
    00000554 4E0B                   JSR         @R14
    00000556 E401                   MOV         #1,R4
      15062020.c   304        Print((unsigned char*)"-e.K. eingetragener");
    00000558 D428                   MOV.L       L1312+54,R4; L459
    0000055A 4D0B                   JSR         @R13
    0000055C 0009                   NOP
      15062020.c   305        locate(3,4);
    0000055E E504                   MOV         #4,R5
    00000560 4E0B                   JSR         @R14
    00000562 E403                   MOV         #3,R4
      15062020.c   306        Print((unsigned char*)"Kaufmann");
    00000564 D426                   MOV.L       L1312+58,R4; L460
    00000566 4D0B                   JSR         @R13
    00000568 0009                   NOP
      15062020.c   307        locate(1,5);
    0000056A E505                   MOV         #5,R5
    0000056C 4E0B                   JSR         @R14
    0000056E E401                   MOV         #1,R4
      15062020.c   308        Print((unsigned char*)"-OHG offene Handels-");
    00000570 D424                   MOV.L       L1312+62,R4; L461




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000572 4D0B                   JSR         @R13
    00000574 0009                   NOP
      15062020.c   309        locate(3,6);
    00000576 E506                   MOV         #6,R5
    00000578 4E0B                   JSR         @R14
    0000057A E403                   MOV         #3,R4
      15062020.c   310        Print((unsigned char*)"gesellschaft");
    0000057C D422                   MOV.L       L1312+66,R4; L462
    0000057E 4D0B                   JSR         @R13
    00000580 1F41                   MOV.L       R4,@(4,R15)
      15062020.c   311        locate(1,7);
    00000582 E507                   MOV         #7,R5
    00000584 4E0B                   JSR         @R14
    00000586 E401                   MOV         #1,R4
      15062020.c   312        Print((unsigned char*)"-Kg Kommandit-");
    00000588 D420                   MOV.L       L1312+70,R4; L463
    0000058A 4D0B                   JSR         @R13
    0000058C 0009                   NOP
      15062020.c   313        locate(3,8);
    0000058E E508                   MOV         #8,R5
    00000590 4E0B                   JSR         @R14
    00000592 E403                   MOV         #3,R4
      15062020.c   314        Print((unsigned char*)"gesellschaft");
    00000594 4D0B                   JSR         @R13
    00000596 54F1                   MOV.L       @(4,R15),R4
    00000598 DB15                   MOV.L       L1312+42,R11; _GetKey
    0000059A 9C14                   MOV.W       L1312,R12  ; H'7532
    0000059C DE13                   MOV.L       L1312+38,R14; _Bdisp_AllClr_DDVRAM
    0000059E 6DC3                   MOV         R12,R13
    000005A0 7D15                   ADD         #21,R13
      15062020.c   315        while (1){
    000005A2              L1160:                            
      15062020.c   316            unsigned int key;       
      15062020.c   317            GetKey(&key);
    000005A2 4B0B                   JSR         @R11
    000005A4 64F3                   MOV         R15,R4
      15062020.c   318            if(KEY_CTRL_EXIT == key) {
    000005A6 62F2                   MOV.L       @R15,R2
    000005A8 32C0                   CMP/EQ      R12,R2
    000005AA 8B03                   BF          L1161
      15062020.c   319                Bdisp_AllClr_DDVRAM();
    000005AC 4E0B                   JSR         @R14
    000005AE 0009                   NOP
      15062020.c   320                lf1menu();
    000005B0 BEE8                   BSR         _lf1menu
    000005B2 0009                   NOP
    000005B4              L1161:                            
      15062020.c   321            }
      15062020.c   322            if(KEY_CTRL_DOWN == key) {
    000005B4 63F2                   MOV.L       @R15,R3
    000005B6 33D0                   CMP/EQ      R13,R3
    000005B8 8BF3                   BF          L1160
      15062020.c   323                Bdisp_AllClr_DDVRAM();
    000005BA 4E0B                   JSR         @R14
    000005BC 0009                   NOP
      15062020.c   324                lf1menuitem2_1();
    000005BE B027                   BSR         _lf1menuitem2_1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005C0 0009                   NOP
    000005C2 AFEE                   BRA         L1160
    000005C4 0009                   NOP
    000005C6              L1312:                            
    000005C6 7532                   .DATA.W     H'7532
    000005C8 <00000000>             .DATA.L     _locate
    000005CC <00000000>             .DATA.L     _Print
    000005D0 <00000000>             .DATA.L     L422
    000005D4 <00000000>             .DATA.L     L447
    000005D8 <00000000>             .DATA.L     L448
    000005DC <00000000>             .DATA.L     L449
    000005E0 <00000000>             .DATA.L     L450
    000005E4 <00000000>             .DATA.L     L451
    000005E8 <00000000>             .DATA.L     L452
    000005EC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000005F0 <00000000>             .DATA.L     _GetKey
    000005F4 <00000000>             .DATA.L     L457
    000005F8 <00000000>             .DATA.L     L458
    000005FC <00000000>             .DATA.L     L459
    00000600 <00000000>             .DATA.L     L460
    00000604 <00000000>             .DATA.L     L461
    00000608 <00000000>             .DATA.L     L462
    0000060C <00000000>             .DATA.L     L463
      15062020.c   325            }
      15062020.c   326        } 
      15062020.c   327    }
      15062020.c   328    int lf1menuitem2_1(){
    00000610              _lf1menuitem2_1:                 ; function: lf1menuitem2_1
                                                           ; frame size=4
      15062020.c   329        locate(1,1);
    00000610 DE42                   MOV.L       L1313+2,R14; _locate
    00000612 E501                   MOV         #1,R5
    00000614 7FFC                   ADD         #-4,R15
    00000616 4E0B                   JSR         @R14
    00000618 6453                   MOV         R5,R4
      15062020.c   330        Print((unsigned char*)"Rechtsformen 2/2");
    0000061A DD41                   MOV.L       L1313+6,R13; _Print
    0000061C D441                   MOV.L       L1313+10,R4; L470
    0000061E 4D0B                   JSR         @R13
    00000620 0009                   NOP
      15062020.c   331        locate(1,2);
    00000622 E502                   MOV         #2,R5
    00000624 4E0B                   JSR         @R14
    00000626 E401                   MOV         #1,R4
      15062020.c   332        Print((unsigned char*)"Kapitalgesellschaft");
    00000628 D43F                   MOV.L       L1313+14,R4; L471
    0000062A 4D0B                   JSR         @R13
    0000062C 0009                   NOP
      15062020.c   333        locate(1,3);
    0000062E E503                   MOV         #3,R5
    00000630 4E0B                   JSR         @R14
    00000632 E401                   MOV         #1,R4
      15062020.c   334        Print((unsigned char*)"-GmbH Gesellschaft");
    00000634 D43D                   MOV.L       L1313+18,R4; L472
    00000636 4D0B                   JSR         @R13
    00000638 0009                   NOP
      15062020.c   335        locate(3,4);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000063A E504                   MOV         #4,R5
    0000063C 4E0B                   JSR         @R14
    0000063E E403                   MOV         #3,R4
      15062020.c   336        Print((unsigned char*)"mit beschrankter");
    00000640 D43B                   MOV.L       L1313+22,R4; L473
    00000642 4D0B                   JSR         @R13
    00000644 0009                   NOP
      15062020.c   337        locate(3,5);
    00000646 E505                   MOV         #5,R5
    00000648 4E0B                   JSR         @R14
    0000064A E403                   MOV         #3,R4
      15062020.c   338        Print((unsigned char*)"Haftung");
    0000064C D439                   MOV.L       L1313+26,R4; L474
    0000064E 4D0B                   JSR         @R13
    00000650 0009                   NOP
      15062020.c   339        locate(1,6);
    00000652 E506                   MOV         #6,R5
    00000654 4E0B                   JSR         @R14
    00000656 E401                   MOV         #1,R4
      15062020.c   340        Print((unsigned char*)"-AG Aktien-");
    00000658 D437                   MOV.L       L1313+30,R4; L475
    0000065A 4D0B                   JSR         @R13
    0000065C 0009                   NOP
      15062020.c   341        locate(3,7);
    0000065E E507                   MOV         #7,R5
    00000660 4E0B                   JSR         @R14
    00000662 E403                   MOV         #3,R4
      15062020.c   342        Print((unsigned char*)"gesellschaft");
    00000664 D435                   MOV.L       L1313+34,R4; L462
    00000666 4D0B                   JSR         @R13
    00000668 0009                   NOP
    0000066A DB35                   MOV.L       L1313+38,R11; _GetKey
    0000066C 9C55                   MOV.W       L1313,R12  ; H'7532
    0000066E 6DC3                   MOV         R12,R13
    00000670 DE34                   MOV.L       L1313+42,R14; _Bdisp_AllClr_DDVRAM
    00000672 7D10                   ADD         #16,R13
      15062020.c   343        while (1){
    00000674              L1164:                            
      15062020.c   344            unsigned int key;       
      15062020.c   345            GetKey(&key);
    00000674 4B0B                   JSR         @R11
    00000676 64F3                   MOV         R15,R4
      15062020.c   346            if(KEY_CTRL_EXIT == key) {
    00000678 62F2                   MOV.L       @R15,R2
    0000067A 32C0                   CMP/EQ      R12,R2
    0000067C 8B03                   BF          L1165
      15062020.c   347                Bdisp_AllClr_DDVRAM();
    0000067E 4E0B                   JSR         @R14
    00000680 0009                   NOP
      15062020.c   348                lf1menu();
    00000682 BE7F                   BSR         _lf1menu
    00000684 0009                   NOP
    00000686              L1165:                            
      15062020.c   349            }
      15062020.c   350            if(KEY_CTRL_UP == key) {
    00000686 63F2                   MOV.L       @R15,R3
    00000688 33D0                   CMP/EQ      R13,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000068A 8BF3                   BF          L1164
      15062020.c   351                Bdisp_AllClr_DDVRAM();
    0000068C 4E0B                   JSR         @R14
    0000068E 0009                   NOP
      15062020.c   352                lf1menuitem2();
    00000690 BF50                   BSR         _lf1menuitem2
    00000692 0009                   NOP
    00000694 AFEE                   BRA         L1164
    00000696 0009                   NOP
      15062020.c   353            }
      15062020.c   354        } 
      15062020.c   355    }
      15062020.c   356    int lf1menuitem3(){   
    00000698              _lf1menuitem3:                   ; function: lf1menuitem3
                                                           ; frame size=4
      15062020.c   357        locate(1,1);
    00000698 DE20                   MOV.L       L1313+2,R14; _locate
    0000069A E501                   MOV         #1,R5
    0000069C 7FFC                   ADD         #-4,R15
    0000069E 4E0B                   JSR         @R14
    000006A0 6453                   MOV         R5,R4
      15062020.c   358        Print((unsigned char*)"Gewinnverteilung");
    000006A2 DD1F                   MOV.L       L1313+6,R13; _Print
    000006A4 D428                   MOV.L       L1313+46,R4; L424
    000006A6 4D0B                   JSR         @R13
    000006A8 0009                   NOP
      15062020.c   359        locate(1,2);
    000006AA E502                   MOV         #2,R5
    000006AC 4E0B                   JSR         @R14
    000006AE E401                   MOV         #1,R4
      15062020.c   360        Print((unsigned char*)"-OHG: 4% auf Kapital");
    000006B0 D426                   MOV.L       L1313+50,R4; L481
    000006B2 4D0B                   JSR         @R13
    000006B4 0009                   NOP
      15062020.c   361        locate(2,3);
    000006B6 E503                   MOV         #3,R5
    000006B8 4E0B                   JSR         @R14
    000006BA E402                   MOV         #2,R4
      15062020.c   362        Print((unsigned char*)"Einlagen, Rest nach");
    000006BC D424                   MOV.L       L1313+54,R4; L482
    000006BE 4D0B                   JSR         @R13
    000006C0 0009                   NOP
      15062020.c   363        locate(2,4);
    000006C2 E504                   MOV         #4,R5
    000006C4 4E0B                   JSR         @R14
    000006C6 E402                   MOV         #2,R4
      15062020.c   364        Print((unsigned char*)"Koepfen.");
    000006C8 D422                   MOV.L       L1313+58,R4; L483
    000006CA 4D0B                   JSR         @R13
    000006CC 0009                   NOP
      15062020.c   365        locate(1,5);
    000006CE E505                   MOV         #5,R5
    000006D0 4E0B                   JSR         @R14
    000006D2 E401                   MOV         #1,R4
      15062020.c   366        Print((unsigned char*)"-KG: 4% auf Kapital");
    000006D4 D420                   MOV.L       L1313+62,R4; L484
    000006D6 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006D8 0009                   NOP
      15062020.c   367        locate(2,6);
    000006DA E506                   MOV         #6,R5
    000006DC 4E0B                   JSR         @R14
    000006DE E402                   MOV         #2,R4
      15062020.c   368        Print((unsigned char*)"Einlagen, Rest im");
    000006E0 D41E                   MOV.L       L1313+66,R4; L485
    000006E2 4D0B                   JSR         @R13
    000006E4 0009                   NOP
      15062020.c   369        locate(2,7);
    000006E6 E507                   MOV         #7,R5
    000006E8 4E0B                   JSR         @R14
    000006EA E402                   MOV         #2,R4
      15062020.c   370        Print((unsigned char*)"angemessenen");
    000006EC D41C                   MOV.L       L1313+70,R4; L486
    000006EE 4D0B                   JSR         @R13
    000006F0 0009                   NOP
      15062020.c   371        locate(2,8);
    000006F2 E508                   MOV         #8,R5
    000006F4 4E0B                   JSR         @R14
    000006F6 E402                   MOV         #2,R4
      15062020.c   372        Print((unsigned char*)"Verhaeltnissen");
    000006F8 D41A                   MOV.L       L1313+74,R4; L487
    000006FA 4D0B                   JSR         @R13
    000006FC 0009                   NOP
    000006FE DC11                   MOV.L       L1313+42,R12; _Bdisp_AllClr_DDVRAM
    00000700 DD0F                   MOV.L       L1313+38,R13; _GetKey
    00000702 9E0A                   MOV.W       L1313,R14  ; H'7532
      15062020.c   373        while (1){
    00000704              L1168:                            
      15062020.c   374            unsigned int key;       
      15062020.c   375            GetKey(&key);
    00000704 4D0B                   JSR         @R13
    00000706 64F3                   MOV         R15,R4
      15062020.c   376            if(KEY_CTRL_EXIT == key) {
    00000708 62F2                   MOV.L       @R15,R2
    0000070A 32E0                   CMP/EQ      R14,R2
    0000070C 8BFA                   BF          L1168
      15062020.c   377                Bdisp_AllClr_DDVRAM();
    0000070E 4C0B                   JSR         @R12
    00000710 0009                   NOP
      15062020.c   378                lf1menu();
    00000712 BE37                   BSR         _lf1menu
    00000714 0009                   NOP
    00000716 AFF5                   BRA         L1168
    00000718 0009                   NOP
    0000071A              L1313:                            
    0000071A 7532                   .DATA.W     H'7532
    0000071C <00000000>             .DATA.L     _locate
    00000720 <00000000>             .DATA.L     _Print
    00000724 <00000000>             .DATA.L     L470
    00000728 <00000000>             .DATA.L     L471
    0000072C <00000000>             .DATA.L     L472
    00000730 <00000000>             .DATA.L     L473
    00000734 <00000000>             .DATA.L     L474
    00000738 <00000000>             .DATA.L     L475
    0000073C <00000000>             .DATA.L     L462




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000740 <00000000>             .DATA.L     _GetKey
    00000744 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000748 <00000000>             .DATA.L     L424
    0000074C <00000000>             .DATA.L     L481
    00000750 <00000000>             .DATA.L     L482
    00000754 <00000000>             .DATA.L     L483
    00000758 <00000000>             .DATA.L     L484
    0000075C <00000000>             .DATA.L     L485
    00000760 <00000000>             .DATA.L     L486
    00000764 <00000000>             .DATA.L     L487
      15062020.c   379            }
      15062020.c   380        } 
      15062020.c   381    }
      15062020.c   382    int lf1menuitem4(){
    00000768              _lf1menuitem4:                   ; function: lf1menuitem4
                                                           ; frame size=4
      15062020.c   383        locate(1,1);
    00000768 DE25                   MOV.L       L1314+4,R14; _locate
    0000076A E501                   MOV         #1,R5
    0000076C 7FFC                   ADD         #-4,R15
    0000076E 4E0B                   JSR         @R14
    00000770 6453                   MOV         R5,R4
      15062020.c   384        Print((unsigned char*)"Haftung 1/5");
    00000772 DD24                   MOV.L       L1314+8,R13; _Print
    00000774 D424                   MOV.L       L1314+12,R4; L492
    00000776 4D0B                   JSR         @R13
    00000778 0009                   NOP
      15062020.c   385        locate(1,2);
    0000077A E502                   MOV         #2,R5
    0000077C 4E0B                   JSR         @R14
    0000077E E401                   MOV         #1,R4
      15062020.c   386        Print((unsigned char*)"Kommanditgesellschaf");
    00000780 D422                   MOV.L       L1314+16,R4; L493
    00000782 4D0B                   JSR         @R13
    00000784 0009                   NOP
      15062020.c   387        locate(1,3);
    00000786 E503                   MOV         #3,R5
    00000788 4E0B                   JSR         @R14
    0000078A E401                   MOV         #1,R4
      15062020.c   388        Print((unsigned char*)"-Kommandist: Haftung");
    0000078C D420                   MOV.L       L1314+20,R4; L494
    0000078E 4D0B                   JSR         @R13
    00000790 0009                   NOP
      15062020.c   389        locate(2,4);
    00000792 E504                   MOV         #4,R5
    00000794 4E0B                   JSR         @R14
    00000796 E402                   MOV         #2,R4
      15062020.c   390        Print((unsigned char*)"mit eingelargertem");
    00000798 D41E                   MOV.L       L1314+24,R4; L495
    0000079A 4D0B                   JSR         @R13
    0000079C 0009                   NOP
      15062020.c   391        locate(2,5);
    0000079E E505                   MOV         #5,R5
    000007A0 4E0B                   JSR         @R14
    000007A2 E402                   MOV         #2,R4
      15062020.c   392        Print((unsigned char*)"Kapital, keine");
    000007A4 D41C                   MOV.L       L1314+28,R4; L496




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007A6 4D0B                   JSR         @R13
    000007A8 0009                   NOP
      15062020.c   393        locate(2,6);
    000007AA E506                   MOV         #6,R5
    000007AC 4E0B                   JSR         @R14
    000007AE E402                   MOV         #2,R4
      15062020.c   394        Print((unsigned char*)"Geschaftsfuhrung");
    000007B0 D41A                   MOV.L       L1314+32,R4; L497
    000007B2 4D0B                   JSR         @R13
    000007B4 0009                   NOP
      15062020.c   395        locate(1,7);
    000007B6 E507                   MOV         #7,R5
    000007B8 4E0B                   JSR         @R14
    000007BA E401                   MOV         #1,R4
      15062020.c   396        Print((unsigned char*)"-Komplimentaer");
    000007BC D418                   MOV.L       L1314+36,R4; L498
    000007BE 4D0B                   JSR         @R13
    000007C0 0009                   NOP
      15062020.c   397        locate(2,8);
    000007C2 E508                   MOV         #8,R5
    000007C4 4E0B                   JSR         @R14
    000007C6 E402                   MOV         #2,R4
      15062020.c   398        Print((unsigned char*)"Haftung mit Kapital");
    000007C8 D416                   MOV.L       L1314+40,R4; L499
    000007CA 4D0B                   JSR         @R13
    000007CC 0009                   NOP
    000007CE DB16                   MOV.L       L1314+44,R11; _GetKey
    000007D0 9C14                   MOV.W       L1314,R12  ; H'7532
    000007D2 6DC3                   MOV         R12,R13
    000007D4 DE15                   MOV.L       L1314+48,R14; _Bdisp_AllClr_DDVRAM
    000007D6 7D15                   ADD         #21,R13
      15062020.c   399        while (1){
    000007D8              L1171:                            
      15062020.c   400            unsigned int key;       
      15062020.c   401            GetKey(&key);
    000007D8 4B0B                   JSR         @R11
    000007DA 64F3                   MOV         R15,R4
      15062020.c   402            if(KEY_CTRL_EXIT == key) {
    000007DC 62F2                   MOV.L       @R15,R2
    000007DE 32C0                   CMP/EQ      R12,R2
    000007E0 8B03                   BF          L1172
      15062020.c   403                Bdisp_AllClr_DDVRAM();
    000007E2 4E0B                   JSR         @R14
    000007E4 0009                   NOP
      15062020.c   404                lf1menu();
    000007E6 BDCD                   BSR         _lf1menu
    000007E8 0009                   NOP
    000007EA              L1172:                            
      15062020.c   405            }
      15062020.c   406            if(KEY_CTRL_DOWN == key) {
    000007EA 63F2                   MOV.L       @R15,R3
    000007EC 33D0                   CMP/EQ      R13,R3
    000007EE 8BF3                   BF          L1171
      15062020.c   407                Bdisp_AllClr_DDVRAM();
    000007F0 4E0B                   JSR         @R14
    000007F2 0009                   NOP
      15062020.c   408                lf1menuitem4_1();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007F4 B01C                   BSR         _lf1menuitem4_1
    000007F6 0009                   NOP
    000007F8 AFEE                   BRA         L1171
    000007FA 0009                   NOP
    000007FC              L1314:                            
    000007FC 7532                   .DATA.W     H'7532
    000007FE 0000                   .DATA.W     0
    00000800 <00000000>             .DATA.L     _locate
    00000804 <00000000>             .DATA.L     _Print
    00000808 <00000000>             .DATA.L     L492
    0000080C <00000000>             .DATA.L     L493
    00000810 <00000000>             .DATA.L     L494
    00000814 <00000000>             .DATA.L     L495
    00000818 <00000000>             .DATA.L     L496
    0000081C <00000000>             .DATA.L     L497
    00000820 <00000000>             .DATA.L     L498
    00000824 <00000000>             .DATA.L     L499
    00000828 <00000000>             .DATA.L     _GetKey
    0000082C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   409            }
      15062020.c   410        } 
      15062020.c   411    }
      15062020.c   412    int lf1menuitem4_1(){
    00000830              _lf1menuitem4_1:                 ; function: lf1menuitem4_1
                                                           ; frame size=4
      15062020.c   413        locate(1,1);
    00000830 DE26                   MOV.L       L1315+4,R14; _locate
    00000832 E501                   MOV         #1,R5
    00000834 7FFC                   ADD         #-4,R15
    00000836 4E0B                   JSR         @R14
    00000838 6453                   MOV         R5,R4
      15062020.c   414        Print((unsigned char*)"Haftung 2/5");
    0000083A DD25                   MOV.L       L1315+8,R13; _Print
    0000083C D425                   MOV.L       L1315+12,R4; L506
    0000083E 4D0B                   JSR         @R13
    00000840 0009                   NOP
      15062020.c   415        locate(2,2);
    00000842 E502                   MOV         #2,R5
    00000844 4E0B                   JSR         @R14
    00000846 6453                   MOV         R5,R4
      15062020.c   416        Print((unsigned char*)"Einlagen und privat");
    00000848 D423                   MOV.L       L1315+16,R4; L507
    0000084A 4D0B                   JSR         @R13
    0000084C 0009                   NOP
      15062020.c   417        locate(2,3);
    0000084E E503                   MOV         #3,R5
    00000850 4E0B                   JSR         @R14
    00000852 E402                   MOV         #2,R4
      15062020.c   418        Print((unsigned char*)"Geschaftsfuhrer");
    00000854 D421                   MOV.L       L1315+20,R4; L508
    00000856 4D0B                   JSR         @R13
    00000858 0009                   NOP
      15062020.c   419        locate(1,5);
    0000085A E505                   MOV         #5,R5
    0000085C 4E0B                   JSR         @R14
    0000085E E401                   MOV         #1,R4
      15062020.c   420        Print((unsigned char*)"Offene Handelsgesel.");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000860 D41F                   MOV.L       L1315+24,R4; L509
    00000862 4D0B                   JSR         @R13
    00000864 0009                   NOP
      15062020.c   421        locate(1,6);
    00000866 E506                   MOV         #6,R5
    00000868 4E0B                   JSR         @R14
    0000086A E401                   MOV         #1,R4
      15062020.c   422        Print((unsigned char*)"-unmittelbar (");
    0000086C D41D                   MOV.L       L1315+28,R4; L510
    0000086E 4D0B                   JSR         @R13
    00000870 0009                   NOP
      15062020.c   423        locate(2,7);
    00000872 E507                   MOV         #7,R5
    00000874 4E0B                   JSR         @R14
    00000876 E402                   MOV         #2,R4
      15062020.c   424        Print((unsigned char*)"Glaubiger kann an");
    00000878 D41B                   MOV.L       L1315+32,R4; L511
    0000087A 4D0B                   JSR         @R13
    0000087C 0009                   NOP
      15062020.c   425        locate(2,8);
    0000087E E508                   MOV         #8,R5
    00000880 4E0B                   JSR         @R14
    00000882 E402                   MOV         #2,R4
      15062020.c   426        Print((unsigned char*)"Gesellschafter");
    00000884 D419                   MOV.L       L1315+36,R4; L512
    00000886 4D0B                   JSR         @R13
    00000888 0009                   NOP
    0000088A DA19                   MOV.L       L1315+40,R10; _GetKey
    0000088C 9B1C                   MOV.W       L1315,R11  ; H'7542
    0000088E 6CB3                   MOV         R11,R12
    00000890 9D1B                   MOV.W       L1315+2,R13; H'7547
    00000892 7CF0                   ADD         #-16,R12
    00000894 DE17                   MOV.L       L1315+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   427        while (1){
    00000896              L1175:                            
      15062020.c   428            unsigned int key;       
      15062020.c   429            GetKey(&key);
    00000896 4A0B                   JSR         @R10
    00000898 64F3                   MOV         R15,R4
      15062020.c   430            if(KEY_CTRL_EXIT == key) {
    0000089A 62F2                   MOV.L       @R15,R2
    0000089C 32C0                   CMP/EQ      R12,R2
    0000089E 8B03                   BF          L1176
      15062020.c   431                Bdisp_AllClr_DDVRAM();
    000008A0 4E0B                   JSR         @R14
    000008A2 0009                   NOP
      15062020.c   432                lf1menu();
    000008A4 BD6E                   BSR         _lf1menu
    000008A6 0009                   NOP
    000008A8              L1176:                            
      15062020.c   433            }
      15062020.c   434            if(KEY_CTRL_UP == key) {
    000008A8 63F2                   MOV.L       @R15,R3
    000008AA 33B0                   CMP/EQ      R11,R3
    000008AC 8B03                   BF          L1177
      15062020.c   435                Bdisp_AllClr_DDVRAM();
    000008AE 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008B0 0009                   NOP
      15062020.c   436                lf1menuitem4();
    000008B2 BF59                   BSR         _lf1menuitem4
    000008B4 0009                   NOP
    000008B6              L1177:                            
      15062020.c   437            }
      15062020.c   438            if(KEY_CTRL_DOWN == key) {
    000008B6 62F2                   MOV.L       @R15,R2
    000008B8 32D0                   CMP/EQ      R13,R2
    000008BA 8BEC                   BF          L1175
      15062020.c   439                Bdisp_AllClr_DDVRAM();
    000008BC 4E0B                   JSR         @R14
    000008BE 0009                   NOP
      15062020.c   440                lf1menuitem4_2();
    000008C0 B01A                   BSR         _lf1menuitem4_2
    000008C2 0009                   NOP
    000008C4 AFE7                   BRA         L1175
    000008C6 0009                   NOP
    000008C8              L1315:                            
    000008C8 7542                   .DATA.W     H'7542
    000008CA 7547                   .DATA.W     H'7547
    000008CC <00000000>             .DATA.L     _locate
    000008D0 <00000000>             .DATA.L     _Print
    000008D4 <00000000>             .DATA.L     L506
    000008D8 <00000000>             .DATA.L     L507
    000008DC <00000000>             .DATA.L     L508
    000008E0 <00000000>             .DATA.L     L509
    000008E4 <00000000>             .DATA.L     L510
    000008E8 <00000000>             .DATA.L     L511
    000008EC <00000000>             .DATA.L     L512
    000008F0 <00000000>             .DATA.L     _GetKey
    000008F4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   441            }
      15062020.c   442        } 
      15062020.c   443    }
      15062020.c   444    int lf1menuitem4_2(){
    000008F8              _lf1menuitem4_2:                 ; function: lf1menuitem4_2
                                                           ; frame size=4
      15062020.c   445        locate(1,1);
    000008F8 DE29                   MOV.L       L1316+4,R14; _locate
    000008FA E501                   MOV         #1,R5
    000008FC 7FFC                   ADD         #-4,R15
    000008FE 4E0B                   JSR         @R14
    00000900 6453                   MOV         R5,R4
      15062020.c   446        Print((unsigned char*)"Haftung 3/5");
    00000902 DD28                   MOV.L       L1316+8,R13; _Print
    00000904 D428                   MOV.L       L1316+12,R4; L520
    00000906 4D0B                   JSR         @R13
    00000908 0009                   NOP
      15062020.c   447        locate(2,2);
    0000090A E502                   MOV         #2,R5
    0000090C 4E0B                   JSR         @R14
    0000090E 6453                   MOV         R5,R4
      15062020.c   448        Print((unsigned char*)"herantreten und");
    00000910 D426                   MOV.L       L1316+16,R4; L521
    00000912 4D0B                   JSR         @R13
    00000914 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   449        locate(2,3);
    00000916 E503                   MOV         #3,R5
    00000918 4E0B                   JSR         @R14
    0000091A E402                   MOV         #2,R4
      15062020.c   450        Print((unsigned char*)"Schulden einfordern");
    0000091C D424                   MOV.L       L1316+20,R4; L522
    0000091E 4D0B                   JSR         @R13
    00000920 0009                   NOP
      15062020.c   451        locate(1,4);
    00000922 E504                   MOV         #4,R5
    00000924 4E0B                   JSR         @R14
    00000926 E401                   MOV         #1,R4
      15062020.c   452        Print((unsigned char*)"-unbeschrankt (");
    00000928 D422                   MOV.L       L1316+24,R4; L523
    0000092A 4D0B                   JSR         @R13
    0000092C 0009                   NOP
      15062020.c   453        locate(2,5);
    0000092E E505                   MOV         #5,R5
    00000930 4E0B                   JSR         @R14
    00000932 E402                   MOV         #2,R4
      15062020.c   454        Print((unsigned char*)"privat+Gesellschaft");
    00000934 D420                   MOV.L       L1316+28,R4; L524
    00000936 4D0B                   JSR         @R13
    00000938 0009                   NOP
      15062020.c   455        locate(2,6);
    0000093A E506                   MOV         #6,R5
    0000093C 4E0B                   JSR         @R14
    0000093E E402                   MOV         #2,R4
      15062020.c   456        Print((unsigned char*)"vermoegen)");
    00000940 D41E                   MOV.L       L1316+32,R4; L525
    00000942 4D0B                   JSR         @R13
    00000944 0009                   NOP
      15062020.c   457        locate(1,7);
    00000946 E507                   MOV         #7,R5
    00000948 4E0B                   JSR         @R14
    0000094A E401                   MOV         #1,R4
      15062020.c   458        Print((unsigned char*)"-Solidarisch (");
    0000094C D41C                   MOV.L       L1316+36,R4; L526
    0000094E 4D0B                   JSR         @R13
    00000950 0009                   NOP
      15062020.c   459        locate(2,8);
    00000952 E508                   MOV         #8,R5
    00000954 4E0B                   JSR         @R14
    00000956 E402                   MOV         #2,R4
      15062020.c   460        Print((unsigned char*)"gemeinsame Haftung");
    00000958 D41A                   MOV.L       L1316+40,R4; L527
    0000095A 4D0B                   JSR         @R13
    0000095C 0009                   NOP
    0000095E DA1A                   MOV.L       L1316+44,R10; _GetKey
    00000960 9B1C                   MOV.W       L1316,R11  ; H'7542
    00000962 6CB3                   MOV         R11,R12
    00000964 9D1B                   MOV.W       L1316+2,R13; H'7547
    00000966 7CF0                   ADD         #-16,R12
    00000968 DE18                   MOV.L       L1316+48,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   461        while (1){
    0000096A              L1180:                            
      15062020.c   462            unsigned int key;       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   463            GetKey(&key);
    0000096A 4A0B                   JSR         @R10
    0000096C 64F3                   MOV         R15,R4
      15062020.c   464            if(KEY_CTRL_EXIT == key) {
    0000096E 62F2                   MOV.L       @R15,R2
    00000970 32C0                   CMP/EQ      R12,R2
    00000972 8B03                   BF          L1181
      15062020.c   465                Bdisp_AllClr_DDVRAM();
    00000974 4E0B                   JSR         @R14
    00000976 0009                   NOP
      15062020.c   466                lf1menu();
    00000978 BD04                   BSR         _lf1menu
    0000097A 0009                   NOP
    0000097C              L1181:                            
      15062020.c   467            }
      15062020.c   468            if(KEY_CTRL_UP == key) {
    0000097C 63F2                   MOV.L       @R15,R3
    0000097E 33B0                   CMP/EQ      R11,R3
    00000980 8B03                   BF          L1182
      15062020.c   469                Bdisp_AllClr_DDVRAM();
    00000982 4E0B                   JSR         @R14
    00000984 0009                   NOP
      15062020.c   470                lf1menuitem4_1();
    00000986 BF53                   BSR         _lf1menuitem4_1
    00000988 0009                   NOP
    0000098A              L1182:                            
      15062020.c   471            }
      15062020.c   472            if(KEY_CTRL_DOWN == key) {
    0000098A 62F2                   MOV.L       @R15,R2
    0000098C 32D0                   CMP/EQ      R13,R2
    0000098E 8BEC                   BF          L1180
      15062020.c   473                Bdisp_AllClr_DDVRAM();
    00000990 4E0B                   JSR         @R14
    00000992 0009                   NOP
      15062020.c   474                lf1menuitem4_3();
    00000994 B01C                   BSR         _lf1menuitem4_3
    00000996 0009                   NOP
    00000998 AFE7                   BRA         L1180
    0000099A 0009                   NOP
    0000099C              L1316:                            
    0000099C 7542                   .DATA.W     H'7542
    0000099E 7547                   .DATA.W     H'7547
    000009A0 <00000000>             .DATA.L     _locate
    000009A4 <00000000>             .DATA.L     _Print
    000009A8 <00000000>             .DATA.L     L520
    000009AC <00000000>             .DATA.L     L521
    000009B0 <00000000>             .DATA.L     L522
    000009B4 <00000000>             .DATA.L     L523
    000009B8 <00000000>             .DATA.L     L524
    000009BC <00000000>             .DATA.L     L525
    000009C0 <00000000>             .DATA.L     L526
    000009C4 <00000000>             .DATA.L     L527
    000009C8 <00000000>             .DATA.L     _GetKey
    000009CC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   475            }
      15062020.c   476        } 
      15062020.c   477    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   478    int lf1menuitem4_3(){
    000009D0              _lf1menuitem4_3:                 ; function: lf1menuitem4_3
                                                           ; frame size=4
      15062020.c   479        locate(1,1);
    000009D0 DE26                   MOV.L       L1317+4,R14; _locate
    000009D2 E501                   MOV         #1,R5
    000009D4 7FFC                   ADD         #-4,R15
    000009D6 4E0B                   JSR         @R14
    000009D8 6453                   MOV         R5,R4
      15062020.c   480        Print((unsigned char*)"Haftung 4/5");
    000009DA DD25                   MOV.L       L1317+8,R13; _Print
    000009DC D425                   MOV.L       L1317+12,R4; L535
    000009DE 4D0B                   JSR         @R13
    000009E0 0009                   NOP
      15062020.c   481        locate(2,2);
    000009E2 E502                   MOV         #2,R5
    000009E4 4E0B                   JSR         @R14
    000009E6 6453                   MOV         R5,R4
      15062020.c   482        Print((unsigned char*)"in alle fuer einen");
    000009E8 D423                   MOV.L       L1317+16,R4; L536
    000009EA 4D0B                   JSR         @R13
    000009EC 0009                   NOP
      15062020.c   483        locate(2,3);
    000009EE E503                   MOV         #3,R5
    000009F0 4E0B                   JSR         @R14
    000009F2 E402                   MOV         #2,R4
      15062020.c   484        Print((unsigned char*)"Musketierprinzip)");
    000009F4 D421                   MOV.L       L1317+20,R4; L537
    000009F6 4D0B                   JSR         @R13
    000009F8 0009                   NOP
      15062020.c   485        locate(1,5);
    000009FA E505                   MOV         #5,R5
    000009FC 4E0B                   JSR         @R14
    000009FE E401                   MOV         #1,R4
      15062020.c   486        Print((unsigned char*)"GmbH (Grundungs-");
    00000A00 D41F                   MOV.L       L1317+24,R4; L538
    00000A02 4D0B                   JSR         @R13
    00000A04 0009                   NOP
      15062020.c   487        locate(2,6);
    00000A06 E506                   MOV         #6,R5
    00000A08 4E0B                   JSR         @R14
    00000A0A E402                   MOV         #2,R4
      15062020.c   488        Print((unsigned char*)"kapital 25.000Eur,");
    00000A0C D41D                   MOV.L       L1317+28,R4; L539
    00000A0E 4D0B                   JSR         @R13
    00000A10 0009                   NOP
      15062020.c   489        locate(2,7);
    00000A12 E507                   MOV         #7,R5
    00000A14 4E0B                   JSR         @R14
    00000A16 E402                   MOV         #2,R4
      15062020.c   490        Print((unsigned char*)"Gewinnverteilung");
    00000A18 D41B                   MOV.L       L1317+32,R4; L424
    00000A1A 4D0B                   JSR         @R13
    00000A1C 0009                   NOP
      15062020.c   491        locate(2,8);
    00000A1E E508                   MOV         #8,R5
    00000A20 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A22 E402                   MOV         #2,R4
      15062020.c   492        Print((unsigned char*)"nach Anteilen am");
    00000A24 D419                   MOV.L       L1317+36,R4; L540
    00000A26 4D0B                   JSR         @R13
    00000A28 0009                   NOP
    00000A2A DA19                   MOV.L       L1317+40,R10; _GetKey
    00000A2C 9B1C                   MOV.W       L1317,R11  ; H'7542
    00000A2E 6CB3                   MOV         R11,R12
    00000A30 9D1B                   MOV.W       L1317+2,R13; H'7547
    00000A32 7CF0                   ADD         #-16,R12
    00000A34 DE17                   MOV.L       L1317+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   493        while (1){
    00000A36              L1185:                            
      15062020.c   494            unsigned int key;       
      15062020.c   495            GetKey(&key);
    00000A36 4A0B                   JSR         @R10
    00000A38 64F3                   MOV         R15,R4
      15062020.c   496            if(KEY_CTRL_EXIT == key) {
    00000A3A 62F2                   MOV.L       @R15,R2
    00000A3C 32C0                   CMP/EQ      R12,R2
    00000A3E 8B03                   BF          L1186
      15062020.c   497                Bdisp_AllClr_DDVRAM();
    00000A40 4E0B                   JSR         @R14
    00000A42 0009                   NOP
      15062020.c   498                lf1menu();
    00000A44 BC9E                   BSR         _lf1menu
    00000A46 0009                   NOP
    00000A48              L1186:                            
      15062020.c   499            }
      15062020.c   500            if(KEY_CTRL_UP == key) {
    00000A48 63F2                   MOV.L       @R15,R3
    00000A4A 33B0                   CMP/EQ      R11,R3
    00000A4C 8B03                   BF          L1187
      15062020.c   501                Bdisp_AllClr_DDVRAM();
    00000A4E 4E0B                   JSR         @R14
    00000A50 0009                   NOP
      15062020.c   502                lf1menuitem4_2();
    00000A52 BF51                   BSR         _lf1menuitem4_2
    00000A54 0009                   NOP
    00000A56              L1187:                            
      15062020.c   503            }
      15062020.c   504            if(KEY_CTRL_DOWN == key) {
    00000A56 62F2                   MOV.L       @R15,R2
    00000A58 32D0                   CMP/EQ      R13,R2
    00000A5A 8BEC                   BF          L1185
      15062020.c   505                Bdisp_AllClr_DDVRAM();
    00000A5C 4E0B                   JSR         @R14
    00000A5E 0009                   NOP
      15062020.c   506                lf1menuitem4_4();
    00000A60 B01A                   BSR         _lf1menuitem4_4
    00000A62 0009                   NOP
    00000A64 AFE7                   BRA         L1185
    00000A66 0009                   NOP
    00000A68              L1317:                            
    00000A68 7542                   .DATA.W     H'7542
    00000A6A 7547                   .DATA.W     H'7547
    00000A6C <00000000>             .DATA.L     _locate




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A70 <00000000>             .DATA.L     _Print
    00000A74 <00000000>             .DATA.L     L535
    00000A78 <00000000>             .DATA.L     L536
    00000A7C <00000000>             .DATA.L     L537
    00000A80 <00000000>             .DATA.L     L538
    00000A84 <00000000>             .DATA.L     L539
    00000A88 <00000000>             .DATA.L     L424
    00000A8C <00000000>             .DATA.L     L540
    00000A90 <00000000>             .DATA.L     _GetKey
    00000A94 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   507            }
      15062020.c   508        } 
      15062020.c   509    }
      15062020.c   510    int lf1menuitem4_4(){
    00000A98              _lf1menuitem4_4:                 ; function: lf1menuitem4_4
                                                           ; frame size=4
      15062020.c   511        locate(1,1);
    00000A98 DE47                   MOV.L       L1318+4,R14; _locate
    00000A9A E501                   MOV         #1,R5
    00000A9C 7FFC                   ADD         #-4,R15
    00000A9E 4E0B                   JSR         @R14
    00000AA0 6453                   MOV         R5,R4
      15062020.c   512        Print((unsigned char*)"Haftung 5/5");
    00000AA2 DD46                   MOV.L       L1318+8,R13; _Print
    00000AA4 D446                   MOV.L       L1318+12,R4; L548
    00000AA6 4D0B                   JSR         @R13
    00000AA8 0009                   NOP
      15062020.c   513        locate(2,2);
    00000AAA E502                   MOV         #2,R5
    00000AAC 4E0B                   JSR         @R14
    00000AAE 6453                   MOV         R5,R4
      15062020.c   514        Print((unsigned char*)"Gesamtvermoegen)");
    00000AB0 D444                   MOV.L       L1318+16,R4; L549
    00000AB2 4D0B                   JSR         @R13
    00000AB4 0009                   NOP
      15062020.c   515        locate(1,4);
    00000AB6 E504                   MOV         #4,R5
    00000AB8 4E0B                   JSR         @R14
    00000ABA E401                   MOV         #1,R4
      15062020.c   516        Print((unsigned char*)"-AG (Grundungs-");
    00000ABC D442                   MOV.L       L1318+20,R4; L550
    00000ABE 4D0B                   JSR         @R13
    00000AC0 0009                   NOP
      15062020.c   517        locate(2,5);
    00000AC2 E505                   MOV         #5,R5
    00000AC4 4E0B                   JSR         @R14
    00000AC6 E402                   MOV         #2,R4
      15062020.c   518        Print((unsigned char*)"kapital 50.000Eur,");
    00000AC8 D440                   MOV.L       L1318+24,R4; L551
    00000ACA 4D0B                   JSR         @R13
    00000ACC 0009                   NOP
      15062020.c   519        locate(2,6);
    00000ACE E506                   MOV         #6,R5
    00000AD0 4E0B                   JSR         @R14
    00000AD2 E402                   MOV         #2,R4
      15062020.c   520        Print((unsigned char*)"Gewinnverteilung");
    00000AD4 D43E                   MOV.L       L1318+28,R4; L424




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD6 4D0B                   JSR         @R13
    00000AD8 0009                   NOP
      15062020.c   521        locate(2,7);
    00000ADA E507                   MOV         #7,R5
    00000ADC 4E0B                   JSR         @R14
    00000ADE E402                   MOV         #2,R4
      15062020.c   522        Print((unsigned char*)"Dividenden, Kurs-");
    00000AE0 D43C                   MOV.L       L1318+32,R4; L552
    00000AE2 4D0B                   JSR         @R13
    00000AE4 0009                   NOP
      15062020.c   523        locate(2,8);
    00000AE6 E508                   MOV         #8,R5
    00000AE8 4E0B                   JSR         @R14
    00000AEA E402                   MOV         #2,R4
      15062020.c   524        Print((unsigned char*)"gewinne, Anteile)");
    00000AEC D43A                   MOV.L       L1318+36,R4; L553
    00000AEE 4D0B                   JSR         @R13
    00000AF0 0009                   NOP
    00000AF2 DB3A                   MOV.L       L1318+40,R11; _GetKey
    00000AF4 9C5E                   MOV.W       L1318,R12  ; H'7532
    00000AF6 6DC3                   MOV         R12,R13
    00000AF8 DE39                   MOV.L       L1318+44,R14; _Bdisp_AllClr_DDVRAM
    00000AFA 7D10                   ADD         #16,R13
      15062020.c   525        while (1){
    00000AFC              L1190:                            
      15062020.c   526            unsigned int key;       
      15062020.c   527            GetKey(&key);
    00000AFC 4B0B                   JSR         @R11
    00000AFE 64F3                   MOV         R15,R4
      15062020.c   528            if(KEY_CTRL_EXIT == key) {
    00000B00 62F2                   MOV.L       @R15,R2
    00000B02 32C0                   CMP/EQ      R12,R2
    00000B04 8B03                   BF          L1191
      15062020.c   529                Bdisp_AllClr_DDVRAM();
    00000B06 4E0B                   JSR         @R14
    00000B08 0009                   NOP
      15062020.c   530                lf1menu();
    00000B0A BC3B                   BSR         _lf1menu
    00000B0C 0009                   NOP
    00000B0E              L1191:                            
      15062020.c   531            }
      15062020.c   532            if(KEY_CTRL_UP == key) {
    00000B0E 63F2                   MOV.L       @R15,R3
    00000B10 33D0                   CMP/EQ      R13,R3
    00000B12 8BF3                   BF          L1190
      15062020.c   533                Bdisp_AllClr_DDVRAM();
    00000B14 4E0B                   JSR         @R14
    00000B16 0009                   NOP
      15062020.c   534                lf1menuitem4_3();
    00000B18 BF5A                   BSR         _lf1menuitem4_3
    00000B1A 0009                   NOP
    00000B1C AFEE                   BRA         L1190
    00000B1E 0009                   NOP
      15062020.c   535            }
      15062020.c   536        } 
      15062020.c   537    }
      15062020.c   538    int lf1menuitem5(){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B20              _lf1menuitem5:                   ; function: lf1menuitem5
                                                           ; frame size=4
      15062020.c   539        locate(1,1);
    00000B20 DE25                   MOV.L       L1318+4,R14; _locate
    00000B22 E501                   MOV         #1,R5
    00000B24 7FFC                   ADD         #-4,R15
    00000B26 4E0B                   JSR         @R14
    00000B28 6453                   MOV         R5,R4
      15062020.c   540        Print((unsigned char*)"Preisbildungs... 1/3");
    00000B2A DD24                   MOV.L       L1318+8,R13; _Print
    00000B2C D42D                   MOV.L       L1318+48,R4; L559
    00000B2E 4D0B                   JSR         @R13
    00000B30 0009                   NOP
      15062020.c   541        locate(1,2);
    00000B32 E502                   MOV         #2,R5
    00000B34 4E0B                   JSR         @R14
    00000B36 E401                   MOV         #1,R4
      15062020.c   542        Print((unsigned char*)"-Markt");
    00000B38 D42B                   MOV.L       L1318+52,R4; L560
    00000B3A 4D0B                   JSR         @R13
    00000B3C 0009                   NOP
      15062020.c   543        locate(2,3);
    00000B3E E503                   MOV         #3,R5
    00000B40 4E0B                   JSR         @R14
    00000B42 E402                   MOV         #2,R4
      15062020.c   544        Print((unsigned char*)"Angebot<->Nachfrage");
    00000B44 D429                   MOV.L       L1318+56,R4; L561
    00000B46 4D0B                   JSR         @R13
    00000B48 0009                   NOP
      15062020.c   545        locate(2,4);
    00000B4A E504                   MOV         #4,R5
    00000B4C 4E0B                   JSR         @R14
    00000B4E E402                   MOV         #2,R4
      15062020.c   546        Print((unsigned char*)"Der Markt wird");
    00000B50 D427                   MOV.L       L1318+60,R4; L562
    00000B52 4D0B                   JSR         @R13
    00000B54 0009                   NOP
      15062020.c   547        locate(2,5);
    00000B56 E505                   MOV         #5,R5
    00000B58 4E0B                   JSR         @R14
    00000B5A E402                   MOV         #2,R4
      15062020.c   548        Print((unsigned char*)"Mithilfe eines");
    00000B5C D425                   MOV.L       L1318+64,R4; L563
    00000B5E 4D0B                   JSR         @R13
    00000B60 0009                   NOP
      15062020.c   549        locate(2,6);
    00000B62 E506                   MOV         #6,R5
    00000B64 4E0B                   JSR         @R14
    00000B66 E402                   MOV         #2,R4
      15062020.c   550        Print((unsigned char*)"Modells vereinfacht");
    00000B68 D423                   MOV.L       L1318+68,R4; L564
    00000B6A 4D0B                   JSR         @R13
    00000B6C 0009                   NOP
      15062020.c   551        locate(2,7);
    00000B6E E507                   MOV         #7,R5
    00000B70 4E0B                   JSR         @R14
    00000B72 E402                   MOV         #2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   552        Print((unsigned char*)"dargestellt:");
    00000B74 D421                   MOV.L       L1318+72,R4; L565
    00000B76 4D0B                   JSR         @R13
    00000B78 0009                   NOP
      15062020.c   553        locate(3,8);
    00000B7A E508                   MOV         #8,R5
    00000B7C 4E0B                   JSR         @R14
    00000B7E E403                   MOV         #3,R4
      15062020.c   554        Print((unsigned char*)"vollkommener Markt");
    00000B80 D41F                   MOV.L       L1318+76,R4; L566
    00000B82 4D0B                   JSR         @R13
    00000B84 0009                   NOP
    00000B86 DB15                   MOV.L       L1318+40,R11; _GetKey
    00000B88 9C14                   MOV.W       L1318,R12  ; H'7532
    00000B8A 6DC3                   MOV         R12,R13
    00000B8C DE14                   MOV.L       L1318+44,R14; _Bdisp_AllClr_DDVRAM
    00000B8E 7D15                   ADD         #21,R13
      15062020.c   555        while (1){
    00000B90              L1194:                            
      15062020.c   556            unsigned int key;       
      15062020.c   557            GetKey(&key);
    00000B90 4B0B                   JSR         @R11
    00000B92 64F3                   MOV         R15,R4
      15062020.c   558            if(KEY_CTRL_EXIT == key) {
    00000B94 62F2                   MOV.L       @R15,R2
    00000B96 32C0                   CMP/EQ      R12,R2
    00000B98 8B03                   BF          L1195
      15062020.c   559                Bdisp_AllClr_DDVRAM();
    00000B9A 4E0B                   JSR         @R14
    00000B9C 0009                   NOP
      15062020.c   560                lf1menu();
    00000B9E BBF1                   BSR         _lf1menu
    00000BA0 0009                   NOP
    00000BA2              L1195:                            
      15062020.c   561            }
      15062020.c   562            if(KEY_CTRL_DOWN == key) {
    00000BA2 63F2                   MOV.L       @R15,R3
    00000BA4 33D0                   CMP/EQ      R13,R3
    00000BA6 8BF3                   BF          L1194
      15062020.c   563                Bdisp_AllClr_DDVRAM();
    00000BA8 4E0B                   JSR         @R14
    00000BAA 0009                   NOP
      15062020.c   564                lf1menuitem5_1();
    00000BAC B02A                   BSR         _lf1menuitem5_1
    00000BAE 0009                   NOP
    00000BB0 AFEE                   BRA         L1194
    00000BB2 0009                   NOP
    00000BB4              L1318:                            
    00000BB4 7532                   .DATA.W     H'7532
    00000BB6 0000                   .DATA.W     0
    00000BB8 <00000000>             .DATA.L     _locate
    00000BBC <00000000>             .DATA.L     _Print
    00000BC0 <00000000>             .DATA.L     L548
    00000BC4 <00000000>             .DATA.L     L549
    00000BC8 <00000000>             .DATA.L     L550
    00000BCC <00000000>             .DATA.L     L551
    00000BD0 <00000000>             .DATA.L     L424




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BD4 <00000000>             .DATA.L     L552
    00000BD8 <00000000>             .DATA.L     L553
    00000BDC <00000000>             .DATA.L     _GetKey
    00000BE0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000BE4 <00000000>             .DATA.L     L559
    00000BE8 <00000000>             .DATA.L     L560
    00000BEC <00000000>             .DATA.L     L561
    00000BF0 <00000000>             .DATA.L     L562
    00000BF4 <00000000>             .DATA.L     L563
    00000BF8 <00000000>             .DATA.L     L564
    00000BFC <00000000>             .DATA.L     L565
    00000C00 <00000000>             .DATA.L     L566
      15062020.c   565            }
      15062020.c   566        } 
      15062020.c   567    }
      15062020.c   568    int lf1menuitem5_1(){
    00000C04              _lf1menuitem5_1:                 ; function: lf1menuitem5_1
                                                           ; frame size=4
      15062020.c   569        locate(1,1);
    00000C04 DE26                   MOV.L       L1319+4,R14; _locate
    00000C06 E501                   MOV         #1,R5
    00000C08 7FFC                   ADD         #-4,R15
    00000C0A 4E0B                   JSR         @R14
    00000C0C 6453                   MOV         R5,R4
      15062020.c   570        Print((unsigned char*)"Preisbildungs... 2/3");
    00000C0E DD25                   MOV.L       L1319+8,R13; _Print
    00000C10 D425                   MOV.L       L1319+12,R4; L573
    00000C12 4D0B                   JSR         @R13
    00000C14 0009                   NOP
      15062020.c   571        locate(2,2);
    00000C16 E502                   MOV         #2,R5
    00000C18 4E0B                   JSR         @R14
    00000C1A 6453                   MOV         R5,R4
      15062020.c   572        Print((unsigned char*)"Realitat:");
    00000C1C D423                   MOV.L       L1319+16,R4; L574
    00000C1E 4D0B                   JSR         @R13
    00000C20 0009                   NOP
      15062020.c   573        locate(3,3);
    00000C22 E503                   MOV         #3,R5
    00000C24 4E0B                   JSR         @R14
    00000C26 6453                   MOV         R5,R4
      15062020.c   574        Print((unsigned char*)"unvollkomm. Markt");
    00000C28 D421                   MOV.L       L1319+20,R4; L575
    00000C2A 4D0B                   JSR         @R13
    00000C2C 0009                   NOP
      15062020.c   575        locate(1,5);
    00000C2E E505                   MOV         #5,R5
    00000C30 4E0B                   JSR         @R14
    00000C32 E401                   MOV         #1,R4
      15062020.c   576        Print((unsigned char*)"Angebotskurve");
    00000C34 D41F                   MOV.L       L1319+24,R4; L576
    00000C36 4D0B                   JSR         @R13
    00000C38 0009                   NOP
      15062020.c   577        locate(2,6);
    00000C3A E506                   MOV         #6,R5
    00000C3C 4E0B                   JSR         @R14
    00000C3E E402                   MOV         #2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   578        Print((unsigned char*)"1) Angebotskurve");
    00000C40 D41D                   MOV.L       L1319+28,R4; L577
    00000C42 4D0B                   JSR         @R13
    00000C44 0009                   NOP
      15062020.c   579        locate(2,7);
    00000C46 E507                   MOV         #7,R5
    00000C48 4E0B                   JSR         @R14
    00000C4A E402                   MOV         #2,R4
      15062020.c   580        Print((unsigned char*)"2) Kaufermarkt");
    00000C4C D41B                   MOV.L       L1319+32,R4; L578
    00000C4E 4D0B                   JSR         @R13
    00000C50 0009                   NOP
      15062020.c   581        locate(2,8);
    00000C52 E508                   MOV         #8,R5
    00000C54 4E0B                   JSR         @R14
    00000C56 E402                   MOV         #2,R4
      15062020.c   582        Print((unsigned char*)"3) Gleichgew.spreis");
    00000C58 D419                   MOV.L       L1319+36,R4; L579
    00000C5A 4D0B                   JSR         @R13
    00000C5C 0009                   NOP
    00000C5E DA19                   MOV.L       L1319+40,R10; _GetKey
    00000C60 9B1C                   MOV.W       L1319,R11  ; H'7542
    00000C62 6CB3                   MOV         R11,R12
    00000C64 9D1B                   MOV.W       L1319+2,R13; H'7547
    00000C66 7CF0                   ADD         #-16,R12
    00000C68 DE17                   MOV.L       L1319+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   583        while (1) {
    00000C6A              L1198:                            
      15062020.c   584            unsigned int key;       
      15062020.c   585            GetKey(&key);
    00000C6A 4A0B                   JSR         @R10
    00000C6C 64F3                   MOV         R15,R4
      15062020.c   586            if(KEY_CTRL_EXIT == key) {
    00000C6E 62F2                   MOV.L       @R15,R2
    00000C70 32C0                   CMP/EQ      R12,R2
    00000C72 8B03                   BF          L1199
      15062020.c   587                Bdisp_AllClr_DDVRAM();
    00000C74 4E0B                   JSR         @R14
    00000C76 0009                   NOP
      15062020.c   588                lf1menu();
    00000C78 BB84                   BSR         _lf1menu
    00000C7A 0009                   NOP
    00000C7C              L1199:                            
      15062020.c   589            }
      15062020.c   590            if(KEY_CTRL_UP == key) {
    00000C7C 63F2                   MOV.L       @R15,R3
    00000C7E 33B0                   CMP/EQ      R11,R3
    00000C80 8B03                   BF          L1200
      15062020.c   591                Bdisp_AllClr_DDVRAM();
    00000C82 4E0B                   JSR         @R14
    00000C84 0009                   NOP
      15062020.c   592                lf1menuitem5();
    00000C86 BF4B                   BSR         _lf1menuitem5
    00000C88 0009                   NOP
    00000C8A              L1200:                            
      15062020.c   593            }
      15062020.c   594            if(KEY_CTRL_DOWN == key) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C8A 62F2                   MOV.L       @R15,R2
    00000C8C 32D0                   CMP/EQ      R13,R2
    00000C8E 8BEC                   BF          L1198
      15062020.c   595                Bdisp_AllClr_DDVRAM();
    00000C90 4E0B                   JSR         @R14
    00000C92 0009                   NOP
      15062020.c   596                lf1menuitem5_2();
    00000C94 B01A                   BSR         _lf1menuitem5_2
    00000C96 0009                   NOP
    00000C98 AFE7                   BRA         L1198
    00000C9A 0009                   NOP
    00000C9C              L1319:                            
    00000C9C 7542                   .DATA.W     H'7542
    00000C9E 7547                   .DATA.W     H'7547
    00000CA0 <00000000>             .DATA.L     _locate
    00000CA4 <00000000>             .DATA.L     _Print
    00000CA8 <00000000>             .DATA.L     L573
    00000CAC <00000000>             .DATA.L     L574
    00000CB0 <00000000>             .DATA.L     L575
    00000CB4 <00000000>             .DATA.L     L576
    00000CB8 <00000000>             .DATA.L     L577
    00000CBC <00000000>             .DATA.L     L578
    00000CC0 <00000000>             .DATA.L     L579
    00000CC4 <00000000>             .DATA.L     _GetKey
    00000CC8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   597            }
      15062020.c   598        } 
      15062020.c   599    }
      15062020.c   600    int lf1menuitem5_2(){
    00000CCC              _lf1menuitem5_2:                 ; function: lf1menuitem5_2
                                                           ; frame size=4
      15062020.c   601        locate(1,1);
    00000CCC DE22                   MOV.L       L1320+4,R14; _locate
    00000CCE E501                   MOV         #1,R5
    00000CD0 7FFC                   ADD         #-4,R15
    00000CD2 4E0B                   JSR         @R14
    00000CD4 6453                   MOV         R5,R4
      15062020.c   602        Print((unsigned char*)"Preisbildungs... 3/3");
    00000CD6 DD21                   MOV.L       L1320+8,R13; _Print
    00000CD8 D421                   MOV.L       L1320+12,R4; L587
    00000CDA 4D0B                   JSR         @R13
    00000CDC 0009                   NOP
      15062020.c   603        locate(2,2);
    00000CDE E502                   MOV         #2,R5
    00000CE0 4E0B                   JSR         @R14
    00000CE2 6453                   MOV         R5,R4
      15062020.c   604        Print((unsigned char*)"4) Verkaufermarkt");
    00000CE4 D41F                   MOV.L       L1320+16,R4; L588
    00000CE6 4D0B                   JSR         @R13
    00000CE8 0009                   NOP
      15062020.c   605        locate(2,3);
    00000CEA E503                   MOV         #3,R5
    00000CEC 4E0B                   JSR         @R14
    00000CEE E402                   MOV         #2,R4
      15062020.c   606        Print((unsigned char*)"5) Nachfragekurve");
    00000CF0 D41D                   MOV.L       L1320+20,R4; L589
    00000CF2 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CF4 0009                   NOP
      15062020.c   607        locate(1,5);
    00000CF6 E505                   MOV         #5,R5
    00000CF8 4E0B                   JSR         @R14
    00000CFA E401                   MOV         #1,R4
      15062020.c   608        Print((unsigned char*)"X = 50Eur, 350Stk.");
    00000CFC D41B                   MOV.L       L1320+24,R4; L590
    00000CFE 4D0B                   JSR         @R13
    00000D00 0009                   NOP
      15062020.c   609        locate(2,6);
    00000D02 E506                   MOV         #6,R5
    00000D04 4E0B                   JSR         @R14
    00000D06 E402                   MOV         #2,R4
      15062020.c   610        Print((unsigned char*)"Viel Umsatz=50Eur.");
    00000D08 D419                   MOV.L       L1320+28,R4; L591
    00000D0A 4D0B                   JSR         @R13
    00000D0C 0009                   NOP
      15062020.c   611        locate(2,7);
    00000D0E E507                   MOV         #7,R5
    00000D10 4E0B                   JSR         @R14
    00000D12 E402                   MOV         #2,R4
      15062020.c   612        Print((unsigned char*)"Viel Umsatz=350Stk.");
    00000D14 D417                   MOV.L       L1320+32,R4; L592
    00000D16 4D0B                   JSR         @R13
    00000D18 0009                   NOP
      15062020.c   613        locate(2,8);
    00000D1A E508                   MOV         #8,R5
    00000D1C 4E0B                   JSR         @R14
    00000D1E E402                   MOV         #2,R4
      15062020.c   614        Print((unsigned char*)"Umax=50E*350S=17,5k");
    00000D20 D415                   MOV.L       L1320+36,R4; L593
    00000D22 4D0B                   JSR         @R13
    00000D24 0009                   NOP
    00000D26 DB15                   MOV.L       L1320+40,R11; _GetKey
    00000D28 9C14                   MOV.W       L1320,R12  ; H'7532
    00000D2A 6DC3                   MOV         R12,R13
    00000D2C DE14                   MOV.L       L1320+44,R14; _Bdisp_AllClr_DDVRAM
    00000D2E 7D10                   ADD         #16,R13
      15062020.c   615        while (1) {
    00000D30              L1203:                            
      15062020.c   616            unsigned int key;       
      15062020.c   617            GetKey(&key);
    00000D30 4B0B                   JSR         @R11
    00000D32 64F3                   MOV         R15,R4
      15062020.c   618            if(KEY_CTRL_EXIT == key) {
    00000D34 62F2                   MOV.L       @R15,R2
    00000D36 32C0                   CMP/EQ      R12,R2
    00000D38 8B03                   BF          L1204
      15062020.c   619                Bdisp_AllClr_DDVRAM();
    00000D3A 4E0B                   JSR         @R14
    00000D3C 0009                   NOP
      15062020.c   620                lf1menu();
    00000D3E BB21                   BSR         _lf1menu
    00000D40 0009                   NOP
    00000D42              L1204:                            
      15062020.c   621            }
      15062020.c   622            if(KEY_CTRL_UP == key) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D42 63F2                   MOV.L       @R15,R3
    00000D44 33D0                   CMP/EQ      R13,R3
    00000D46 8BF3                   BF          L1203
      15062020.c   623                Bdisp_AllClr_DDVRAM();
    00000D48 4E0B                   JSR         @R14
    00000D4A 0009                   NOP
      15062020.c   624                lf1menuitem5_1();
    00000D4C BF5A                   BSR         _lf1menuitem5_1
    00000D4E 0009                   NOP
    00000D50 AFEE                   BRA         L1203
    00000D52 0009                   NOP
    00000D54              L1320:                            
    00000D54 7532                   .DATA.W     H'7532
    00000D56 0000                   .DATA.W     0
    00000D58 <00000000>             .DATA.L     _locate
    00000D5C <00000000>             .DATA.L     _Print
    00000D60 <00000000>             .DATA.L     L587
    00000D64 <00000000>             .DATA.L     L588
    00000D68 <00000000>             .DATA.L     L589
    00000D6C <00000000>             .DATA.L     L590
    00000D70 <00000000>             .DATA.L     L591
    00000D74 <00000000>             .DATA.L     L592
    00000D78 <00000000>             .DATA.L     L593
    00000D7C <00000000>             .DATA.L     _GetKey
    00000D80 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   625            }
      15062020.c   626        } 
      15062020.c   627    }
      15062020.c   628    
      15062020.c   629    //Lernfeld 2
      15062020.c   630    int lf2menu() {
    00000D84              _lf2menu:                        ; function: lf2menu
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
      15062020.c   631        unsigned int i;
      15062020.c   632        unsigned int auswahl = 3;
      15062020.c   633        unsigned int menuItemsX = 2;
      15062020.c   634        unsigned int menuItemsY = 3;
      15062020.c   635        unsigned int menuItemsNbr = 4;
      15062020.c   636        unsigned char * menuItems[] = {
      15062020.c   637            "Organisation",
      15062020.c   638            "Regelkreis",
      15062020.c   639            "Organigramm",
      15062020.c   640            "ERP / SAP Systeme"
      15062020.c   641        };
    00000D84 D240                   MOV.L       L1321+8,R2 ; L605
    00000D86 7FE8                   ADD         #-24,R15
    00000D88 EE03                   MOV         #3,R14
    00000D8A E304                   MOV         #4,R3
    00000D8C 1F31                   MOV.L       R3,@(4,R15)
    00000D8E 61F3                   MOV         R15,R1
    00000D90 D33E                   MOV.L       L1321+12,R3; __quick_evn_mvn
    00000D92 7108                   ADD         #8,R1
    00000D94 430B                   JSR         @R3
    00000D96 E010                   MOV         #16,R0
      15062020.c   642        Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D98 DB3D                   MOV.L       L1321+16,R11; _Bdisp_AllClr_DDVRAM
    00000D9A 4B0B                   JSR         @R11
    00000D9C 0009                   NOP
      15062020.c   643        // TITLE 
      15062020.c   644        locate(1,1);
    00000D9E E501                   MOV         #1,R5
    00000DA0 DD3C                   MOV.L       L1321+20,R13; _locate
    00000DA2 4D0B                   JSR         @R13
    00000DA4 6453                   MOV         R5,R4
      15062020.c   645        Print((unsigned char*)"Lernfeld 2");  
    00000DA6 DC3C                   MOV.L       L1321+24,R12; _Print
    00000DA8 D43C                   MOV.L       L1321+28,R4; L354
    00000DAA 4C0B                   JSR         @R12
    00000DAC 0009                   NOP
      15062020.c   646        // Menu Items
      15062020.c   647        for(i=0; i < menuItemsNbr; i=i+1){
    00000DAE EA00                   MOV         #0,R10
    00000DB0 69F3                   MOV         R15,R9
    00000DB2 7908                   ADD         #8,R9
    00000DB4 E803                   MOV         #3,R8
    00000DB6              L1207:                            
      15062020.c   648            locate(menuItemsX, menuItemsY+i);
    00000DB6 6583                   MOV         R8,R5
    00000DB8 4D0B                   JSR         @R13
    00000DBA E402                   MOV         #2,R4
      15062020.c   649            Print(menuItems[i]);
    00000DBC 4C0B                   JSR         @R12
    00000DBE 6496                   MOV.L       @R9+,R4
    00000DC0 52F1                   MOV.L       @(4,R15),R2
    00000DC2 7A01                   ADD         #1,R10
    00000DC4 3A22                   CMP/HS      R2,R10
    00000DC6 8FF6                   BF/S        L1207
    00000DC8 7801                   ADD         #1,R8
    00000DCA 9859                   MOV.W       L1321,R8   ; H'7542
    00000DCC DA34                   MOV.L       L1321+32,R10; L366
    00000DCE 6983                   MOV         R8,R9
    00000DD0 7905                   ADD         #5,R9
      15062020.c   650        };
      15062020.c   651       
      15062020.c   652        // Cursor    
      15062020.c   653        while (1){
    00000DD2              L1209:                            
      15062020.c   654            unsigned int key;
      15062020.c   655            locate(1,auswahl);
    00000DD2 65E3                   MOV         R14,R5
    00000DD4 4D0B                   JSR         @R13
    00000DD6 E401                   MOV         #1,R4
      15062020.c   656            Print((unsigned char*)">");       
    00000DD8 D432                   MOV.L       L1321+36,R4; L363
    00000DDA 4C0B                   JSR         @R12
    00000DDC 0009                   NOP
      15062020.c   657            GetKey(&key);
    00000DDE D332                   MOV.L       L1321+40,R3; _GetKey
    00000DE0 430B                   JSR         @R3
    00000DE2 64F3                   MOV         R15,R4
      15062020.c   658            if(KEY_CTRL_UP == key) {
    00000DE4 62F2                   MOV.L       @R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE6 3280                   CMP/EQ      R8,R2
    00000DE8 8B0E                   BF          L1210
      15062020.c   659                if (auswahl == 3) {
    00000DEA 60E3                   MOV         R14,R0
    00000DEC 8803                   CMP/EQ      #3,R0
    00000DEE 8B05                   BF          L1211
      15062020.c   660                    locate(1,auswahl);
    00000DF0 65E3                   MOV         R14,R5
    00000DF2 4D0B                   JSR         @R13
    00000DF4 E401                   MOV         #1,R4
      15062020.c   661                    Print((unsigned char*)" ");
    00000DF6 4C0B                   JSR         @R12
    00000DF8 64A3                   MOV         R10,R4
      15062020.c   662                    auswahl = auswahl + 4;
    00000DFA 7E04                   ADD         #4,R14
    00000DFC              L1211:                            
      15062020.c   663                }
      15062020.c   664                locate(1,auswahl);
    00000DFC 65E3                   MOV         R14,R5
    00000DFE 4D0B                   JSR         @R13
    00000E00 E401                   MOV         #1,R4
      15062020.c   665                Print((unsigned char*)" ");
    00000E02 4C0B                   JSR         @R12
    00000E04 64A3                   MOV         R10,R4
      15062020.c   666                auswahl = auswahl - 1;
    00000E06 7EFF                   ADD         #-1,R14
    00000E08              L1210:                            
      15062020.c   667            };
      15062020.c   668            if(KEY_CTRL_DOWN == key) {
    00000E08 63F2                   MOV.L       @R15,R3
    00000E0A 3390                   CMP/EQ      R9,R3
    00000E0C 8B0E                   BF          L1212
      15062020.c   669                if (auswahl == 6) {
    00000E0E 60E3                   MOV         R14,R0
    00000E10 8806                   CMP/EQ      #6,R0
    00000E12 8B05                   BF          L1213
      15062020.c   670                    locate(1,auswahl);
    00000E14 65E3                   MOV         R14,R5
    00000E16 4D0B                   JSR         @R13
    00000E18 E401                   MOV         #1,R4
      15062020.c   671                    Print((unsigned char*)" ");
    00000E1A 4C0B                   JSR         @R12
    00000E1C 64A3                   MOV         R10,R4
      15062020.c   672                    auswahl = auswahl - 4;
    00000E1E 7EFC                   ADD         #-4,R14
    00000E20              L1213:                            
      15062020.c   673                }
      15062020.c   674                locate(1,auswahl);
    00000E20 65E3                   MOV         R14,R5
    00000E22 4D0B                   JSR         @R13
    00000E24 E401                   MOV         #1,R4
      15062020.c   675                Print((unsigned char*)" ");
    00000E26 4C0B                   JSR         @R12
    00000E28 64A3                   MOV         R10,R4
      15062020.c   676                auswahl = auswahl + 1;
    00000E2A 7E01                   ADD         #1,R14
    00000E2C              L1212:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   677            };
      15062020.c   678            if (KEY_CTRL_EXE == key) {
    00000E2C 9229                   MOV.W       L1321+2,R2 ; H'7534
    00000E2E 63F2                   MOV.L       @R15,R3
    00000E30 3320                   CMP/EQ      R2,R3
    00000E32 8B1B                   BF          L1214
      15062020.c   679                if (auswahl == 3) {
    00000E34 60E3                   MOV         R14,R0
    00000E36 8803                   CMP/EQ      #3,R0
    00000E38 8B03                   BF          L1215
      15062020.c   680                    Bdisp_AllClr_DDVRAM();
    00000E3A 4B0B                   JSR         @R11
    00000E3C 0009                   NOP
      15062020.c   681                    lf2menuitem1();
    00000E3E B035                   BSR         _lf2menuitem1
    00000E40 0009                   NOP
    00000E42              L1215:                            
      15062020.c   682                }
      15062020.c   683                if (auswahl == 4) {
    00000E42 60E3                   MOV         R14,R0
    00000E44 8804                   CMP/EQ      #4,R0
    00000E46 8B03                   BF          L1216
      15062020.c   684                    Bdisp_AllClr_DDVRAM();
    00000E48 4B0B                   JSR         @R11
    00000E4A 0009                   NOP
      15062020.c   685                    lf2menuitem2();
    00000E4C B19C                   BSR         _lf2menuitem2
    00000E4E 0009                   NOP
    00000E50              L1216:                            
      15062020.c   686                }
      15062020.c   687                if (auswahl == 5) {
    00000E50 60E3                   MOV         R14,R0
    00000E52 8805                   CMP/EQ      #5,R0
    00000E54 8B03                   BF          L1217
      15062020.c   688                    Bdisp_AllClr_DDVRAM();
    00000E56 4B0B                   JSR         @R11
    00000E58 0009                   NOP
      15062020.c   689                    lf2menuitem3();
    00000E5A B1F7                   BSR         _lf2menuitem3
    00000E5C 0009                   NOP
    00000E5E              L1217:                            
      15062020.c   690                }
      15062020.c   691                if (auswahl == 6) {
    00000E5E 60E3                   MOV         R14,R0
    00000E60 8806                   CMP/EQ      #6,R0
    00000E62 8B03                   BF          L1214
      15062020.c   692                    Bdisp_AllClr_DDVRAM();
    00000E64 4B0B                   JSR         @R11
    00000E66 0009                   NOP
      15062020.c   693                    lf2menuitem4();
    00000E68 B22B                   BSR         _lf2menuitem4
    00000E6A 0009                   NOP
    00000E6C              L1214:                            
      15062020.c   694                }
      15062020.c   695            };
      15062020.c   696            if (KEY_CTRL_EXIT == key) {
    00000E6C 930A                   MOV.W       L1321+4,R3 ; H'7532




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E6E 62F2                   MOV.L       @R15,R2
    00000E70 3230                   CMP/EQ      R3,R2
    00000E72 8BAE                   BF          L1209
      15062020.c   697                Bdisp_AllClr_DDVRAM();
    00000E74 4B0B                   JSR         @R11
    00000E76 0009                   NOP
      15062020.c   698                firstMenu();
    00000E78 B8D6                   BSR         _firstMenu
    00000E7A 0009                   NOP
    00000E7C AFA9                   BRA         L1209
    00000E7E 0009                   NOP
    00000E80              L1321:                            
    00000E80 7542                   .DATA.W     H'7542
    00000E82 7534                   .DATA.W     H'7534
    00000E84 7532                   .DATA.W     H'7532
    00000E86 0000                   .DATA.W     0
    00000E88 <00000000>             .DATA.L     L605
    00000E8C <00000000>             .DATA.L     __quick_evn_mvn
    00000E90 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000E94 <00000000>             .DATA.L     _locate
    00000E98 <00000000>             .DATA.L     _Print
    00000E9C <00000000>             .DATA.L     L354
    00000EA0 <00000000>             .DATA.L     L366
    00000EA4 <00000000>             .DATA.L     L363
    00000EA8 <00000000>             .DATA.L     _GetKey
      15062020.c   699            }
      15062020.c   700       }
      15062020.c   701    }
      15062020.c   702    int lf2menuitem1(){   
    00000EAC              _lf2menuitem1:                   ; function: lf2menuitem1
                                                           ; frame size=4
      15062020.c   703        locate(1,1);
    00000EAC DE22                   MOV.L       L1322+4,R14; _locate
    00000EAE E501                   MOV         #1,R5
    00000EB0 7FFC                   ADD         #-4,R15
    00000EB2 4E0B                   JSR         @R14
    00000EB4 6453                   MOV         R5,R4
      15062020.c   704        Print((unsigned char*)"Organisation 1/4");
    00000EB6 DD21                   MOV.L       L1322+8,R13; _Print
    00000EB8 D421                   MOV.L       L1322+12,R4; L628
    00000EBA 4D0B                   JSR         @R13
    00000EBC 0009                   NOP
      15062020.c   705        locate(1,2);
    00000EBE E502                   MOV         #2,R5
    00000EC0 4E0B                   JSR         @R14
    00000EC2 E401                   MOV         #1,R4
      15062020.c   706        Print((unsigned char*)"-Zweckmassigkeit");
    00000EC4 D41F                   MOV.L       L1322+16,R4; L629
    00000EC6 4D0B                   JSR         @R13
    00000EC8 0009                   NOP
      15062020.c   707        locate(2,3);
    00000ECA E503                   MOV         #3,R5
    00000ECC 4E0B                   JSR         @R14
    00000ECE E402                   MOV         #2,R4
      15062020.c   708        Print((unsigned char*)"Aufgab./Tatigkeiten");
    00000ED0 D41D                   MOV.L       L1322+20,R4; L630
    00000ED2 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ED4 0009                   NOP
      15062020.c   709        locate(2,4);
    00000ED6 E504                   MOV         #4,R5
    00000ED8 4E0B                   JSR         @R14
    00000EDA E402                   MOV         #2,R4
      15062020.c   710        Print((unsigned char*)"sollten dem");
    00000EDC D41B                   MOV.L       L1322+24,R4; L631
    00000EDE 4D0B                   JSR         @R13
    00000EE0 0009                   NOP
      15062020.c   711        locate(2,5);
    00000EE2 E505                   MOV         #5,R5
    00000EE4 4E0B                   JSR         @R14
    00000EE6 E402                   MOV         #2,R4
      15062020.c   712        Print((unsigned char*)"Unternehmensziel");
    00000EE8 D419                   MOV.L       L1322+28,R4; L632
    00000EEA 4D0B                   JSR         @R13
    00000EEC 0009                   NOP
      15062020.c   713        locate(2,6);
    00000EEE E506                   MOV         #6,R5
    00000EF0 4E0B                   JSR         @R14
    00000EF2 E402                   MOV         #2,R4
      15062020.c   714        Print((unsigned char*)"entsprechen alles");
    00000EF4 D417                   MOV.L       L1322+32,R4; L633
    00000EF6 4D0B                   JSR         @R13
    00000EF8 0009                   NOP
      15062020.c   715        locate(2,7);
    00000EFA E507                   MOV         #7,R5
    00000EFC 4E0B                   JSR         @R14
    00000EFE E402                   MOV         #2,R4
      15062020.c   716        Print((unsigned char*)"andere ist unzweck.");
    00000F00 D415                   MOV.L       L1322+36,R4; L634
    00000F02 4D0B                   JSR         @R13
    00000F04 0009                   NOP
    00000F06 DB15                   MOV.L       L1322+40,R11; _GetKey
    00000F08 9C14                   MOV.W       L1322,R12  ; H'7532
    00000F0A 6DC3                   MOV         R12,R13
    00000F0C DE14                   MOV.L       L1322+44,R14; _Bdisp_AllClr_DDVRAM
    00000F0E 7D15                   ADD         #21,R13
      15062020.c   717        while (1){
    00000F10              L1221:                            
      15062020.c   718            unsigned int key;       
      15062020.c   719            GetKey(&key);
    00000F10 4B0B                   JSR         @R11
    00000F12 64F3                   MOV         R15,R4
      15062020.c   720            if(KEY_CTRL_EXIT == key) {
    00000F14 62F2                   MOV.L       @R15,R2
    00000F16 32C0                   CMP/EQ      R12,R2
    00000F18 8B03                   BF          L1222
      15062020.c   721                Bdisp_AllClr_DDVRAM();
    00000F1A 4E0B                   JSR         @R14
    00000F1C 0009                   NOP
      15062020.c   722                lf2menu();
    00000F1E BF31                   BSR         _lf2menu
    00000F20 0009                   NOP
    00000F22              L1222:                            
      15062020.c   723            }
      15062020.c   724            if(KEY_CTRL_DOWN == key) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F22 63F2                   MOV.L       @R15,R3
    00000F24 33D0                   CMP/EQ      R13,R3
    00000F26 8BF3                   BF          L1221
      15062020.c   725                Bdisp_AllClr_DDVRAM();
    00000F28 4E0B                   JSR         @R14
    00000F2A 0009                   NOP
      15062020.c   726                lf2menuitem1_1();
    00000F2C B01A                   BSR         _lf2menuitem1_1
    00000F2E 0009                   NOP
    00000F30 AFEE                   BRA         L1221
    00000F32 0009                   NOP
    00000F34              L1322:                            
    00000F34 7532                   .DATA.W     H'7532
    00000F36 0000                   .DATA.W     0
    00000F38 <00000000>             .DATA.L     _locate
    00000F3C <00000000>             .DATA.L     _Print
    00000F40 <00000000>             .DATA.L     L628
    00000F44 <00000000>             .DATA.L     L629
    00000F48 <00000000>             .DATA.L     L630
    00000F4C <00000000>             .DATA.L     L631
    00000F50 <00000000>             .DATA.L     L632
    00000F54 <00000000>             .DATA.L     L633
    00000F58 <00000000>             .DATA.L     L634
    00000F5C <00000000>             .DATA.L     _GetKey
    00000F60 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   727            }
      15062020.c   728        } 
      15062020.c   729    }
      15062020.c   730    int lf2menuitem1_1(){   
    00000F64              _lf2menuitem1_1:                 ; function: lf2menuitem1_1
                                                           ; frame size=4
      15062020.c   731        locate(1,1);
    00000F64 DE26                   MOV.L       L1323+4,R14; _locate
    00000F66 E501                   MOV         #1,R5
    00000F68 7FFC                   ADD         #-4,R15
    00000F6A 4E0B                   JSR         @R14
    00000F6C 6453                   MOV         R5,R4
      15062020.c   732        Print((unsigned char*)"Organisation 2/4");
    00000F6E DD25                   MOV.L       L1323+8,R13; _Print
    00000F70 D425                   MOV.L       L1323+12,R4; L641
    00000F72 4D0B                   JSR         @R13
    00000F74 0009                   NOP
      15062020.c   733        locate(1,2);
    00000F76 E502                   MOV         #2,R5
    00000F78 4E0B                   JSR         @R14
    00000F7A E401                   MOV         #1,R4
      15062020.c   734        Print((unsigned char*)"-Wirtschaftlichkeit");
    00000F7C D423                   MOV.L       L1323+16,R4; L642
    00000F7E 4D0B                   JSR         @R13
    00000F80 0009                   NOP
      15062020.c   735        locate(2,3);
    00000F82 E503                   MOV         #3,R5
    00000F84 4E0B                   JSR         @R14
    00000F86 E402                   MOV         #2,R4
      15062020.c   736        Print((unsigned char*)"T, A, Regelungen");
    00000F88 D421                   MOV.L       L1323+20,R4; L643
    00000F8A 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F8C 0009                   NOP
      15062020.c   737        locate(2,4);
    00000F8E E504                   MOV         #4,R5
    00000F90 4E0B                   JSR         @R14
    00000F92 E402                   MOV         #2,R4
      15062020.c   738        Print((unsigned char*)"sollten dem oko-");
    00000F94 D41F                   MOV.L       L1323+24,R4; L644
    00000F96 4D0B                   JSR         @R13
    00000F98 0009                   NOP
      15062020.c   739        locate(2,5);
    00000F9A E505                   MOV         #5,R5
    00000F9C 4E0B                   JSR         @R14
    00000F9E E402                   MOV         #2,R4
      15062020.c   740        Print((unsigned char*)"logischem Prinzip");
    00000FA0 D41D                   MOV.L       L1323+28,R4; L645
    00000FA2 4D0B                   JSR         @R13
    00000FA4 0009                   NOP
      15062020.c   741        locate(2,6);
    00000FA6 E506                   MOV         #6,R5
    00000FA8 4E0B                   JSR         @R14
    00000FAA E402                   MOV         #2,R4
      15062020.c   742        Print((unsigned char*)"entsprechen. Bsp.:");
    00000FAC D41B                   MOV.L       L1323+32,R4; L646
    00000FAE 4D0B                   JSR         @R13
    00000FB0 0009                   NOP
      15062020.c   743        locate(2,7);
    00000FB2 E507                   MOV         #7,R5
    00000FB4 4E0B                   JSR         @R14
    00000FB6 E402                   MOV         #2,R4
      15062020.c   744        Print((unsigned char*)"Min. Max. Prinzip");
    00000FB8 D419                   MOV.L       L1323+36,R4; L647
    00000FBA 4D0B                   JSR         @R13
    00000FBC 0009                   NOP
    00000FBE DA19                   MOV.L       L1323+40,R10; _GetKey
    00000FC0 9B1C                   MOV.W       L1323,R11  ; H'7542
    00000FC2 6CB3                   MOV         R11,R12
    00000FC4 9D1B                   MOV.W       L1323+2,R13; H'7547
    00000FC6 7CF0                   ADD         #-16,R12
    00000FC8 DE17                   MOV.L       L1323+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   745        while (1){
    00000FCA              L1225:                            
      15062020.c   746            unsigned int key;       
      15062020.c   747            GetKey(&key);
    00000FCA 4A0B                   JSR         @R10
    00000FCC 64F3                   MOV         R15,R4
      15062020.c   748            if(KEY_CTRL_EXIT == key) {
    00000FCE 62F2                   MOV.L       @R15,R2
    00000FD0 32C0                   CMP/EQ      R12,R2
    00000FD2 8B03                   BF          L1226
      15062020.c   749                Bdisp_AllClr_DDVRAM();
    00000FD4 4E0B                   JSR         @R14
    00000FD6 0009                   NOP
      15062020.c   750                lf2menu();
    00000FD8 BED4                   BSR         _lf2menu
    00000FDA 0009                   NOP
    00000FDC              L1226:                            
      15062020.c   751            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   752            if(KEY_CTRL_UP == key) {
    00000FDC 63F2                   MOV.L       @R15,R3
    00000FDE 33B0                   CMP/EQ      R11,R3
    00000FE0 8B03                   BF          L1227
      15062020.c   753                Bdisp_AllClr_DDVRAM();
    00000FE2 4E0B                   JSR         @R14
    00000FE4 0009                   NOP
      15062020.c   754                lf2menuitem1();
    00000FE6 BF61                   BSR         _lf2menuitem1
    00000FE8 0009                   NOP
    00000FEA              L1227:                            
      15062020.c   755            }
      15062020.c   756            if(KEY_CTRL_DOWN == key) {
    00000FEA 62F2                   MOV.L       @R15,R2
    00000FEC 32D0                   CMP/EQ      R13,R2
    00000FEE 8BEC                   BF          L1225
      15062020.c   757                Bdisp_AllClr_DDVRAM();
    00000FF0 4E0B                   JSR         @R14
    00000FF2 0009                   NOP
      15062020.c   758                lf2menuitem1_2();
    00000FF4 B01A                   BSR         _lf2menuitem1_2
    00000FF6 0009                   NOP
    00000FF8 AFE7                   BRA         L1225
    00000FFA 0009                   NOP
    00000FFC              L1323:                            
    00000FFC 7542                   .DATA.W     H'7542
    00000FFE 7547                   .DATA.W     H'7547
    00001000 <00000000>             .DATA.L     _locate
    00001004 <00000000>             .DATA.L     _Print
    00001008 <00000000>             .DATA.L     L641
    0000100C <00000000>             .DATA.L     L642
    00001010 <00000000>             .DATA.L     L643
    00001014 <00000000>             .DATA.L     L644
    00001018 <00000000>             .DATA.L     L645
    0000101C <00000000>             .DATA.L     L646
    00001020 <00000000>             .DATA.L     L647
    00001024 <00000000>             .DATA.L     _GetKey
    00001028 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   759            }
      15062020.c   760        } 
      15062020.c   761    }
      15062020.c   762    int lf2menuitem1_2(){   
    0000102C              _lf2menuitem1_2:                 ; function: lf2menuitem1_2
                                                           ; frame size=4
      15062020.c   763        locate(1,1);
    0000102C DE26                   MOV.L       L1324+4,R14; _locate
    0000102E E501                   MOV         #1,R5
    00001030 7FFC                   ADD         #-4,R15
    00001032 4E0B                   JSR         @R14
    00001034 6453                   MOV         R5,R4
      15062020.c   764        Print((unsigned char*)"Organisation 3/4");
    00001036 DD25                   MOV.L       L1324+8,R13; _Print
    00001038 D425                   MOV.L       L1324+12,R4; L655
    0000103A 4D0B                   JSR         @R13
    0000103C 0009                   NOP
      15062020.c   765        locate(1,2);
    0000103E E502                   MOV         #2,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001040 4E0B                   JSR         @R14
    00001042 E401                   MOV         #1,R4
      15062020.c   766        Print((unsigned char*)"-Klarheit");
    00001044 D423                   MOV.L       L1324+16,R4; L656
    00001046 4D0B                   JSR         @R13
    00001048 0009                   NOP
      15062020.c   767        locate(2,3);
    0000104A E503                   MOV         #3,R5
    0000104C 4E0B                   JSR         @R14
    0000104E E402                   MOV         #2,R4
      15062020.c   768        Print((unsigned char*)"T, A, Regelungen");
    00001050 D421                   MOV.L       L1324+20,R4; L643
    00001052 4D0B                   JSR         @R13
    00001054 0009                   NOP
      15062020.c   769        locate(2,4);
    00001056 E504                   MOV         #4,R5
    00001058 4E0B                   JSR         @R14
    0000105A E402                   MOV         #2,R4
      15062020.c   770        Print((unsigned char*)"sollten klar");
    0000105C D41F                   MOV.L       L1324+24,R4; L657
    0000105E 4D0B                   JSR         @R13
    00001060 0009                   NOP
      15062020.c   771        locate(2,5);
    00001062 E505                   MOV         #5,R5
    00001064 4E0B                   JSR         @R14
    00001066 E402                   MOV         #2,R4
      15062020.c   772        Print((unsigned char*)"definiert sein,");
    00001068 D41D                   MOV.L       L1324+28,R4; L658
    0000106A 4D0B                   JSR         @R13
    0000106C 0009                   NOP
      15062020.c   773        locate(2,6);
    0000106E E506                   MOV         #6,R5
    00001070 4E0B                   JSR         @R14
    00001072 E402                   MOV         #2,R4
      15062020.c   774        Print((unsigned char*)"damit jeder es");
    00001074 D41B                   MOV.L       L1324+32,R4; L659
    00001076 4D0B                   JSR         @R13
    00001078 0009                   NOP
      15062020.c   775        locate(2,7);
    0000107A E507                   MOV         #7,R5
    0000107C 4E0B                   JSR         @R14
    0000107E E402                   MOV         #2,R4
      15062020.c   776        Print((unsigned char*)"versteht.");
    00001080 D419                   MOV.L       L1324+36,R4; L660
    00001082 4D0B                   JSR         @R13
    00001084 0009                   NOP
    00001086 DA19                   MOV.L       L1324+40,R10; _GetKey
    00001088 9B1C                   MOV.W       L1324,R11  ; H'7542
    0000108A 6CB3                   MOV         R11,R12
    0000108C 9D1B                   MOV.W       L1324+2,R13; H'7547
    0000108E 7CF0                   ADD         #-16,R12
    00001090 DE17                   MOV.L       L1324+44,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   777        while (1){
    00001092              L1230:                            
      15062020.c   778            unsigned int key;       
      15062020.c   779            GetKey(&key);
    00001092 4A0B                   JSR         @R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001094 64F3                   MOV         R15,R4
      15062020.c   780            if(KEY_CTRL_EXIT == key) {
    00001096 62F2                   MOV.L       @R15,R2
    00001098 32C0                   CMP/EQ      R12,R2
    0000109A 8B03                   BF          L1231
      15062020.c   781                Bdisp_AllClr_DDVRAM();
    0000109C 4E0B                   JSR         @R14
    0000109E 0009                   NOP
      15062020.c   782                lf2menu();
    000010A0 BE70                   BSR         _lf2menu
    000010A2 0009                   NOP
    000010A4              L1231:                            
      15062020.c   783            }
      15062020.c   784            if(KEY_CTRL_UP == key) {
    000010A4 63F2                   MOV.L       @R15,R3
    000010A6 33B0                   CMP/EQ      R11,R3
    000010A8 8B03                   BF          L1232
      15062020.c   785                Bdisp_AllClr_DDVRAM();
    000010AA 4E0B                   JSR         @R14
    000010AC 0009                   NOP
      15062020.c   786                lf2menuitem1_1();
    000010AE BF59                   BSR         _lf2menuitem1_1
    000010B0 0009                   NOP
    000010B2              L1232:                            
      15062020.c   787            }
      15062020.c   788            if(KEY_CTRL_DOWN == key) {
    000010B2 62F2                   MOV.L       @R15,R2
    000010B4 32D0                   CMP/EQ      R13,R2
    000010B6 8BEC                   BF          L1230
      15062020.c   789                Bdisp_AllClr_DDVRAM();
    000010B8 4E0B                   JSR         @R14
    000010BA 0009                   NOP
      15062020.c   790                lf2menuitem1_3();
    000010BC B01A                   BSR         _lf2menuitem1_3
    000010BE 0009                   NOP
    000010C0 AFE7                   BRA         L1230
    000010C2 0009                   NOP
    000010C4              L1324:                            
    000010C4 7542                   .DATA.W     H'7542
    000010C6 7547                   .DATA.W     H'7547
    000010C8 <00000000>             .DATA.L     _locate
    000010CC <00000000>             .DATA.L     _Print
    000010D0 <00000000>             .DATA.L     L655
    000010D4 <00000000>             .DATA.L     L656
    000010D8 <00000000>             .DATA.L     L643
    000010DC <00000000>             .DATA.L     L657
    000010E0 <00000000>             .DATA.L     L658
    000010E4 <00000000>             .DATA.L     L659
    000010E8 <00000000>             .DATA.L     L660
    000010EC <00000000>             .DATA.L     _GetKey
    000010F0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   791            }
      15062020.c   792        } 
      15062020.c   793    }
      15062020.c   794    int lf2menuitem1_3(){   
    000010F4              _lf2menuitem1_3:                 ; function: lf2menuitem1_3
                                                           ; frame size=4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   795        locate(1,1);
    000010F4 DE42                   MOV.L       L1325+2,R14; _locate
    000010F6 E501                   MOV         #1,R5
    000010F8 7FFC                   ADD         #-4,R15
    000010FA 4E0B                   JSR         @R14
    000010FC 6453                   MOV         R5,R4
      15062020.c   796        Print((unsigned char*)"Organisation 4/4");
    000010FE DD41                   MOV.L       L1325+6,R13; _Print
    00001100 D441                   MOV.L       L1325+10,R4; L668
    00001102 4D0B                   JSR         @R13
    00001104 0009                   NOP
      15062020.c   797        locate(1,2);
    00001106 E502                   MOV         #2,R5
    00001108 4E0B                   JSR         @R14
    0000110A E401                   MOV         #1,R4
      15062020.c   798        Print((unsigned char*)"-Gleichgewicht");
    0000110C D43F                   MOV.L       L1325+14,R4; L669
    0000110E 4D0B                   JSR         @R13
    00001110 0009                   NOP
      15062020.c   799        locate(2,3);
    00001112 E503                   MOV         #3,R5
    00001114 4E0B                   JSR         @R14
    00001116 E402                   MOV         #2,R4
      15062020.c   800        Print((unsigned char*)"Dauerregel (Organ-");
    00001118 D43D                   MOV.L       L1325+18,R4; L670
    0000111A 4D0B                   JSR         @R13
    0000111C 0009                   NOP
      15062020.c   801        locate(2,4);
    0000111E E504                   MOV         #4,R5
    00001120 4E0B                   JSR         @R14
    00001122 E402                   MOV         #2,R4
      15062020.c   802        Print((unsigned char*)"isation), Einzel (");
    00001124 D43B                   MOV.L       L1325+22,R4; L671
    00001126 4D0B                   JSR         @R13
    00001128 0009                   NOP
      15062020.c   803        locate(2,5);
    0000112A E505                   MOV         #5,R5
    0000112C 4E0B                   JSR         @R14
    0000112E E402                   MOV         #2,R4
      15062020.c   804        Print((unsigned char*)"Disposition) u. ");
    00001130 D439                   MOV.L       L1325+26,R4; L672
    00001132 4D0B                   JSR         @R13
    00001134 0009                   NOP
      15062020.c   805        locate(2,6);
    00001136 E506                   MOV         #6,R5
    00001138 4E0B                   JSR         @R14
    0000113A E402                   MOV         #2,R4
      15062020.c   806        Print((unsigned char*)"Improvisation.");
    0000113C D437                   MOV.L       L1325+30,R4; L673
    0000113E 4D0B                   JSR         @R13
    00001140 0009                   NOP
      15062020.c   807        locate(2,7);
    00001142 E507                   MOV         #7,R5
    00001144 4E0B                   JSR         @R14
    00001146 E402                   MOV         #2,R4
      15062020.c   808        Print((unsigned char*)"unter/ueber-");
    00001148 D435                   MOV.L       L1325+34,R4; L674




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000114A 4D0B                   JSR         @R13
    0000114C 0009                   NOP
      15062020.c   809        locate(2,8);
    0000114E E508                   MOV         #8,R5
    00001150 4E0B                   JSR         @R14
    00001152 E402                   MOV         #2,R4
      15062020.c   810        Print((unsigned char*)"organisation");
    00001154 D433                   MOV.L       L1325+38,R4; L675
    00001156 4D0B                   JSR         @R13
    00001158 0009                   NOP
    0000115A DB33                   MOV.L       L1325+42,R11; _GetKey
    0000115C 9C4F                   MOV.W       L1325,R12  ; H'7532
    0000115E 6DC3                   MOV         R12,R13
    00001160 DE32                   MOV.L       L1325+46,R14; _Bdisp_AllClr_DDVRAM
    00001162 7D10                   ADD         #16,R13
      15062020.c   811        while (1){
    00001164              L1235:                            
      15062020.c   812            unsigned int key;       
      15062020.c   813            GetKey(&key);
    00001164 4B0B                   JSR         @R11
    00001166 64F3                   MOV         R15,R4
      15062020.c   814            if(KEY_CTRL_EXIT == key) {
    00001168 62F2                   MOV.L       @R15,R2
    0000116A 32C0                   CMP/EQ      R12,R2
    0000116C 8B03                   BF          L1236
      15062020.c   815                Bdisp_AllClr_DDVRAM();
    0000116E 4E0B                   JSR         @R14
    00001170 0009                   NOP
      15062020.c   816                lf2menu();
    00001172 BE07                   BSR         _lf2menu
    00001174 0009                   NOP
    00001176              L1236:                            
      15062020.c   817            }
      15062020.c   818            if(KEY_CTRL_UP == key) {
    00001176 63F2                   MOV.L       @R15,R3
    00001178 33D0                   CMP/EQ      R13,R3
    0000117A 8BF3                   BF          L1235
      15062020.c   819                Bdisp_AllClr_DDVRAM();
    0000117C 4E0B                   JSR         @R14
    0000117E 0009                   NOP
      15062020.c   820                lf2menuitem1_2();
    00001180 BF54                   BSR         _lf2menuitem1_2
    00001182 0009                   NOP
    00001184 AFEE                   BRA         L1235
    00001186 0009                   NOP
      15062020.c   821            }
      15062020.c   822        } 
      15062020.c   823    }
      15062020.c   824    int lf2menuitem2(){   
    00001188              _lf2menuitem2:                   ; function: lf2menuitem2
                                                           ; frame size=4
      15062020.c   825        locate(1,1);
    00001188 DE1D                   MOV.L       L1325+2,R14; _locate
    0000118A E501                   MOV         #1,R5
    0000118C 7FFC                   ADD         #-4,R15
    0000118E 4E0B                   JSR         @R14
    00001190 6453                   MOV         R5,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   826        Print((unsigned char*)"Regelkreis");
    00001192 DD1C                   MOV.L       L1325+6,R13; _Print
    00001194 D426                   MOV.L       L1325+50,R4; L607
    00001196 4D0B                   JSR         @R13
    00001198 0009                   NOP
      15062020.c   827        locate(1,3);
    0000119A E503                   MOV         #3,R5
    0000119C 4E0B                   JSR         @R14
    0000119E E401                   MOV         #1,R4
      15062020.c   828        Print((unsigned char*)"Mitte: Kommunikation");
    000011A0 D424                   MOV.L       L1325+54,R4; L681
    000011A2 4D0B                   JSR         @R13
    000011A4 0009                   NOP
      15062020.c   829        locate(2,4);
    000011A6 E504                   MOV         #4,R5
    000011A8 4E0B                   JSR         @R14
    000011AA E402                   MOV         #2,R4
      15062020.c   830        Print((unsigned char*)"1) Zielsetzung");
    000011AC D422                   MOV.L       L1325+58,R4; L682
    000011AE 4D0B                   JSR         @R13
    000011B0 0009                   NOP
      15062020.c   831        locate(2,5);
    000011B2 E505                   MOV         #5,R5
    000011B4 4E0B                   JSR         @R14
    000011B6 E402                   MOV         #2,R4
      15062020.c   832        Print((unsigned char*)"2) Planung");
    000011B8 D420                   MOV.L       L1325+62,R4; L683
    000011BA 4D0B                   JSR         @R13
    000011BC 0009                   NOP
      15062020.c   833        locate(2,6);
    000011BE E506                   MOV         #6,R5
    000011C0 4E0B                   JSR         @R14
    000011C2 E402                   MOV         #2,R4
      15062020.c   834        Print((unsigned char*)"3) Entscheidung");
    000011C4 D41E                   MOV.L       L1325+66,R4; L684
    000011C6 4D0B                   JSR         @R13
    000011C8 0009                   NOP
      15062020.c   835        locate(2,7);
    000011CA E507                   MOV         #7,R5
    000011CC 4E0B                   JSR         @R14
    000011CE E402                   MOV         #2,R4
      15062020.c   836        Print((unsigned char*)"4) Umsetzung");
    000011D0 D41C                   MOV.L       L1325+70,R4; L685
    000011D2 4D0B                   JSR         @R13
    000011D4 0009                   NOP
      15062020.c   837        locate(2,8);
    000011D6 E508                   MOV         #8,R5
    000011D8 4E0B                   JSR         @R14
    000011DA E402                   MOV         #2,R4
      15062020.c   838        Print((unsigned char*)"5) Kontrolle");
    000011DC D41A                   MOV.L       L1325+74,R4; L686
    000011DE 4D0B                   JSR         @R13
    000011E0 0009                   NOP
    000011E2 DC12                   MOV.L       L1325+46,R12; _Bdisp_AllClr_DDVRAM
    000011E4 DD10                   MOV.L       L1325+42,R13; _GetKey
    000011E6 9E0A                   MOV.W       L1325,R14  ; H'7532
      15062020.c   839        while (1){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011E8              L1239:                            
      15062020.c   840            unsigned int key;       
      15062020.c   841            GetKey(&key);
    000011E8 4D0B                   JSR         @R13
    000011EA 64F3                   MOV         R15,R4
      15062020.c   842            if(KEY_CTRL_EXIT == key) {
    000011EC 62F2                   MOV.L       @R15,R2
    000011EE 32E0                   CMP/EQ      R14,R2
    000011F0 8BFA                   BF          L1239
      15062020.c   843                Bdisp_AllClr_DDVRAM();
    000011F2 4C0B                   JSR         @R12
    000011F4 0009                   NOP
      15062020.c   844                lf2menu();
    000011F6 BDC5                   BSR         _lf2menu
    000011F8 0009                   NOP
    000011FA AFF5                   BRA         L1239
    000011FC 0009                   NOP
    000011FE              L1325:                            
    000011FE 7532                   .DATA.W     H'7532
    00001200 <00000000>             .DATA.L     _locate
    00001204 <00000000>             .DATA.L     _Print
    00001208 <00000000>             .DATA.L     L668
    0000120C <00000000>             .DATA.L     L669
    00001210 <00000000>             .DATA.L     L670
    00001214 <00000000>             .DATA.L     L671
    00001218 <00000000>             .DATA.L     L672
    0000121C <00000000>             .DATA.L     L673
    00001220 <00000000>             .DATA.L     L674
    00001224 <00000000>             .DATA.L     L675
    00001228 <00000000>             .DATA.L     _GetKey
    0000122C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001230 <00000000>             .DATA.L     L607
    00001234 <00000000>             .DATA.L     L681
    00001238 <00000000>             .DATA.L     L682
    0000123C <00000000>             .DATA.L     L683
    00001240 <00000000>             .DATA.L     L684
    00001244 <00000000>             .DATA.L     L685
    00001248 <00000000>             .DATA.L     L686
      15062020.c   845            }
      15062020.c   846        } 
      15062020.c   847    }
      15062020.c   848    int lf2menuitem3(){   
    0000124C              _lf2menuitem3:                   ; function: lf2menuitem3
                                                           ; frame size=4
      15062020.c   849        locate(1,1);
    0000124C DE3F                   MOV.L       L1326+2,R14; _locate
    0000124E E501                   MOV         #1,R5
    00001250 7FFC                   ADD         #-4,R15
    00001252 4E0B                   JSR         @R14
    00001254 6453                   MOV         R5,R4
      15062020.c   850        Print((unsigned char*)"Organigramm");
    00001256 DD3E                   MOV.L       L1326+6,R13; _Print
    00001258 D43E                   MOV.L       L1326+10,R4; L608
    0000125A 4D0B                   JSR         @R13
    0000125C 0009                   NOP
      15062020.c   851        locate(1,3);
    0000125E E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001260 4E0B                   JSR         @R14
    00001262 E401                   MOV         #1,R4
      15062020.c   852        Print((unsigned char*)"[[]] Instanz");
    00001264 D43C                   MOV.L       L1326+14,R4; L691
    00001266 4D0B                   JSR         @R13
    00001268 0009                   NOP
      15062020.c   853        locate(2,4);
    0000126A E504                   MOV         #4,R5
    0000126C 4E0B                   JSR         @R14
    0000126E E402                   MOV         #2,R4
      15062020.c   854        Print((unsigned char*)"leitende Stelle");
    00001270 D43A                   MOV.L       L1326+18,R4; L692
    00001272 4D0B                   JSR         @R13
    00001274 0009                   NOP
      15062020.c   855        locate(1,5);
    00001276 E505                   MOV         #5,R5
    00001278 4E0B                   JSR         @R14
    0000127A E401                   MOV         #1,R4
      15062020.c   856        Print((unsigned char*)"[] Mitarbeiterstelle");
    0000127C D438                   MOV.L       L1326+22,R4; L693
    0000127E 4D0B                   JSR         @R13
    00001280 0009                   NOP
      15062020.c   857        locate(2,6);
    00001282 E506                   MOV         #6,R5
    00001284 4E0B                   JSR         @R14
    00001286 E402                   MOV         #2,R4
      15062020.c   858        Print((unsigned char*)"Ausfuhrendestelle");
    00001288 D436                   MOV.L       L1326+26,R4; L694
    0000128A 4D0B                   JSR         @R13
    0000128C 0009                   NOP
      15062020.c   859        locate(1,7);
    0000128E E507                   MOV         #7,R5
    00001290 4E0B                   JSR         @R14
    00001292 E401                   MOV         #1,R4
      15062020.c   860        Print((unsigned char*)"() Stabstelle");
    00001294 D434                   MOV.L       L1326+30,R4; L695
    00001296 4D0B                   JSR         @R13
    00001298 0009                   NOP
      15062020.c   861        locate(2,8);
    0000129A E508                   MOV         #8,R5
    0000129C 4E0B                   JSR         @R14
    0000129E E402                   MOV         #2,R4
      15062020.c   862        Print((unsigned char*)"Beratende Stelle");
    000012A0 D432                   MOV.L       L1326+34,R4; L696
    000012A2 4D0B                   JSR         @R13
    000012A4 0009                   NOP
    000012A6 DC32                   MOV.L       L1326+38,R12; _Bdisp_AllClr_DDVRAM
    000012A8 DD32                   MOV.L       L1326+42,R13; _GetKey
    000012AA 9E4E                   MOV.W       L1326,R14  ; H'7532
      15062020.c   863        while (1){
    000012AC              L1242:                            
      15062020.c   864            unsigned int key;       
      15062020.c   865            GetKey(&key);
    000012AC 4D0B                   JSR         @R13
    000012AE 64F3                   MOV         R15,R4
      15062020.c   866            if(KEY_CTRL_EXIT == key) {
    000012B0 62F2                   MOV.L       @R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012B2 32E0                   CMP/EQ      R14,R2
    000012B4 8BFA                   BF          L1242
      15062020.c   867                Bdisp_AllClr_DDVRAM();
    000012B6 4C0B                   JSR         @R12
    000012B8 0009                   NOP
      15062020.c   868                lf2menu();
    000012BA BD63                   BSR         _lf2menu
    000012BC 0009                   NOP
    000012BE AFF5                   BRA         L1242
    000012C0 0009                   NOP
      15062020.c   869            }
      15062020.c   870        } 
      15062020.c   871    }
      15062020.c   872    int lf2menuitem4(){   
    000012C2              _lf2menuitem4:                   ; function: lf2menuitem4
                                                           ; frame size=4
    000012C2 7FFC                   ADD         #-4,R15
      15062020.c   873        locate(1,1);
    000012C4 DE21                   MOV.L       L1326+2,R14; _locate
    000012C6 E501                   MOV         #1,R5
    000012C8 4E0B                   JSR         @R14
    000012CA 6453                   MOV         R5,R4
      15062020.c   874        Print((unsigned char*)"ERP / SAP Systeme1/5");
    000012CC DD20                   MOV.L       L1326+6,R13; _Print
    000012CE D42A                   MOV.L       L1326+46,R4; L701
    000012D0 4D0B                   JSR         @R13
    000012D2 0009                   NOP
      15062020.c   875        locate(1,3);
    000012D4 E503                   MOV         #3,R5
    000012D6 4E0B                   JSR         @R14
    000012D8 E401                   MOV         #1,R4
      15062020.c   876        Print((unsigned char*)"Merkmale:");
    000012DA D428                   MOV.L       L1326+50,R4; L702
    000012DC 4D0B                   JSR         @R13
    000012DE 0009                   NOP
      15062020.c   877        locate(2,4);
    000012E0 E504                   MOV         #4,R5
    000012E2 4E0B                   JSR         @R14
    000012E4 E402                   MOV         #2,R4
      15062020.c   878        Print((unsigned char*)"-dient der");
    000012E6 D426                   MOV.L       L1326+54,R4; L703
    000012E8 4D0B                   JSR         @R13
    000012EA 0009                   NOP
      15062020.c   879        locate(3,5);
    000012EC E505                   MOV         #5,R5
    000012EE 4E0B                   JSR         @R14
    000012F0 E403                   MOV         #3,R4
      15062020.c   880        Print((unsigned char*)"bearbeitung von");
    000012F2 D424                   MOV.L       L1326+58,R4; L704
    000012F4 4D0B                   JSR         @R13
    000012F6 0009                   NOP
      15062020.c   881        locate(3,6);
    000012F8 E506                   MOV         #6,R5
    000012FA 4E0B                   JSR         @R14
    000012FC E403                   MOV         #3,R4
      15062020.c   882        Print((unsigned char*)"Geschaftsprozessen");
    000012FE D422                   MOV.L       L1326+62,R4; L705




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001300 4D0B                   JSR         @R13
    00001302 0009                   NOP
      15062020.c   883        locate(2,7);
    00001304 E507                   MOV         #7,R5
    00001306 4E0B                   JSR         @R14
    00001308 E402                   MOV         #2,R4
      15062020.c   884        Print((unsigned char*)"-zentrale Datenbank");
    0000130A D420                   MOV.L       L1326+66,R4; L706
    0000130C 4D0B                   JSR         @R13
    0000130E 0009                   NOP
      15062020.c   885        locate(2,8);
    00001310 E508                   MOV         #8,R5
    00001312 4E0B                   JSR         @R14
    00001314 E402                   MOV         #2,R4
      15062020.c   886        Print((unsigned char*)"-Stammdaten");
    00001316 D41E                   MOV.L       L1326+70,R4; L707
    00001318 4D0B                   JSR         @R13
    0000131A 0009                   NOP
    0000131C DB15                   MOV.L       L1326+42,R11; _GetKey
    0000131E 9C14                   MOV.W       L1326,R12  ; H'7532
    00001320 DE13                   MOV.L       L1326+38,R14; _Bdisp_AllClr_DDVRAM
    00001322 6DC3                   MOV         R12,R13
    00001324 7D15                   ADD         #21,R13
      15062020.c   887        while (1){
    00001326              L1245:                            
      15062020.c   888            unsigned int key;       
      15062020.c   889            GetKey(&key);
    00001326 4B0B                   JSR         @R11
    00001328 64F3                   MOV         R15,R4
      15062020.c   890            if(KEY_CTRL_EXIT == key) {
    0000132A 62F2                   MOV.L       @R15,R2
    0000132C 32C0                   CMP/EQ      R12,R2
    0000132E 8B03                   BF          L1246
      15062020.c   891                Bdisp_AllClr_DDVRAM();
    00001330 4E0B                   JSR         @R14
    00001332 0009                   NOP
      15062020.c   892                lf2menu();
    00001334 BD26                   BSR         _lf2menu
    00001336 0009                   NOP
    00001338              L1246:                            
      15062020.c   893            }
      15062020.c   894            if(KEY_CTRL_DOWN == key) {
    00001338 63F2                   MOV.L       @R15,R3
    0000133A 33D0                   CMP/EQ      R13,R3
    0000133C 8BF3                   BF          L1245
      15062020.c   895                Bdisp_AllClr_DDVRAM();
    0000133E 4E0B                   JSR         @R14
    00001340 0009                   NOP
      15062020.c   896                lf2menuitem4_1();
    00001342 B027                   BSR         _lf2menuitem4_1
    00001344 0009                   NOP
    00001346 AFEE                   BRA         L1245
    00001348 0009                   NOP
    0000134A              L1326:                            
    0000134A 7532                   .DATA.W     H'7532
    0000134C <00000000>             .DATA.L     _locate
    00001350 <00000000>             .DATA.L     _Print




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001354 <00000000>             .DATA.L     L608
    00001358 <00000000>             .DATA.L     L691
    0000135C <00000000>             .DATA.L     L692
    00001360 <00000000>             .DATA.L     L693
    00001364 <00000000>             .DATA.L     L694
    00001368 <00000000>             .DATA.L     L695
    0000136C <00000000>             .DATA.L     L696
    00001370 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001374 <00000000>             .DATA.L     _GetKey
    00001378 <00000000>             .DATA.L     L701
    0000137C <00000000>             .DATA.L     L702
    00001380 <00000000>             .DATA.L     L703
    00001384 <00000000>             .DATA.L     L704
    00001388 <00000000>             .DATA.L     L705
    0000138C <00000000>             .DATA.L     L706
    00001390 <00000000>             .DATA.L     L707
      15062020.c   897            }
      15062020.c   898        } 
      15062020.c   899    }
      15062020.c   900    int lf2menuitem4_1(){   
    00001394              _lf2menuitem4_1:                 ; function: lf2menuitem4_1
                                                           ; frame size=4
      15062020.c   901        locate(1,1);
    00001394 DE23                   MOV.L       L1327+4,R14; _locate
    00001396 E501                   MOV         #1,R5
    00001398 7FFC                   ADD         #-4,R15
    0000139A 4E0B                   JSR         @R14
    0000139C 6453                   MOV         R5,R4
      15062020.c   902        Print((unsigned char*)"ERP / SAP Systeme2/5");
    0000139E DD22                   MOV.L       L1327+8,R13; _Print
    000013A0 D422                   MOV.L       L1327+12,R4; L714
    000013A2 4D0B                   JSR         @R13
    000013A4 0009                   NOP
      15062020.c   903        locate(2,2);
    000013A6 E502                   MOV         #2,R5
    000013A8 4E0B                   JSR         @R14
    000013AA 6453                   MOV         R5,R4
      15062020.c   904        Print((unsigned char*)"-Integration vertik");
    000013AC D420                   MOV.L       L1327+16,R4; L715
    000013AE 4D0B                   JSR         @R13
    000013B0 0009                   NOP
      15062020.c   905        locate(3,3);
    000013B2 E503                   MOV         #3,R5
    000013B4 4E0B                   JSR         @R14
    000013B6 6453                   MOV         R5,R4
      15062020.c   906        Print((unsigned char*)"ale/horizontale");
    000013B8 D41E                   MOV.L       L1327+20,R4; L716
    000013BA 4D0B                   JSR         @R13
    000013BC 0009                   NOP
      15062020.c   907        locate(2,4);
    000013BE E504                   MOV         #4,R5
    000013C0 4E0B                   JSR         @R14
    000013C2 E402                   MOV         #2,R4
      15062020.c   908        Print((unsigned char*)"-In vers Komponente");
    000013C4 D41C                   MOV.L       L1327+24,R4; L717
    000013C6 4D0B                   JSR         @R13
    000013C8 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   909        locate(3,5);
    000013CA E505                   MOV         #5,R5
    000013CC 4E0B                   JSR         @R14
    000013CE E403                   MOV         #3,R4
      15062020.c   910        Print((unsigned char*)"ausfgeteilt:");
    000013D0 D41A                   MOV.L       L1327+28,R4; L718
    000013D2 4D0B                   JSR         @R13
    000013D4 0009                   NOP
      15062020.c   911        locate(3,6);
    000013D6 E506                   MOV         #6,R5
    000013D8 4E0B                   JSR         @R14
    000013DA E403                   MOV         #3,R4
      15062020.c   912        Print((unsigned char*)"Vertrieb, ...");
    000013DC D418                   MOV.L       L1327+32,R4; L719
    000013DE 4D0B                   JSR         @R13
    000013E0 0009                   NOP
    000013E2 DA18                   MOV.L       L1327+36,R10; _GetKey
    000013E4 9B1C                   MOV.W       L1327,R11  ; H'7542
    000013E6 6CB3                   MOV         R11,R12
    000013E8 9D1B                   MOV.W       L1327+2,R13; H'7547
    000013EA 7CF0                   ADD         #-16,R12
    000013EC DE16                   MOV.L       L1327+40,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   913        while (1){
    000013EE              L1249:                            
      15062020.c   914            unsigned int key;       
      15062020.c   915            GetKey(&key);
    000013EE 4A0B                   JSR         @R10
    000013F0 64F3                   MOV         R15,R4
      15062020.c   916            if(KEY_CTRL_EXIT == key) {
    000013F2 62F2                   MOV.L       @R15,R2
    000013F4 32C0                   CMP/EQ      R12,R2
    000013F6 8B03                   BF          L1250
      15062020.c   917                Bdisp_AllClr_DDVRAM();
    000013F8 4E0B                   JSR         @R14
    000013FA 0009                   NOP
      15062020.c   918                lf2menu();
    000013FC BCC2                   BSR         _lf2menu
    000013FE 0009                   NOP
    00001400              L1250:                            
      15062020.c   919            }
      15062020.c   920            if(KEY_CTRL_UP == key) {
    00001400 63F2                   MOV.L       @R15,R3
    00001402 33B0                   CMP/EQ      R11,R3
    00001404 8B03                   BF          L1251
      15062020.c   921                Bdisp_AllClr_DDVRAM();
    00001406 4E0B                   JSR         @R14
    00001408 0009                   NOP
      15062020.c   922                lf2menuitem4();
    0000140A BF5A                   BSR         _lf2menuitem4
    0000140C 0009                   NOP
    0000140E              L1251:                            
      15062020.c   923            }
      15062020.c   924            if(KEY_CTRL_DOWN == key) {
    0000140E 62F2                   MOV.L       @R15,R2
    00001410 32D0                   CMP/EQ      R13,R2
    00001412 8BEC                   BF          L1249
      15062020.c   925                Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001414 4E0B                   JSR         @R14
    00001416 0009                   NOP
      15062020.c   926                lf2menuitem4_2();
    00001418 B018                   BSR         _lf2menuitem4_2
    0000141A 0009                   NOP
    0000141C AFE7                   BRA         L1249
    0000141E 0009                   NOP
    00001420              L1327:                            
    00001420 7542                   .DATA.W     H'7542
    00001422 7547                   .DATA.W     H'7547
    00001424 <00000000>             .DATA.L     _locate
    00001428 <00000000>             .DATA.L     _Print
    0000142C <00000000>             .DATA.L     L714
    00001430 <00000000>             .DATA.L     L715
    00001434 <00000000>             .DATA.L     L716
    00001438 <00000000>             .DATA.L     L717
    0000143C <00000000>             .DATA.L     L718
    00001440 <00000000>             .DATA.L     L719
    00001444 <00000000>             .DATA.L     _GetKey
    00001448 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   927            }
      15062020.c   928        } 
      15062020.c   929    }
      15062020.c   930    int lf2menuitem4_2(){   
    0000144C              _lf2menuitem4_2:                 ; function: lf2menuitem4_2
                                                           ; frame size=4
      15062020.c   931        locate(1,1);
    0000144C DE29                   MOV.L       L1328+4,R14; _locate
    0000144E E501                   MOV         #1,R5
    00001450 7FFC                   ADD         #-4,R15
    00001452 4E0B                   JSR         @R14
    00001454 6453                   MOV         R5,R4
      15062020.c   932        Print((unsigned char*)"ERP / SAP Systeme3/5");
    00001456 DD28                   MOV.L       L1328+8,R13; _Print
    00001458 D428                   MOV.L       L1328+12,R4; L727
    0000145A 4D0B                   JSR         @R13
    0000145C 0009                   NOP
      15062020.c   933        locate(1,3);
    0000145E E503                   MOV         #3,R5
    00001460 4E0B                   JSR         @R14
    00001462 E401                   MOV         #1,R4
      15062020.c   934        Print((unsigned char*)"Vorteile:");
    00001464 D426                   MOV.L       L1328+16,R4; L728
    00001466 4D0B                   JSR         @R13
    00001468 0009                   NOP
      15062020.c   935        locate(2,4);
    0000146A E504                   MOV         #4,R5
    0000146C 4E0B                   JSR         @R14
    0000146E E402                   MOV         #2,R4
      15062020.c   936        Print((unsigned char*)"-Verbesserung/Besc-");
    00001470 D424                   MOV.L       L1328+20,R4; L729
    00001472 4D0B                   JSR         @R13
    00001474 0009                   NOP
      15062020.c   937        locate(3,5);
    00001476 E505                   MOV         #5,R5
    00001478 4E0B                   JSR         @R14
    0000147A E403                   MOV         #3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   938        Print((unsigned char*)"hleunigung von");
    0000147C D422                   MOV.L       L1328+24,R4; L730
    0000147E 4D0B                   JSR         @R13
    00001480 0009                   NOP
      15062020.c   939        locate(3,6);
    00001482 E506                   MOV         #6,R5
    00001484 4E0B                   JSR         @R14
    00001486 E403                   MOV         #3,R4
      15062020.c   940        Print((unsigned char*)"Prozessen");
    00001488 D420                   MOV.L       L1328+28,R4; L731
    0000148A 4D0B                   JSR         @R13
    0000148C 0009                   NOP
      15062020.c   941        locate(2,7);
    0000148E E507                   MOV         #7,R5
    00001490 4E0B                   JSR         @R14
    00001492 E402                   MOV         #2,R4
      15062020.c   942        Print((unsigned char*)"-Daten werden in");
    00001494 D41E                   MOV.L       L1328+32,R4; L732
    00001496 4D0B                   JSR         @R13
    00001498 0009                   NOP
      15062020.c   943        locate(3,7);
    0000149A E507                   MOV         #7,R5
    0000149C 4E0B                   JSR         @R14
    0000149E E403                   MOV         #3,R4
      15062020.c   944        Print((unsigned char*)"Echtzeit gesaved");
    000014A0 D41C                   MOV.L       L1328+36,R4; L733
    000014A2 4D0B                   JSR         @R13
    000014A4 0009                   NOP
      15062020.c   945        locate(3,8);
    000014A6 E508                   MOV         #8,R5
    000014A8 4E0B                   JSR         @R14
    000014AA E403                   MOV         #3,R4
      15062020.c   946        Print((unsigned char*)"alle haben Zugriff");
    000014AC D41A                   MOV.L       L1328+40,R4; L734
    000014AE 4D0B                   JSR         @R13
    000014B0 0009                   NOP
    000014B2 DA1A                   MOV.L       L1328+44,R10; _GetKey
    000014B4 9B1C                   MOV.W       L1328,R11  ; H'7542
    000014B6 6CB3                   MOV         R11,R12
    000014B8 9D1B                   MOV.W       L1328+2,R13; H'7547
    000014BA 7CF0                   ADD         #-16,R12
    000014BC DE18                   MOV.L       L1328+48,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   947        while (1){
    000014BE              L1254:                            
      15062020.c   948            unsigned int key;       
      15062020.c   949            GetKey(&key);
    000014BE 4A0B                   JSR         @R10
    000014C0 64F3                   MOV         R15,R4
      15062020.c   950            if(KEY_CTRL_EXIT == key) {
    000014C2 62F2                   MOV.L       @R15,R2
    000014C4 32C0                   CMP/EQ      R12,R2
    000014C6 8B03                   BF          L1255
      15062020.c   951                Bdisp_AllClr_DDVRAM();
    000014C8 4E0B                   JSR         @R14
    000014CA 0009                   NOP
      15062020.c   952                lf2menu();
    000014CC BC5A                   BSR         _lf2menu




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014CE 0009                   NOP
    000014D0              L1255:                            
      15062020.c   953            }
      15062020.c   954            if(KEY_CTRL_UP == key) {
    000014D0 63F2                   MOV.L       @R15,R3
    000014D2 33B0                   CMP/EQ      R11,R3
    000014D4 8B03                   BF          L1256
      15062020.c   955                Bdisp_AllClr_DDVRAM();
    000014D6 4E0B                   JSR         @R14
    000014D8 0009                   NOP
      15062020.c   956                lf2menuitem4_1();
    000014DA BF5B                   BSR         _lf2menuitem4_1
    000014DC 0009                   NOP
    000014DE              L1256:                            
      15062020.c   957            }
      15062020.c   958            if(KEY_CTRL_DOWN == key) {
    000014DE 62F2                   MOV.L       @R15,R2
    000014E0 32D0                   CMP/EQ      R13,R2
    000014E2 8BEC                   BF          L1254
      15062020.c   959                Bdisp_AllClr_DDVRAM();
    000014E4 4E0B                   JSR         @R14
    000014E6 0009                   NOP
      15062020.c   960                lf2menuitem4_3();
    000014E8 B01C                   BSR         _lf2menuitem4_3
    000014EA 0009                   NOP
    000014EC AFE7                   BRA         L1254
    000014EE 0009                   NOP
    000014F0              L1328:                            
    000014F0 7542                   .DATA.W     H'7542
    000014F2 7547                   .DATA.W     H'7547
    000014F4 <00000000>             .DATA.L     _locate
    000014F8 <00000000>             .DATA.L     _Print
    000014FC <00000000>             .DATA.L     L727
    00001500 <00000000>             .DATA.L     L728
    00001504 <00000000>             .DATA.L     L729
    00001508 <00000000>             .DATA.L     L730
    0000150C <00000000>             .DATA.L     L731
    00001510 <00000000>             .DATA.L     L732
    00001514 <00000000>             .DATA.L     L733
    00001518 <00000000>             .DATA.L     L734
    0000151C <00000000>             .DATA.L     _GetKey
    00001520 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
      15062020.c   961            }
      15062020.c   962        } 
      15062020.c   963    }
      15062020.c   964    int lf2menuitem4_3(){   
    00001524              _lf2menuitem4_3:                 ; function: lf2menuitem4_3
                                                           ; frame size=4
      15062020.c   965        locate(1,1);
    00001524 DE40                   MOV.L       L1329+8,R14; _locate
    00001526 E501                   MOV         #1,R5
    00001528 7FFC                   ADD         #-4,R15
    0000152A 4E0B                   JSR         @R14
    0000152C 6453                   MOV         R5,R4
      15062020.c   966        Print((unsigned char*)"ERP / SAP Systeme4/5");
    0000152E DD3F                   MOV.L       L1329+12,R13; _Print
    00001530 D43F                   MOV.L       L1329+16,R4; L742




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001532 4D0B                   JSR         @R13
    00001534 0009                   NOP
      15062020.c   967        locate(2,3);
    00001536 E503                   MOV         #3,R5
    00001538 4E0B                   JSR         @R14
    0000153A E402                   MOV         #2,R4
      15062020.c   968        Print((unsigned char*)"-Automatisiert pro-");
    0000153C D43D                   MOV.L       L1329+20,R4; L743
    0000153E 4D0B                   JSR         @R13
    00001540 0009                   NOP
      15062020.c   969        locate(3,4);
    00001542 E504                   MOV         #4,R5
    00001544 4E0B                   JSR         @R14
    00001546 E403                   MOV         #3,R4
      15062020.c   970        Print((unsigned char*)"zesse, gespart");
    00001548 D43B                   MOV.L       L1329+24,R4; L744
    0000154A 4D0B                   JSR         @R13
    0000154C 0009                   NOP
      15062020.c   971        locate(3,5);
    0000154E E505                   MOV         #5,R5
    00001550 4E0B                   JSR         @R14
    00001552 E403                   MOV         #3,R4
      15062020.c   972        Print((unsigned char*)"wird Arbeitsplatz");
    00001554 D439                   MOV.L       L1329+28,R4; L745
    00001556 4D0B                   JSR         @R13
    00001558 0009                   NOP
    0000155A DA39                   MOV.L       L1329+32,R10; _GetKey
    0000155C 9B60                   MOV.W       L1329,R11  ; H'7542
    0000155E 6CB3                   MOV         R11,R12
    00001560 9D5F                   MOV.W       L1329+2,R13; H'7547
    00001562 7CF0                   ADD         #-16,R12
    00001564 DE37                   MOV.L       L1329+36,R14; _Bdisp_AllClr_DDVRAM
      15062020.c   973        while (1){
    00001566              L1259:                            
      15062020.c   974            unsigned int key;       
      15062020.c   975            GetKey(&key);
    00001566 4A0B                   JSR         @R10
    00001568 64F3                   MOV         R15,R4
      15062020.c   976            if(KEY_CTRL_EXIT == key) {
    0000156A 62F2                   MOV.L       @R15,R2
    0000156C 32C0                   CMP/EQ      R12,R2
    0000156E 8B03                   BF          L1260
      15062020.c   977                Bdisp_AllClr_DDVRAM();
    00001570 4E0B                   JSR         @R14
    00001572 0009                   NOP
      15062020.c   978                lf2menu();
    00001574 BC06                   BSR         _lf2menu
    00001576 0009                   NOP
    00001578              L1260:                            
      15062020.c   979            }
      15062020.c   980            if(KEY_CTRL_UP == key) {
    00001578 63F2                   MOV.L       @R15,R3
    0000157A 33B0                   CMP/EQ      R11,R3
    0000157C 8B03                   BF          L1261
      15062020.c   981                Bdisp_AllClr_DDVRAM();
    0000157E 4E0B                   JSR         @R14
    00001580 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c   982                lf2menuitem4_2();
    00001582 BF63                   BSR         _lf2menuitem4_2
    00001584 0009                   NOP
    00001586              L1261:                            
      15062020.c   983            }
      15062020.c   984            if(KEY_CTRL_DOWN == key) {
    00001586 62F2                   MOV.L       @R15,R2
    00001588 32D0                   CMP/EQ      R13,R2
    0000158A 8BEC                   BF          L1259
      15062020.c   985                Bdisp_AllClr_DDVRAM();
    0000158C 4E0B                   JSR         @R14
    0000158E 0009                   NOP
      15062020.c   986                lf2menuitem4_4();
    00001590 B002                   BSR         _lf2menuitem4_4
    00001592 0009                   NOP
    00001594 AFE7                   BRA         L1259
    00001596 0009                   NOP
      15062020.c   987            }
      15062020.c   988        } 
      15062020.c   989    }
      15062020.c   990    int lf2menuitem4_4(){   
    00001598              _lf2menuitem4_4:                 ; function: lf2menuitem4_4
                                                           ; frame size=4
      15062020.c   991        locate(1,1);
    00001598 DE23                   MOV.L       L1329+8,R14; _locate
    0000159A E501                   MOV         #1,R5
    0000159C 7FFC                   ADD         #-4,R15
    0000159E 4E0B                   JSR         @R14
    000015A0 6453                   MOV         R5,R4
      15062020.c   992        Print((unsigned char*)"ERP / SAP Systeme5/5");
    000015A2 DD22                   MOV.L       L1329+12,R13; _Print
    000015A4 D428                   MOV.L       L1329+40,R4; L753
    000015A6 4D0B                   JSR         @R13
    000015A8 0009                   NOP
      15062020.c   993        locate(1,3);
    000015AA E503                   MOV         #3,R5
    000015AC 4E0B                   JSR         @R14
    000015AE E401                   MOV         #1,R4
      15062020.c   994        Print((unsigned char*)"Nachteile:");
    000015B0 D426                   MOV.L       L1329+44,R4; L754
    000015B2 4D0B                   JSR         @R13
    000015B4 0009                   NOP
      15062020.c   995        locate(2,4);
    000015B6 E504                   MOV         #4,R5
    000015B8 4E0B                   JSR         @R14
    000015BA E402                   MOV         #2,R4
      15062020.c   996        Print((unsigned char*)"-Anschaffungskosten");
    000015BC D424                   MOV.L       L1329+48,R4; L755
    000015BE 4D0B                   JSR         @R13
    000015C0 0009                   NOP
      15062020.c   997        locate(2,5);
    000015C2 E505                   MOV         #5,R5
    000015C4 4E0B                   JSR         @R14
    000015C6 E402                   MOV         #2,R4
      15062020.c   998        Print((unsigned char*)"-Abhaengigkeit");
    000015C8 D422                   MOV.L       L1329+52,R4; L756
    000015CA 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015CC 0009                   NOP
      15062020.c   999        locate(2,6);
    000015CE E506                   MOV         #6,R5
    000015D0 4E0B                   JSR         @R14
    000015D2 E402                   MOV         #2,R4
      15062020.c  1000        Print((unsigned char*)"-hohe komplexitat");
    000015D4 D420                   MOV.L       L1329+56,R4; L757
    000015D6 4D0B                   JSR         @R13
    000015D8 0009                   NOP
      15062020.c  1001        locate(2,7);
    000015DA E507                   MOV         #7,R5
    000015DC 4E0B                   JSR         @R14
    000015DE E402                   MOV         #2,R4
      15062020.c  1002        Print((unsigned char*)"-dauerhaft kontrol-");
    000015E0 D41E                   MOV.L       L1329+60,R4; L758
    000015E2 4D0B                   JSR         @R13
    000015E4 0009                   NOP
      15062020.c  1003        locate(3,7);
    000015E6 E507                   MOV         #7,R5
    000015E8 4E0B                   JSR         @R14
    000015EA E403                   MOV         #3,R4
      15062020.c  1004        Print((unsigned char*)"le der Mitarbeiter");
    000015EC D41C                   MOV.L       L1329+64,R4; L759
    000015EE 4D0B                   JSR         @R13
    000015F0 0009                   NOP
    000015F2 DB13                   MOV.L       L1329+32,R11; _GetKey
    000015F4 9C16                   MOV.W       L1329+4,R12; H'7532
    000015F6 6DC3                   MOV         R12,R13
    000015F8 DE12                   MOV.L       L1329+36,R14; _Bdisp_AllClr_DDVRAM
    000015FA 7D10                   ADD         #16,R13
      15062020.c  1005        while (1){
    000015FC              L1264:                            
      15062020.c  1006            unsigned int key;       
      15062020.c  1007            GetKey(&key);
    000015FC 4B0B                   JSR         @R11
    000015FE 64F3                   MOV         R15,R4
      15062020.c  1008            if(KEY_CTRL_EXIT == key) {
    00001600 62F2                   MOV.L       @R15,R2
    00001602 32C0                   CMP/EQ      R12,R2
    00001604 8B03                   BF          L1265
      15062020.c  1009                Bdisp_AllClr_DDVRAM();
    00001606 4E0B                   JSR         @R14
    00001608 0009                   NOP
      15062020.c  1010                lf2menu();
    0000160A BBBB                   BSR         _lf2menu
    0000160C 0009                   NOP
    0000160E              L1265:                            
      15062020.c  1011            }
      15062020.c  1012            if(KEY_CTRL_UP == key) {
    0000160E 63F2                   MOV.L       @R15,R3
    00001610 33D0                   CMP/EQ      R13,R3
    00001612 8BF3                   BF          L1264
      15062020.c  1013                Bdisp_AllClr_DDVRAM();
    00001614 4E0B                   JSR         @R14
    00001616 0009                   NOP
      15062020.c  1014                lf2menuitem4_3();
    00001618 BF84                   BSR         _lf2menuitem4_3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000161A 0009                   NOP
    0000161C AFEE                   BRA         L1264
    0000161E 0009                   NOP
    00001620              L1329:                            
    00001620 7542                   .DATA.W     H'7542
    00001622 7547                   .DATA.W     H'7547
    00001624 7532                   .DATA.W     H'7532
    00001626 0000                   .DATA.W     0
    00001628 <00000000>             .DATA.L     _locate
    0000162C <00000000>             .DATA.L     _Print
    00001630 <00000000>             .DATA.L     L742
    00001634 <00000000>             .DATA.L     L743
    00001638 <00000000>             .DATA.L     L744
    0000163C <00000000>             .DATA.L     L745
    00001640 <00000000>             .DATA.L     _GetKey
    00001644 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001648 <00000000>             .DATA.L     L753
    0000164C <00000000>             .DATA.L     L754
    00001650 <00000000>             .DATA.L     L755
    00001654 <00000000>             .DATA.L     L756
    00001658 <00000000>             .DATA.L     L757
    0000165C <00000000>             .DATA.L     L758
    00001660 <00000000>             .DATA.L     L759
      15062020.c  1015            }
      15062020.c  1016        } 
      15062020.c  1017    }
      15062020.c  1018    
      15062020.c  1019    //PC/Netzwerktechnik
      15062020.c  1020    int lf3list(){   
    00001664              _lf3list:                        ; function: lf3list
                                                           ; frame size=4
      15062020.c  1021        locate(1,1);
    00001664 DE22                   MOV.L       L1330+2,R14; _locate
    00001666 E501                   MOV         #1,R5
    00001668 7FFC                   ADD         #-4,R15
    0000166A 4E0B                   JSR         @R14
    0000166C 6453                   MOV         R5,R4
      15062020.c  1022        Print((unsigned char*)"Netzwerktechnik  1/4");
    0000166E DD21                   MOV.L       L1330+6,R13; _Print
    00001670 D421                   MOV.L       L1330+10,R4; L765
    00001672 4D0B                   JSR         @R13
    00001674 0009                   NOP
      15062020.c  1023        locate(1,3);
    00001676 E503                   MOV         #3,R5
    00001678 4E0B                   JSR         @R14
    0000167A E401                   MOV         #1,R4
      15062020.c  1024        Print((unsigned char*)"DNS=Domain Name ");
    0000167C D41F                   MOV.L       L1330+14,R4; L766
    0000167E 4D0B                   JSR         @R13
    00001680 0009                   NOP
      15062020.c  1025        locate(3,4);
    00001682 E504                   MOV         #4,R5
    00001684 4E0B                   JSR         @R14
    00001686 E403                   MOV         #3,R4
      15062020.c  1026        Print((unsigned char*)"Service");
    00001688 D41D                   MOV.L       L1330+18,R4; L767
    0000168A 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000168C 0009                   NOP
      15062020.c  1027        locate(1,5);
    0000168E E505                   MOV         #5,R5
    00001690 4E0B                   JSR         @R14
    00001692 E401                   MOV         #1,R4
      15062020.c  1028        Print((unsigned char*)"DHCP=Dynamic Host");
    00001694 D41B                   MOV.L       L1330+22,R4; L768
    00001696 4D0B                   JSR         @R13
    00001698 0009                   NOP
      15062020.c  1029        locate(3,6);
    0000169A E506                   MOV         #6,R5
    0000169C 4E0B                   JSR         @R14
    0000169E E403                   MOV         #3,R4
      15062020.c  1030        Print((unsigned char*)"Config.Protokoll");
    000016A0 D419                   MOV.L       L1330+26,R4; L769
    000016A2 4D0B                   JSR         @R13
    000016A4 0009                   NOP
      15062020.c  1031        locate(1,7);
    000016A6 E507                   MOV         #7,R5
    000016A8 4E0B                   JSR         @R14
    000016AA E401                   MOV         #1,R4
      15062020.c  1032        Print((unsigned char*)"WWW=Weltweites Netz");
    000016AC D417                   MOV.L       L1330+30,R4; L770
    000016AE 4D0B                   JSR         @R13
    000016B0 0009                   NOP
      15062020.c  1033        locate(1,8);
    000016B2 E508                   MOV         #8,R5
    000016B4 4E0B                   JSR         @R14
    000016B6 E401                   MOV         #1,R4
      15062020.c  1034        Print((unsigned char*)"RJ45=Netzwerkstecker");
    000016B8 D415                   MOV.L       L1330+34,R4; L771
    000016BA 4D0B                   JSR         @R13
    000016BC 0009                   NOP
    000016BE DB15                   MOV.L       L1330+38,R11; _GetKey
    000016C0 9C15                   MOV.W       L1330,R12  ; H'7532
    000016C2 6DC3                   MOV         R12,R13
    000016C4 DE14                   MOV.L       L1330+42,R14; _Bdisp_AllClr_DDVRAM
    000016C6 7D15                   ADD         #21,R13
      15062020.c  1035        while (1){
    000016C8              L1268:                            
      15062020.c  1036            unsigned int key;       
      15062020.c  1037            GetKey(&key);
    000016C8 4B0B                   JSR         @R11
    000016CA 64F3                   MOV         R15,R4
      15062020.c  1038            if(KEY_CTRL_EXIT == key) {
    000016CC 62F2                   MOV.L       @R15,R2
    000016CE 32C0                   CMP/EQ      R12,R2
    000016D0 8B04                   BF          L1269
      15062020.c  1039                Bdisp_AllClr_DDVRAM();
    000016D2 4E0B                   JSR         @R14
    000016D4 0009                   NOP
      15062020.c  1040                firstMenu();
    000016D6 D111                   MOV.L       L1330+46,R1; _firstMenu
    000016D8 410B                   JSR         @R1
    000016DA 0009                   NOP
    000016DC              L1269:                            
      15062020.c  1041            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c  1042            if(KEY_CTRL_DOWN == key) {
    000016DC 63F2                   MOV.L       @R15,R3
    000016DE 33D0                   CMP/EQ      R13,R3
    000016E0 8BF2                   BF          L1268
      15062020.c  1043                Bdisp_AllClr_DDVRAM();
    000016E2 4E0B                   JSR         @R14
    000016E4 0009                   NOP
      15062020.c  1044                lf3list_1();
    000016E6 B01B                   BSR         _lf3list_1
    000016E8 0009                   NOP
    000016EA AFED                   BRA         L1268
    000016EC 0009                   NOP
    000016EE              L1330:                            
    000016EE 7532                   .DATA.W     H'7532
    000016F0 <00000000>             .DATA.L     _locate
    000016F4 <00000000>             .DATA.L     _Print
    000016F8 <00000000>             .DATA.L     L765
    000016FC <00000000>             .DATA.L     L766
    00001700 <00000000>             .DATA.L     L767
    00001704 <00000000>             .DATA.L     L768
    00001708 <00000000>             .DATA.L     L769
    0000170C <00000000>             .DATA.L     L770
    00001710 <00000000>             .DATA.L     L771
    00001714 <00000000>             .DATA.L     _GetKey
    00001718 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000171C <00000000>             .DATA.L     _firstMenu
      15062020.c  1045            }
      15062020.c  1046        } 
      15062020.c  1047    }
      15062020.c  1048    int lf3list_1(){   
    00001720              _lf3list_1:                      ; function: lf3list_1
                                                           ; frame size=4
      15062020.c  1049        locate(1,1);
    00001720 DE27                   MOV.L       L1331+6,R14; _locate
    00001722 E501                   MOV         #1,R5
    00001724 7FFC                   ADD         #-4,R15
    00001726 4E0B                   JSR         @R14
    00001728 6453                   MOV         R5,R4
      15062020.c  1050        Print((unsigned char*)"Netzwerktechnik  2/4");
    0000172A DD26                   MOV.L       L1331+10,R13; _Print
    0000172C D426                   MOV.L       L1331+14,R4; L778
    0000172E 4D0B                   JSR         @R13
    00001730 0009                   NOP
      15062020.c  1051        locate(1,3);
    00001732 E503                   MOV         #3,R5
    00001734 4E0B                   JSR         @R14
    00001736 E401                   MOV         #1,R4
      15062020.c  1052        Print((unsigned char*)"TCP/IP=Stand. Netz-");
    00001738 D424                   MOV.L       L1331+18,R4; L779
    0000173A 4D0B                   JSR         @R13
    0000173C 0009                   NOP
      15062020.c  1053        locate(3,4);
    0000173E E504                   MOV         #4,R5
    00001740 4E0B                   JSR         @R14
    00001742 E403                   MOV         #3,R4
      15062020.c  1054        Print((unsigned char*)"werk Protokoll");
    00001744 D422                   MOV.L       L1331+22,R4; L780




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001746 4D0B                   JSR         @R13
    00001748 0009                   NOP
      15062020.c  1055        locate(1,5);
    0000174A E505                   MOV         #5,R5
    0000174C 4E0B                   JSR         @R14
    0000174E E401                   MOV         #1,R4
      15062020.c  1056        Print((unsigned char*)"MAC Adr.=feste Adr.");
    00001750 D420                   MOV.L       L1331+26,R4; L781
    00001752 4D0B                   JSR         @R13
    00001754 0009                   NOP
      15062020.c  1057        locate(3,6);
    00001756 E506                   MOV         #6,R5
    00001758 4E0B                   JSR         @R14
    0000175A E403                   MOV         #3,R4
      15062020.c  1058        Print((unsigned char*)"in der NW Karte");
    0000175C D41E                   MOV.L       L1331+30,R4; L782
    0000175E 4D0B                   JSR         @R13
    00001760 0009                   NOP
      15062020.c  1059        locate(1,7);
    00001762 E507                   MOV         #7,R5
    00001764 4E0B                   JSR         @R14
    00001766 E401                   MOV         #1,R4
      15062020.c  1060        Print((unsigned char*)"ipconfig=Windows");
    00001768 D41C                   MOV.L       L1331+34,R4; L783
    0000176A 4D0B                   JSR         @R13
    0000176C 0009                   NOP
      15062020.c  1061        locate(1,8);
    0000176E E508                   MOV         #8,R5
    00001770 4E0B                   JSR         @R14
    00001772 E401                   MOV         #1,R4
      15062020.c  1062        Print((unsigned char*)"twisted Pair...");
    00001774 D41A                   MOV.L       L1331+38,R4; L784
    00001776 4D0B                   JSR         @R13
    00001778 0009                   NOP
    0000177A DA1A                   MOV.L       L1331+42,R10; _GetKey
    0000177C 9B1D                   MOV.W       L1331,R11  ; H'7542
    0000177E 6CB3                   MOV         R11,R12
    00001780 9D1C                   MOV.W       L1331+2,R13; H'7547
    00001782 7CF0                   ADD         #-16,R12
    00001784 DE18                   MOV.L       L1331+46,R14; _Bdisp_AllClr_DDVRAM
      15062020.c  1063        while (1){
    00001786              L1272:                            
      15062020.c  1064            unsigned int key;       
      15062020.c  1065            GetKey(&key);
    00001786 4A0B                   JSR         @R10
    00001788 64F3                   MOV         R15,R4
      15062020.c  1066            if(KEY_CTRL_EXIT == key) {
    0000178A 62F2                   MOV.L       @R15,R2
    0000178C 32C0                   CMP/EQ      R12,R2
    0000178E 8B04                   BF          L1273
      15062020.c  1067                Bdisp_AllClr_DDVRAM();
    00001790 4E0B                   JSR         @R14
    00001792 0009                   NOP
      15062020.c  1068                firstMenu();
    00001794 D115                   MOV.L       L1331+50,R1; _firstMenu
    00001796 410B                   JSR         @R1
    00001798 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000179A              L1273:                            
      15062020.c  1069            }
      15062020.c  1070            if(KEY_CTRL_UP == key) {
    0000179A 63F2                   MOV.L       @R15,R3
    0000179C 33B0                   CMP/EQ      R11,R3
    0000179E 8B03                   BF          L1274
      15062020.c  1071                Bdisp_AllClr_DDVRAM();
    000017A0 4E0B                   JSR         @R14
    000017A2 0009                   NOP
      15062020.c  1072                lf3list();
    000017A4 BF5E                   BSR         _lf3list
    000017A6 0009                   NOP
    000017A8              L1274:                            
      15062020.c  1073            }
      15062020.c  1074            if(KEY_CTRL_DOWN == key) {
    000017A8 62F2                   MOV.L       @R15,R2
    000017AA 32D0                   CMP/EQ      R13,R2
    000017AC 8BEB                   BF          L1272
      15062020.c  1075                Bdisp_AllClr_DDVRAM();
    000017AE 4E0B                   JSR         @R14
    000017B0 0009                   NOP
      15062020.c  1076                lf3list_2();
    000017B2 B01D                   BSR         _lf3list_2
    000017B4 0009                   NOP
    000017B6 AFE6                   BRA         L1272
    000017B8 0009                   NOP
    000017BA              L1331:                            
    000017BA 7542                   .DATA.W     H'7542
    000017BC 7547                   .DATA.W     H'7547
    000017BE 0000                   .DATA.W     0
    000017C0 <00000000>             .DATA.L     _locate
    000017C4 <00000000>             .DATA.L     _Print
    000017C8 <00000000>             .DATA.L     L778
    000017CC <00000000>             .DATA.L     L779
    000017D0 <00000000>             .DATA.L     L780
    000017D4 <00000000>             .DATA.L     L781
    000017D8 <00000000>             .DATA.L     L782
    000017DC <00000000>             .DATA.L     L783
    000017E0 <00000000>             .DATA.L     L784
    000017E4 <00000000>             .DATA.L     _GetKey
    000017E8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000017EC <00000000>             .DATA.L     _firstMenu
      15062020.c  1077            }
      15062020.c  1078        } 
      15062020.c  1079    }
      15062020.c  1080    int lf3list_2(){   
    000017F0              _lf3list_2:                      ; function: lf3list_2
                                                           ; frame size=4
      15062020.c  1081        locate(1,1);
    000017F0 DE27                   MOV.L       L1332+6,R14; _locate
    000017F2 E501                   MOV         #1,R5
    000017F4 7FFC                   ADD         #-4,R15
    000017F6 4E0B                   JSR         @R14
    000017F8 6453                   MOV         R5,R4
      15062020.c  1082        Print((unsigned char*)"PC Technik       3/4");
    000017FA DD26                   MOV.L       L1332+10,R13; _Print
    000017FC D426                   MOV.L       L1332+14,R4; L792




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017FE 4D0B                   JSR         @R13
    00001800 0009                   NOP
      15062020.c  1083        locate(1,3);
    00001802 E503                   MOV         #3,R5
    00001804 4E0B                   JSR         @R14
    00001806 E401                   MOV         #1,R4
      15062020.c  1084        Print((unsigned char*)"-Northbridge (CPU/");
    00001808 D424                   MOV.L       L1332+18,R4; L793
    0000180A 4D0B                   JSR         @R13
    0000180C 0009                   NOP
      15062020.c  1085        locate(3,4);
    0000180E E504                   MOV         #4,R5
    00001810 4E0B                   JSR         @R14
    00001812 E403                   MOV         #3,R4
      15062020.c  1086        Print((unsigned char*)"RAM/PCI(e))");
    00001814 D422                   MOV.L       L1332+22,R4; L794
    00001816 4D0B                   JSR         @R13
    00001818 0009                   NOP
      15062020.c  1087        locate(1,5);
    0000181A E505                   MOV         #5,R5
    0000181C 4E0B                   JSR         @R14
    0000181E E401                   MOV         #1,R4
      15062020.c  1088        Print((unsigned char*)"-Sourcebridge (USB/");
    00001820 D420                   MOV.L       L1332+26,R4; L795
    00001822 4D0B                   JSR         @R13
    00001824 0009                   NOP
      15062020.c  1089        locate(3,6);
    00001826 E506                   MOV         #6,R5
    00001828 4E0B                   JSR         @R14
    0000182A E403                   MOV         #3,R4
      15062020.c  1090        Print((unsigned char*)"PS2/PCI/S-ATA/IDE)");
    0000182C D41E                   MOV.L       L1332+30,R4; L796
    0000182E 4D0B                   JSR         @R13
    00001830 0009                   NOP
      15062020.c  1091        locate(1,7);
    00001832 E507                   MOV         #7,R5
    00001834 4E0B                   JSR         @R14
    00001836 E401                   MOV         #1,R4
      15062020.c  1092        Print((unsigned char*)"-BIOS=SW fur Mboard");
    00001838 D41C                   MOV.L       L1332+34,R4; L797
    0000183A 4D0B                   JSR         @R13
    0000183C 0009                   NOP
      15062020.c  1093        locate(1,8);
    0000183E E508                   MOV         #8,R5
    00001840 4E0B                   JSR         @R14
    00001842 E401                   MOV         #1,R4
      15062020.c  1094        Print((unsigned char*)"-POST=PowerOnSelfTest");
    00001844 D41A                   MOV.L       L1332+38,R4; L798
    00001846 4D0B                   JSR         @R13
    00001848 0009                   NOP
    0000184A DA1A                   MOV.L       L1332+42,R10; _GetKey
    0000184C 9B1D                   MOV.W       L1332,R11  ; H'7542
    0000184E 6CB3                   MOV         R11,R12
    00001850 9D1C                   MOV.W       L1332+2,R13; H'7547
    00001852 7CF0                   ADD         #-16,R12
    00001854 DE18                   MOV.L       L1332+46,R14; _Bdisp_AllClr_DDVRAM
      15062020.c  1095        while (1){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001856              L1277:                            
      15062020.c  1096            unsigned int key;       
      15062020.c  1097            GetKey(&key);
    00001856 4A0B                   JSR         @R10
    00001858 64F3                   MOV         R15,R4
      15062020.c  1098            if(KEY_CTRL_EXIT == key) {
    0000185A 62F2                   MOV.L       @R15,R2
    0000185C 32C0                   CMP/EQ      R12,R2
    0000185E 8B04                   BF          L1278
      15062020.c  1099                Bdisp_AllClr_DDVRAM();
    00001860 4E0B                   JSR         @R14
    00001862 0009                   NOP
      15062020.c  1100                firstMenu();
    00001864 D115                   MOV.L       L1332+50,R1; _firstMenu
    00001866 410B                   JSR         @R1
    00001868 0009                   NOP
    0000186A              L1278:                            
      15062020.c  1101            }
      15062020.c  1102            if(KEY_CTRL_UP == key) {
    0000186A 63F2                   MOV.L       @R15,R3
    0000186C 33B0                   CMP/EQ      R11,R3
    0000186E 8B03                   BF          L1279
      15062020.c  1103                Bdisp_AllClr_DDVRAM();
    00001870 4E0B                   JSR         @R14
    00001872 0009                   NOP
      15062020.c  1104                lf3list_1();
    00001874 BF54                   BSR         _lf3list_1
    00001876 0009                   NOP
    00001878              L1279:                            
      15062020.c  1105            }
      15062020.c  1106            if(KEY_CTRL_DOWN == key) {
    00001878 62F2                   MOV.L       @R15,R2
    0000187A 32D0                   CMP/EQ      R13,R2
    0000187C 8BEB                   BF          L1277
      15062020.c  1107                Bdisp_AllClr_DDVRAM();
    0000187E 4E0B                   JSR         @R14
    00001880 0009                   NOP
      15062020.c  1108                lf3list_3();
    00001882 B01D                   BSR         _lf3list_3
    00001884 0009                   NOP
    00001886 AFE6                   BRA         L1277
    00001888 0009                   NOP
    0000188A              L1332:                            
    0000188A 7542                   .DATA.W     H'7542
    0000188C 7547                   .DATA.W     H'7547
    0000188E 0000                   .DATA.W     0
    00001890 <00000000>             .DATA.L     _locate
    00001894 <00000000>             .DATA.L     _Print
    00001898 <00000000>             .DATA.L     L792
    0000189C <00000000>             .DATA.L     L793
    000018A0 <00000000>             .DATA.L     L794
    000018A4 <00000000>             .DATA.L     L795
    000018A8 <00000000>             .DATA.L     L796
    000018AC <00000000>             .DATA.L     L797
    000018B0 <00000000>             .DATA.L     L798
    000018B4 <00000000>             .DATA.L     _GetKey
    000018B8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018BC <00000000>             .DATA.L     _firstMenu
      15062020.c  1109            }
      15062020.c  1110        } 
      15062020.c  1111    }
      15062020.c  1112    int lf3list_3(){   
    000018C0              _lf3list_3:                      ; function: lf3list_3
                                                           ; frame size=4
      15062020.c  1113        locate(1,1);
    000018C0 DE45                   MOV.L       L1333+4,R14; _locate
    000018C2 E501                   MOV         #1,R5
    000018C4 7FFC                   ADD         #-4,R15
    000018C6 4E0B                   JSR         @R14
    000018C8 6453                   MOV         R5,R4
      15062020.c  1114        Print((unsigned char*)"PC Technik       4/4");
    000018CA DD44                   MOV.L       L1333+8,R13; _Print
    000018CC D444                   MOV.L       L1333+12,R4; L806
    000018CE 4D0B                   JSR         @R13
    000018D0 0009                   NOP
      15062020.c  1115        locate(1,3);
    000018D2 E503                   MOV         #3,R5
    000018D4 4E0B                   JSR         @R14
    000018D6 E401                   MOV         #1,R4
      15062020.c  1116        Print((unsigned char*)"-Speichermedien(Fes-");
    000018D8 D442                   MOV.L       L1333+16,R4; L807
    000018DA 4D0B                   JSR         @R13
    000018DC 0009                   NOP
      15062020.c  1117        locate(3,4);
    000018DE E504                   MOV         #4,R5
    000018E0 4E0B                   JSR         @R14
    000018E2 E403                   MOV         #3,R4
      15062020.c  1118        Print((unsigned char*)"tplatte(SSD/HDD)/");
    000018E4 D440                   MOV.L       L1333+20,R4; L808
    000018E6 4D0B                   JSR         @R13
    000018E8 0009                   NOP
      15062020.c  1119        locate(3,5);
    000018EA E505                   MOV         #5,R5
    000018EC 4E0B                   JSR         @R14
    000018EE E403                   MOV         #3,R4
      15062020.c  1120        Print((unsigned char*)"RAM/USB-Stick)");
    000018F0 D43E                   MOV.L       L1333+24,R4; L809
    000018F2 4D0B                   JSR         @R13
    000018F4 0009                   NOP
      15062020.c  1121        locate(1,6);
    000018F6 E506                   MOV         #6,R5
    000018F8 4E0B                   JSR         @R14
    000018FA E401                   MOV         #1,R4
      15062020.c  1122        Print((unsigned char*)"-Dateiendungen (Word");
    000018FC D43C                   MOV.L       L1333+28,R4; L810
    000018FE 4D0B                   JSR         @R13
    00001900 0009                   NOP
      15062020.c  1123        locate(3,7);
    00001902 E507                   MOV         #7,R5
    00001904 4E0B                   JSR         @R14
    00001906 E403                   MOV         #3,R4
      15062020.c  1124        Print((unsigned char*)"=doc/docx PP=pptx/");
    00001908 D43A                   MOV.L       L1333+32,R4; L811
    0000190A 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000190C 0009                   NOP
      15062020.c  1125        locate(3,8);
    0000190E E508                   MOV         #8,R5
    00001910 4E0B                   JSR         @R14
    00001912 E403                   MOV         #3,R4
      15062020.c  1126        Print((unsigned char*)"ppt Excel=xls/xlsx");
    00001914 D438                   MOV.L       L1333+36,R4; L812
    00001916 4D0B                   JSR         @R13
    00001918 0009                   NOP
    0000191A DB38                   MOV.L       L1333+40,R11; _GetKey
    0000191C 9C5A                   MOV.W       L1333,R12  ; H'7532
    0000191E 6DC3                   MOV         R12,R13
    00001920 DE37                   MOV.L       L1333+44,R14; _Bdisp_AllClr_DDVRAM
    00001922 7D10                   ADD         #16,R13
      15062020.c  1127        while (1){
    00001924              L1282:                            
      15062020.c  1128            unsigned int key;       
      15062020.c  1129            GetKey(&key);
    00001924 4B0B                   JSR         @R11
    00001926 64F3                   MOV         R15,R4
      15062020.c  1130            if(KEY_CTRL_EXIT == key) {
    00001928 62F2                   MOV.L       @R15,R2
    0000192A 32C0                   CMP/EQ      R12,R2
    0000192C 8B04                   BF          L1283
      15062020.c  1131                Bdisp_AllClr_DDVRAM();
    0000192E 4E0B                   JSR         @R14
    00001930 0009                   NOP
      15062020.c  1132                firstMenu();
    00001932 D134                   MOV.L       L1333+48,R1; _firstMenu
    00001934 410B                   JSR         @R1
    00001936 0009                   NOP
    00001938              L1283:                            
      15062020.c  1133            }
      15062020.c  1134            if(KEY_CTRL_UP == key) {
    00001938 63F2                   MOV.L       @R15,R3
    0000193A 33D0                   CMP/EQ      R13,R3
    0000193C 8BF2                   BF          L1282
      15062020.c  1135                Bdisp_AllClr_DDVRAM();
    0000193E 4E0B                   JSR         @R14
    00001940 0009                   NOP
      15062020.c  1136                lf3list_2();
    00001942 BF55                   BSR         _lf3list_2
    00001944 0009                   NOP
    00001946 AFED                   BRA         L1282
    00001948 0009                   NOP
      15062020.c  1137            }
      15062020.c  1138        } 
      15062020.c  1139    }
      15062020.c  1140    
      15062020.c  1141    //Reihenschaltung
      15062020.c  1142    int lf4list(){   
    0000194A              _lf4list:                        ; function: lf4list
                                                           ; frame size=4
    0000194A 7FFC                   ADD         #-4,R15
      15062020.c  1143        locate(1,1);
    0000194C DE22                   MOV.L       L1333+4,R14; _locate
    0000194E E501                   MOV         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001950 4E0B                   JSR         @R14
    00001952 6453                   MOV         R5,R4
      15062020.c  1144        Print((unsigned char*)"Reihenschaltung  1/4");
    00001954 DD21                   MOV.L       L1333+8,R13; _Print
    00001956 D42C                   MOV.L       L1333+52,R4; L818
    00001958 4D0B                   JSR         @R13
    0000195A 0009                   NOP
      15062020.c  1145        locate(1,3);
    0000195C E503                   MOV         #3,R5
    0000195E 4E0B                   JSR         @R14
    00001960 E401                   MOV         #1,R4
      15062020.c  1146        Print((unsigned char*)"U=R*I        R=U^2/P");
    00001962 D42A                   MOV.L       L1333+56,R4; L819
    00001964 4D0B                   JSR         @R13
    00001966 0009                   NOP
      15062020.c  1147        locate(1,4);
    00001968 E504                   MOV         #4,R5
    0000196A 4E0B                   JSR         @R14
    0000196C E401                   MOV         #1,R4
      15062020.c  1148        Print((unsigned char*)"U=P/I        R=P/I^2");
    0000196E D428                   MOV.L       L1333+60,R4; L820
    00001970 4D0B                   JSR         @R13
    00001972 0009                   NOP
      15062020.c  1149        locate(1,5);
    00001974 E505                   MOV         #5,R5
    00001976 4E0B                   JSR         @R14
    00001978 E401                   MOV         #1,R4
      15062020.c  1150        Print((unsigned char*)"U=Wurzel(P*R)R=U/I");
    0000197A D426                   MOV.L       L1333+64,R4; L821
    0000197C 4D0B                   JSR         @R13
    0000197E 0009                   NOP
      15062020.c  1151        locate(1,6);
    00001980 E506                   MOV         #6,R5
    00001982 4E0B                   JSR         @R14
    00001984 E401                   MOV         #1,R4
      15062020.c  1152        Print((unsigned char*)"I=U/R        P=R*I^2");
    00001986 D424                   MOV.L       L1333+68,R4; L822
    00001988 4D0B                   JSR         @R13
    0000198A 0009                   NOP
      15062020.c  1153        locate(1,7);
    0000198C E507                   MOV         #7,R5
    0000198E 4E0B                   JSR         @R14
    00001990 E401                   MOV         #1,R4
      15062020.c  1154        Print((unsigned char*)"I=P/U        P=U^2/R");
    00001992 D422                   MOV.L       L1333+72,R4; L823
    00001994 4D0B                   JSR         @R13
    00001996 0009                   NOP
      15062020.c  1155        locate(1,8);
    00001998 E508                   MOV         #8,R5
    0000199A 4E0B                   JSR         @R14
    0000199C E401                   MOV         #1,R4
      15062020.c  1156        Print((unsigned char*)"I=Wurzel(P/R)P=U*I");
    0000199E D420                   MOV.L       L1333+76,R4; L824
    000019A0 4D0B                   JSR         @R13
    000019A2 0009                   NOP
    000019A4 DB15                   MOV.L       L1333+40,R11; _GetKey
    000019A6 9C15                   MOV.W       L1333,R12  ; H'7532




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000019A8 DE15                   MOV.L       L1333+44,R14; _Bdisp_AllClr_DDVRAM
    000019AA 6DC3                   MOV         R12,R13
    000019AC 7D15                   ADD         #21,R13
      15062020.c  1157        while (1){
    000019AE              L1286:                            
      15062020.c  1158            unsigned int key;       
      15062020.c  1159            GetKey(&key);
    000019AE 4B0B                   JSR         @R11
    000019B0 64F3                   MOV         R15,R4
      15062020.c  1160            if(KEY_CTRL_EXIT == key) {
    000019B2 62F2                   MOV.L       @R15,R2
    000019B4 32C0                   CMP/EQ      R12,R2
    000019B6 8B04                   BF          L1287
      15062020.c  1161                Bdisp_AllClr_DDVRAM();
    000019B8 4E0B                   JSR         @R14
    000019BA 0009                   NOP
      15062020.c  1162                firstMenu();
    000019BC D111                   MOV.L       L1333+48,R1; _firstMenu
    000019BE 410B                   JSR         @R1
    000019C0 0009                   NOP
    000019C2              L1287:                            
      15062020.c  1163            }
      15062020.c  1164            if(KEY_CTRL_DOWN == key) {
    000019C2 63F2                   MOV.L       @R15,R3
    000019C4 33D0                   CMP/EQ      R13,R3
    000019C6 8BF2                   BF          L1286
      15062020.c  1165                Bdisp_AllClr_DDVRAM();
    000019C8 4E0B                   JSR         @R14
    000019CA 0009                   NOP
      15062020.c  1166                lf4list_1();
    000019CC B02A                   BSR         _lf4list_1
    000019CE 0009                   NOP
    000019D0 AFED                   BRA         L1286
    000019D2 0009                   NOP
    000019D4              L1333:                            
    000019D4 7532                   .DATA.W     H'7532
    000019D6 0000                   .DATA.W     0
    000019D8 <00000000>             .DATA.L     _locate
    000019DC <00000000>             .DATA.L     _Print
    000019E0 <00000000>             .DATA.L     L806
    000019E4 <00000000>             .DATA.L     L807
    000019E8 <00000000>             .DATA.L     L808
    000019EC <00000000>             .DATA.L     L809
    000019F0 <00000000>             .DATA.L     L810
    000019F4 <00000000>             .DATA.L     L811
    000019F8 <00000000>             .DATA.L     L812
    000019FC <00000000>             .DATA.L     _GetKey
    00001A00 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001A04 <00000000>             .DATA.L     _firstMenu
    00001A08 <00000000>             .DATA.L     L818
    00001A0C <00000000>             .DATA.L     L819
    00001A10 <00000000>             .DATA.L     L820
    00001A14 <00000000>             .DATA.L     L821
    00001A18 <00000000>             .DATA.L     L822
    00001A1C <00000000>             .DATA.L     L823
    00001A20 <00000000>             .DATA.L     L824
      15062020.c  1167            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c  1168        } 
      15062020.c  1169    }
      15062020.c  1170    int lf4list_1(){   
    00001A24              _lf4list_1:                      ; function: lf4list_1
                                                           ; frame size=4
      15062020.c  1171        locate(1,1);
    00001A24 DE3E                   MOV.L       L1334+4,R14; _locate
    00001A26 E501                   MOV         #1,R5
    00001A28 7FFC                   ADD         #-4,R15
    00001A2A 4E0B                   JSR         @R14
    00001A2C 6453                   MOV         R5,R4
      15062020.c  1172        Print((unsigned char*)"Reihenschaltung  2/4");
    00001A2E DD3D                   MOV.L       L1334+8,R13; _Print
    00001A30 D43D                   MOV.L       L1334+12,R4; L831
    00001A32 4D0B                   JSR         @R13
    00001A34 0009                   NOP
      15062020.c  1173        locate(1,3);
    00001A36 E503                   MOV         #3,R5
    00001A38 4E0B                   JSR         @R14
    00001A3A E401                   MOV         #1,R4
      15062020.c  1174        Print((unsigned char*)" O--[R1]-[R2]-[R3]--");
    00001A3C D43B                   MOV.L       L1334+16,R4; L832
    00001A3E 4D0B                   JSR         @R13
    00001A40 0009                   NOP
      15062020.c  1175        locate(1,4);
    00001A42 E504                   MOV         #4,R5
    00001A44 4E0B                   JSR         @R14
    00001A46 E401                   MOV         #1,R4
      15062020.c  1176        Print((unsigned char*)" UUptoDown   <-I   |");
    00001A48 D439                   MOV.L       L1334+20,R4; L833
    00001A4A 4D0B                   JSR         @R13
    00001A4C 0009                   NOP
      15062020.c  1177        locate(1,5);
    00001A4E E505                   MOV         #5,R5
    00001A50 4E0B                   JSR         @R14
    00001A52 E401                   MOV         #1,R4
      15062020.c  1178        Print((unsigned char*)" O------------------");
    00001A54 D437                   MOV.L       L1334+24,R4; L834
    00001A56 4D0B                   JSR         @R13
    00001A58 0009                   NOP
    00001A5A DA37                   MOV.L       L1334+28,R10; _GetKey
    00001A5C 9B5E                   MOV.W       L1334,R11  ; H'7542
    00001A5E 6CB3                   MOV         R11,R12
    00001A60 9D5D                   MOV.W       L1334+2,R13; H'7547
    00001A62 7CF0                   ADD         #-16,R12
    00001A64 DE35                   MOV.L       L1334+32,R14; _Bdisp_AllClr_DDVRAM
      15062020.c  1179        while (1){
    00001A66              L1290:                            
      15062020.c  1180            unsigned int key;       
      15062020.c  1181            GetKey(&key);
    00001A66 4A0B                   JSR         @R10
    00001A68 64F3                   MOV         R15,R4
      15062020.c  1182            if(KEY_CTRL_EXIT == key) {
    00001A6A 62F2                   MOV.L       @R15,R2
    00001A6C 32C0                   CMP/EQ      R12,R2
    00001A6E 8B04                   BF          L1291
      15062020.c  1183                Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A70 4E0B                   JSR         @R14
    00001A72 0009                   NOP
      15062020.c  1184                firstMenu();
    00001A74 D132                   MOV.L       L1334+36,R1; _firstMenu
    00001A76 410B                   JSR         @R1
    00001A78 0009                   NOP
    00001A7A              L1291:                            
      15062020.c  1185            }
      15062020.c  1186            if(KEY_CTRL_UP == key) {
    00001A7A 63F2                   MOV.L       @R15,R3
    00001A7C 33B0                   CMP/EQ      R11,R3
    00001A7E 8B03                   BF          L1292
      15062020.c  1187                Bdisp_AllClr_DDVRAM();
    00001A80 4E0B                   JSR         @R14
    00001A82 0009                   NOP
      15062020.c  1188                lf4list();
    00001A84 BF61                   BSR         _lf4list
    00001A86 0009                   NOP
    00001A88              L1292:                            
      15062020.c  1189            }
      15062020.c  1190            if(KEY_CTRL_DOWN == key) {
    00001A88 62F2                   MOV.L       @R15,R2
    00001A8A 32D0                   CMP/EQ      R13,R2
    00001A8C 8BEB                   BF          L1290
      15062020.c  1191                Bdisp_AllClr_DDVRAM();
    00001A8E 4E0B                   JSR         @R14
    00001A90 0009                   NOP
      15062020.c  1192                lf4list_2();
    00001A92 B002                   BSR         _lf4list_2
    00001A94 0009                   NOP
    00001A96 AFE6                   BRA         L1290
    00001A98 0009                   NOP
      15062020.c  1193            }
      15062020.c  1194        } 
      15062020.c  1195    }
      15062020.c  1196    int lf4list_2(){   
    00001A9A              _lf4list_2:                      ; function: lf4list_2
                                                           ; frame size=4
    00001A9A 7FFC                   ADD         #-4,R15
      15062020.c  1197        locate(1,1);
    00001A9C DE20                   MOV.L       L1334+4,R14; _locate
    00001A9E E501                   MOV         #1,R5
    00001AA0 4E0B                   JSR         @R14
    00001AA2 6453                   MOV         R5,R4
      15062020.c  1198        Print((unsigned char*)"Reihenschaltung  3/4");
    00001AA4 DD1F                   MOV.L       L1334+8,R13; _Print
    00001AA6 D427                   MOV.L       L1334+40,R4; L842
    00001AA8 4D0B                   JSR         @R13
    00001AAA 0009                   NOP
      15062020.c  1199        locate(2,3);
    00001AAC E503                   MOV         #3,R5
    00001AAE 4E0B                   JSR         @R14
    00001AB0 E402                   MOV         #2,R4
      15062020.c  1200        Print((unsigned char*)"Ug = U1 + U2 + U3");
    00001AB2 D425                   MOV.L       L1334+44,R4; L843
    00001AB4 4D0B                   JSR         @R13
    00001AB6 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      15062020.c  1201        locate(2,4);
    00001AB8 E504                   MOV         #4,R5
    00001ABA 4E0B                   JSR         @R14
    00001ABC E402                   MOV         #2,R4
      15062020.c  1202        Print((unsigned char*)"Ig = I1 = I2 = I3");
    00001ABE D423                   MOV.L       L1334+48,R4; L844
    00001AC0 4D0B                   JSR         @R13
    00001AC2 0009                   NOP
      15062020.c  1203        locate(2,5);
    00001AC4 E505                   MOV         #5,R5
    00001AC6 4E0B                   JSR         @R14
    00001AC8 E402                   MOV         #2,R4
      15062020.c  1204        Print((unsigned char*)"Rg = R1 + R2 + R3");
    00001ACA D421                   MOV.L       L1334+52,R4; L845
    00001ACC 4D0B                   JSR         @R13
    00001ACE 0009                   NOP
      15062020.c  1205        locate(2,5);
    00001AD0 E505                   MOV         #5,R5
    00001AD2 4E0B                   JSR         @R14
    00001AD4 E402                   MOV         #2,R4
      15062020.c  1206        Print((unsigned char*)"Pg = P1 + P2 + P3");
    00001AD6 D41F                   MOV.L       L1334+56,R4; L846
    00001AD8 4D0B                   JSR         @R13
    00001ADA 0009                   NOP
    00001ADC DA16                   MOV.L       L1334+28,R10; _GetKey
    00001ADE 9B1D                   MOV.W       L1334,R11  ; H'7542
    00001AE0 9D1D                   MOV.W       L1334+2,R13; H'7547
    00001AE2 6CB3                   MOV         R11,R12
    00001AE4 DE15                   MOV.L       L1334+32,R14; _Bdisp_AllClr_DDVRAM
    00001AE6 7CF0                   ADD         #-16,R12
      15062020.c  1207        while (1){
    00001AE8              L1295:                            
      15062020.c  1208            unsigned int key;       
      15062020.c  1209            GetKey(&key);
    00001AE8 4A0B                   JSR         @R10
    00001AEA 64F3                   MOV         R15,R4
      15062020.c  1210            if(KEY_CTRL_EXIT == key) {
    00001AEC 62F2                   MOV.L       @R15,R2
    00001AEE 32C0                   CMP/EQ      R12,R2
    00001AF0 8B04                   BF          L1296
      15062020.c  1211                Bdisp_AllClr_DDVRAM();
    00001AF2 4E0B                   JSR         @R14
    00001AF4 0009                   NOP
      15062020.c  1212                firstMenu();
    00001AF6 D112                   MOV.L       L1334+36,R1; _firstMenu
    00001AF8 410B                   JSR         @R1
    00001AFA 0009                   NOP
    00001AFC              L1296:                            
      15062020.c  1213            }
      15062020.c  1214            if(KEY_CTRL_UP == key) {
    00001AFC 63F2                   MOV.L       @R15,R3
    00001AFE 33B0                   CMP/EQ      R11,R3
    00001B00 8B03                   BF          L1297
      15062020.c  1215                Bdisp_AllClr_DDVRAM();
    00001B02 4E0B                   JSR         @R14
    00001B04 0009                   NOP
      15062020.c  1216                lf4list_1();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B06 BF8D                   BSR         _lf4list_1
    00001B08 0009                   NOP
    00001B0A              L1297:                            
      15062020.c  1217            }
      15062020.c  1218            if(KEY_CTRL_DOWN == key) {
    00001B0A 62F2                   MOV.L       @R15,R2
    00001B0C 32D0                   CMP/EQ      R13,R2
    00001B0E 8BEB                   BF          L1295
      15062020.c  1219                Bdisp_AllClr_DDVRAM();
    00001B10 4E0B                   JSR         @R14
    00001B12 0009                   NOP
      15062020.c  1220                lf4list_3();
    00001B14 B020                   BSR         _lf4list_3
    00001B16 0009                   NOP
    00001B18 AFE6                   BRA         L1295
    00001B1A 0009                   NOP
    00001B1C              L1334:                            
    00001B1C 7542                   .DATA.W     H'7542
    00001B1E 7547                   .DATA.W     H'7547
    00001B20 <00000000>             .DATA.L     _locate
    00001B24 <00000000>             .DATA.L     _Print
    00001B28 <00000000>             .DATA.L     L831
    00001B2C <00000000>             .DATA.L     L832
    00001B30 <00000000>             .DATA.L     L833
    00001B34 <00000000>             .DATA.L     L834
    00001B38 <00000000>             .DATA.L     _GetKey
    00001B3C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001B40 <00000000>             .DATA.L     _firstMenu
    00001B44 <00000000>             .DATA.L     L842
    00001B48 <00000000>             .DATA.L     L843
    00001B4C <00000000>             .DATA.L     L844
    00001B50 <00000000>             .DATA.L     L845
    00001B54 <00000000>             .DATA.L     L846
      15062020.c  1221            }
      15062020.c  1222        } 
      15062020.c  1223    }
      15062020.c  1224    int lf4list_3(){   
    00001B58              _lf4list_3:                      ; function: lf4list_3
                                                           ; frame size=4
      15062020.c  1225        locate(1,1);
    00001B58 DE1C                   MOV.L       L1335+2,R14; _locate
    00001B5A E501                   MOV         #1,R5
    00001B5C 7FFC                   ADD         #-4,R15
    00001B5E 4E0B                   JSR         @R14
    00001B60 6453                   MOV         R5,R4
      15062020.c  1226        Print((unsigned char*)"Reihenschaltung  4/4");
    00001B62 DD1B                   MOV.L       L1335+6,R13; _Print
    00001B64 D41B                   MOV.L       L1335+10,R4; L854
    00001B66 4D0B                   JSR         @R13
    00001B68 0009                   NOP
      15062020.c  1227        locate(2,3);
    00001B6A E503                   MOV         #3,R5
    00001B6C 4E0B                   JSR         @R14
    00001B6E E402                   MOV         #2,R4
      15062020.c  1228        Print((unsigned char*)"U1 = R1 * I");
    00001B70 D419                   MOV.L       L1335+14,R4; L855
    00001B72 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B74 0009                   NOP
      15062020.c  1229        locate(2,4);
    00001B76 E504                   MOV         #4,R5
    00001B78 4E0B                   JSR         @R14
    00001B7A E402                   MOV         #2,R4
      15062020.c  1230        Print((unsigned char*)"R2 = U2 / I");
    00001B7C D417                   MOV.L       L1335+18,R4; L856
    00001B7E 4D0B                   JSR         @R13
    00001B80 0009                   NOP
      15062020.c  1231        locate(2,5);
    00001B82 E505                   MOV         #5,R5
    00001B84 4E0B                   JSR         @R14
    00001B86 E402                   MOV         #2,R4
      15062020.c  1232        Print((unsigned char*)"I3 = U3 / R3");
    00001B88 D415                   MOV.L       L1335+22,R4; L857
    00001B8A 4D0B                   JSR         @R13
    00001B8C 0009                   NOP
      15062020.c  1233        locate(2,5);
    00001B8E E505                   MOV         #5,R5
    00001B90 4E0B                   JSR         @R14
    00001B92 E402                   MOV         #2,R4
      15062020.c  1234        Print((unsigned char*)"U2 = P2 / I");
    00001B94 D413                   MOV.L       L1335+26,R4; L858
    00001B96 4D0B                   JSR         @R13
    00001B98 0009                   NOP
    00001B9A DB13                   MOV.L       L1335+30,R11; _GetKey
    00001B9C 9C15                   MOV.W       L1335,R12  ; H'7532
    00001B9E 6DC3                   MOV         R12,R13
    00001BA0 DE12                   MOV.L       L1335+34,R14; _Bdisp_AllClr_DDVRAM
    00001BA2 7D10                   ADD         #16,R13
      15062020.c  1235        while (1){
    00001BA4              L1300:                            
      15062020.c  1236            unsigned int key;       
      15062020.c  1237            GetKey(&key);
    00001BA4 4B0B                   JSR         @R11
    00001BA6 64F3                   MOV         R15,R4
      15062020.c  1238            if(KEY_CTRL_EXIT == key) {
    00001BA8 62F2                   MOV.L       @R15,R2
    00001BAA 32C0                   CMP/EQ      R12,R2
    00001BAC 8B04                   BF          L1301
      15062020.c  1239                Bdisp_AllClr_DDVRAM();
    00001BAE 4E0B                   JSR         @R14
    00001BB0 0009                   NOP
      15062020.c  1240                firstMenu();
    00001BB2 D10F                   MOV.L       L1335+38,R1; _firstMenu
    00001BB4 410B                   JSR         @R1
    00001BB6 0009                   NOP
    00001BB8              L1301:                            
      15062020.c  1241            }
      15062020.c  1242            if(KEY_CTRL_UP == key) {
    00001BB8 63F2                   MOV.L       @R15,R3
    00001BBA 33D0                   CMP/EQ      R13,R3
    00001BBC 8BF2                   BF          L1300
      15062020.c  1243                Bdisp_AllClr_DDVRAM();
    00001BBE 4E0B                   JSR         @R14
    00001BC0 0009                   NOP
      15062020.c  1244                lf4list_2();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BC2 BF6A                   BSR         _lf4list_2
    00001BC4 0009                   NOP
    00001BC6 AFED                   BRA         L1300
    00001BC8 0009                   NOP
    00001BCA              L1335:                            
    00001BCA 7532                   .DATA.W     H'7532
    00001BCC <00000000>             .DATA.L     _locate
    00001BD0 <00000000>             .DATA.L     _Print
    00001BD4 <00000000>             .DATA.L     L854
    00001BD8 <00000000>             .DATA.L     L855
    00001BDC <00000000>             .DATA.L     L856
    00001BE0 <00000000>             .DATA.L     L857
    00001BE4 <00000000>             .DATA.L     L858
    00001BE8 <00000000>             .DATA.L     _GetKey
    00001BEC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001BF0 <00000000>             .DATA.L     _firstMenu
      15062020.c  1245            }
      15062020.c  1246        } 
      15062020.c  1247    }
      15062020.c  1248    
      15062020.c  1249    //****************************************************************************
      15062020.c  1250    //**************                                              ****************
      15062020.c  1251    //**************                 Notice!                      ****************
      15062020.c  1252    //**************                                              ****************
      15062020.c  1253    //**************  Please do not change the following source.  ****************
      15062020.c  1254    //**************                                              ****************
      15062020.c  1255    //****************************************************************************
      15062020.c  1256    #pragma section _BR_Size
      15062020.c  1257    unsigned long BR_Size;
      15062020.c  1258    #pragma section
      15062020.c  1259    #pragma section _TOP
      15062020.c  1260    //****************************************************************************
      15062020.c  1261    //  InitializeSystem
      15062020.c  1262    //
      15062020.c  1263    //  param   :   isAppli   : 1 = Application / 0 = eActivity
      15062020.c  1264    //              OptionNum : Option Number (only eActivity)
      15062020.c  1265    //
      15062020.c  1266    //  retval  :   1 = No error / 0 = Error
      15062020.c  1267    //
      15062020.c  1268    //****************************************************************************
      15062020.c  1269    int InitializeSystem(int isAppli, unsigned short OptionNum){
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      15062020.c  1270        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L1336+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1336:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      15062020.c  1271    }
      15062020.c  1272    #pragma section
D   00000000              _drmCheck:                       ; static: drmCheck
    00000000 00000000               .DATA.L     H'00000000
C   00000000              L352:
    00000000 <00000000>             .DATA.L     L353,L354,L355,L356,L357,L358
             <00000000>   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000018              L359:
    00000018 537069636B             .SDATA      "Spicker :D"
             6572203A44   
    00000022 00                     .DATA.B     H'00
    00000023 00000001               .RES.B      1
    00000024              L363:
    00000024 3E                     .SDATA      ">"
    00000025 00                     .DATA.B     H'00
    00000026 00000002               .RES.W      1
    00000028              L366:
    00000028 20                     .SDATA      " "
    00000029 00                     .DATA.B     H'00
    0000002A 00000002               .RES.W      1
    0000002C              L379:
    0000002C 5445535435             .SDATA      "TEST5"
    00000031 00                     .DATA.B     H'00
    00000032 00000002               .RES.W      1
    00000034              L386:
    00000034 44524D                 .SDATA      "DRM"
    00000037 00                     .DATA.B     H'00
    00000038              L387:
    00000038 436F646520             .SDATA      "Code eingeben"
             65696E6765   
             62656E       
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L388:
    00000048 5B205D205B             .SDATA      "[ ] [ ] [ ]"
             205D205B20   
             5D           
    00000053 00                     .DATA.B     H'00
    00000054              L391:
    00000054 30                     .SDATA      "0"
    00000055 00                     .DATA.B     H'00
    00000056 00000002               .RES.W      1
    00000058              L393:
    00000058 31                     .SDATA      "1"
    00000059 00                     .DATA.B     H'00
    0000005A 00000002               .RES.W      1
    0000005C              L395:
    0000005C 32                     .SDATA      "2"
    0000005D 00                     .DATA.B     H'00
    0000005E 00000002               .RES.W      1
    00000060              L397:
    00000060 33                     .SDATA      "3"
    00000061 00                     .DATA.B     H'00
    00000062 00000002               .RES.W      1
    00000064              L399:
    00000064 34                     .SDATA      "4"
    00000065 00                     .DATA.B     H'00
    00000066 00000002               .RES.W      1
    00000068              L401:
    00000068 35                     .SDATA      "5"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000069 00                     .DATA.B     H'00
    0000006A 00000002               .RES.W      1
    0000006C              L403:
    0000006C 36                     .SDATA      "6"
    0000006D 00                     .DATA.B     H'00
    0000006E 00000002               .RES.W      1
    00000070              L405:
    00000070 37                     .SDATA      "7"
    00000071 00                     .DATA.B     H'00
    00000072 00000002               .RES.W      1
    00000074              L407:
    00000074 38                     .SDATA      "8"
    00000075 00                     .DATA.B     H'00
    00000076 00000002               .RES.W      1
    00000078              L409:
    00000078 39                     .SDATA      "9"
    00000079 00                     .DATA.B     H'00
    0000007A 00000002               .RES.W      1
    0000007C              L421:
    0000007C <00000000>             .DATA.L     L422,L423,L424,L425,L426
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000090              L447:
    00000090 2D4D696E69             .SDATA      "-Minimal Prinzip"
             6D616C2050   
             72696E7A69   
             70           
    000000A0 00                     .DATA.B     H'00
    000000A1 00000001               .RES.B      1
    000000A2 00000002               .RES.W      1
    000000A4              L448:
    000000A4 566F726765             .SDATA      "Vorgegebenes Ziel"
             676562656E   
             6573205A69   
             656C         
    000000B5 00                     .DATA.B     H'00
    000000B6 00000002               .RES.W      1
    000000B8              L449:
    000000B8 77656E6967             .SDATA      "wenig Ausgaben"
             2041757367   
             6162656E     
    000000C6 00                     .DATA.B     H'00
    000000C7 00000001               .RES.B      1
    000000C8              L450:
    000000C8 2D4D617869             .SDATA      "-Maximal Prinzip"
             6D616C2050   
             72696E7A69   
             70           
    000000D8 00                     .DATA.B     H'00
    000000D9 00000001               .RES.B      1
    000000DA 00000002               .RES.W      1
    000000DC              L451:
    000000DC 45696E7361             .SDATA      "Einsatz vorgegeben"
             747A20766F   
             7267656765   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             62656E       
    000000EE 00                     .DATA.B     H'00
    000000EF 00000001               .RES.B      1
    000000F0              L452:
    000000F0 7669656C20             .SDATA      "viel Ziel erreichen"
             5A69656C20   
             6572726569   
             6368656E     
    00000103 00                     .DATA.B     H'00
    00000104              L457:
    00000104 5265636874             .SDATA      "Rechtsformen 1/2"
             73666F726D   
             656E20312F   
             32           
    00000114 00                     .DATA.B     H'00
    00000115 00000001               .RES.B      1
    00000116 00000002               .RES.W      1
    00000118              L458:
    00000118 506572736F             .SDATA      "Personengesellschaft"
             6E656E6765   
             73656C6C73   
             6368616674   
    0000012C 00                     .DATA.B     H'00
    0000012D 00000001               .RES.B      1
    0000012E 00000002               .RES.W      1
    00000130              L459:
    00000130 2D652E4B2E             .SDATA      "-e.K. eingetragener"
             2065696E67   
             6574726167   
             656E6572     
    00000143 00                     .DATA.B     H'00
    00000144              L460:
    00000144 4B6175666D             .SDATA      "Kaufmann"
             616E6E       
    0000014C 00                     .DATA.B     H'00
    0000014D 00000001               .RES.B      1
    0000014E 00000002               .RES.W      1
    00000150              L461:
    00000150 2D4F484720             .SDATA      "-OHG offene Handels-"
             6F6666656E   
             652048616E   
             64656C732D   
    00000164 00                     .DATA.B     H'00
    00000165 00000001               .RES.B      1
    00000166 00000002               .RES.W      1
    00000168              L462:
    00000168 676573656C             .SDATA      "gesellschaft"
             6C73636861   
             6674         
    00000174 00                     .DATA.B     H'00
    00000175 00000001               .RES.B      1
    00000176 00000002               .RES.W      1
    00000178              L463:
    00000178 2D4B67204B             .SDATA      "-Kg Kommandit-"
             6F6D6D616E   
             6469742D     
    00000186 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000187 00000001               .RES.B      1
    00000188              L470:
    00000188 5265636874             .SDATA      "Rechtsformen 2/2"
             73666F726D   
             656E20322F   
             32           
    00000198 00                     .DATA.B     H'00
    00000199 00000001               .RES.B      1
    0000019A 00000002               .RES.W      1
    0000019C              L471:
    0000019C 4B61706974             .SDATA      "Kapitalgesellschaft"
             616C676573   
             656C6C7363   
             68616674     
    000001AF 00                     .DATA.B     H'00
    000001B0              L472:
    000001B0 2D476D6248             .SDATA      "-GmbH Gesellschaft"
             2047657365   
             6C6C736368   
             616674       
    000001C2 00                     .DATA.B     H'00
    000001C3 00000001               .RES.B      1
    000001C4              L473:
    000001C4 6D69742062             .SDATA      "mit beschrankter"
             6573636872   
             616E6B7465   
             72           
    000001D4 00                     .DATA.B     H'00
    000001D5 00000001               .RES.B      1
    000001D6 00000002               .RES.W      1
    000001D8              L474:
    000001D8 4861667475             .SDATA      "Haftung"
             6E67         
    000001DF 00                     .DATA.B     H'00
    000001E0              L475:
    000001E0 2D41472041             .SDATA      "-AG Aktien-"
             6B7469656E   
             2D           
    000001EB 00                     .DATA.B     H'00
    000001EC              L481:
    000001EC 2D4F48473A             .SDATA      "-OHG: 4% auf Kapital"
             2034252061   
             7566204B61   
             706974616C   
    00000200 00                     .DATA.B     H'00
    00000201 00000001               .RES.B      1
    00000202 00000002               .RES.W      1
    00000204              L482:
    00000204 45696E6C61             .SDATA      "Einlagen, Rest nach"
             67656E2C20   
             5265737420   
             6E616368     
    00000217 00                     .DATA.B     H'00
    00000218              L483:
    00000218 4B6F657066             .SDATA      "Koepfen."
             656E2E       
    00000220 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000221 00000001               .RES.B      1
    00000222 00000002               .RES.W      1
    00000224              L484:
    00000224 2D4B473A20             .SDATA      "-KG: 4% auf Kapital"
             3425206175   
             66204B6170   
             6974616C     
    00000237 00                     .DATA.B     H'00
    00000238              L485:
    00000238 45696E6C61             .SDATA      "Einlagen, Rest im"
             67656E2C20   
             5265737420   
             696D         
    00000249 00                     .DATA.B     H'00
    0000024A 00000002               .RES.W      1
    0000024C              L486:
    0000024C 616E67656D             .SDATA      "angemessenen"
             657373656E   
             656E         
    00000258 00                     .DATA.B     H'00
    00000259 00000001               .RES.B      1
    0000025A 00000002               .RES.W      1
    0000025C              L487:
    0000025C 5665726861             .SDATA      "Verhaeltnissen"
             656C746E69   
             7373656E     
    0000026A 00                     .DATA.B     H'00
    0000026B 00000001               .RES.B      1
    0000026C              L492:
    0000026C 4861667475             .SDATA      "Haftung 1/5"
             6E6720312F   
             35           
    00000277 00                     .DATA.B     H'00
    00000278              L493:
    00000278 4B6F6D6D61             .SDATA      "Kommanditgesellschaf"
             6E64697467   
             6573656C6C   
             7363686166   
    0000028C 00                     .DATA.B     H'00
    0000028D 00000001               .RES.B      1
    0000028E 00000002               .RES.W      1
    00000290              L494:
    00000290 2D4B6F6D6D             .SDATA      "-Kommandist: Haftung"
             616E646973   
             743A204861   
             6674756E67   
    000002A4 00                     .DATA.B     H'00
    000002A5 00000001               .RES.B      1
    000002A6 00000002               .RES.W      1
    000002A8              L495:
    000002A8 6D69742065             .SDATA      "mit eingelargertem"
             696E67656C   
             6172676572   
             74656D       
    000002BA 00                     .DATA.B     H'00
    000002BB 00000001               .RES.B      1
    000002BC              L496:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002BC 4B61706974             .SDATA      "Kapital, keine"
             616C2C206B   
             65696E65     
    000002CA 00                     .DATA.B     H'00
    000002CB 00000001               .RES.B      1
    000002CC              L497:
    000002CC 4765736368             .SDATA      "Geschaftsfuhrung"
             6166747366   
             756872756E   
             67           
    000002DC 00                     .DATA.B     H'00
    000002DD 00000001               .RES.B      1
    000002DE 00000002               .RES.W      1
    000002E0              L498:
    000002E0 2D4B6F6D70             .SDATA      "-Komplimentaer"
             6C696D656E   
             74616572     
    000002EE 00                     .DATA.B     H'00
    000002EF 00000001               .RES.B      1
    000002F0              L499:
    000002F0 4861667475             .SDATA      "Haftung mit Kapital"
             6E67206D69   
             74204B6170   
             6974616C     
    00000303 00                     .DATA.B     H'00
    00000304              L506:
    00000304 4861667475             .SDATA      "Haftung 2/5"
             6E6720322F   
             35           
    0000030F 00                     .DATA.B     H'00
    00000310              L507:
    00000310 45696E6C61             .SDATA      "Einlagen und privat"
             67656E2075   
             6E64207072   
             69766174     
    00000323 00                     .DATA.B     H'00
    00000324              L508:
    00000324 4765736368             .SDATA      "Geschaftsfuhrer"
             6166747366   
             7568726572   
    00000333 00                     .DATA.B     H'00
    00000334              L509:
    00000334 4F6666656E             .SDATA      "Offene Handelsgesel."
             652048616E   
             64656C7367   
             6573656C2E   
    00000348 00                     .DATA.B     H'00
    00000349 00000001               .RES.B      1
    0000034A 00000002               .RES.W      1
    0000034C              L510:
    0000034C 2D756E6D69             .SDATA      "-unmittelbar ("
             7474656C62   
             61722028     
    0000035A 00                     .DATA.B     H'00
    0000035B 00000001               .RES.B      1
    0000035C              L511:
    0000035C 476C617562             .SDATA      "Glaubiger kann an"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6967657220   
             6B616E6E20   
             616E         
    0000036D 00                     .DATA.B     H'00
    0000036E 00000002               .RES.W      1
    00000370              L512:
    00000370 476573656C             .SDATA      "Gesellschafter"
             6C73636861   
             66746572     
    0000037E 00                     .DATA.B     H'00
    0000037F 00000001               .RES.B      1
    00000380              L520:
    00000380 4861667475             .SDATA      "Haftung 3/5"
             6E6720332F   
             35           
    0000038B 00                     .DATA.B     H'00
    0000038C              L521:
    0000038C 686572616E             .SDATA      "herantreten und"
             7472657465   
             6E20756E64   
    0000039B 00                     .DATA.B     H'00
    0000039C              L522:
    0000039C 536368756C             .SDATA      "Schulden einfordern"
             64656E2065   
             696E666F72   
             6465726E     
    000003AF 00                     .DATA.B     H'00
    000003B0              L523:
    000003B0 2D756E6265             .SDATA      "-unbeschrankt ("
             7363687261   
             6E6B742028   
    000003BF 00                     .DATA.B     H'00
    000003C0              L524:
    000003C0 7072697661             .SDATA      "privat+Gesellschaft"
             742B476573   
             656C6C7363   
             68616674     
    000003D3 00                     .DATA.B     H'00
    000003D4              L525:
    000003D4 7665726D6F             .SDATA      "vermoegen)"
             6567656E29   
    000003DE 00                     .DATA.B     H'00
    000003DF 00000001               .RES.B      1
    000003E0              L526:
    000003E0 2D536F6C69             .SDATA      "-Solidarisch ("
             6461726973   
             63682028     
    000003EE 00                     .DATA.B     H'00
    000003EF 00000001               .RES.B      1
    000003F0              L527:
    000003F0 67656D6569             .SDATA      "gemeinsame Haftung"
             6E73616D65   
             2048616674   
             756E67       
    00000402 00                     .DATA.B     H'00
    00000403 00000001               .RES.B      1
    00000404              L535:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000404 4861667475             .SDATA      "Haftung 4/5"
             6E6720342F   
             35           
    0000040F 00                     .DATA.B     H'00
    00000410              L536:
    00000410 696E20616C             .SDATA      "in alle fuer einen"
             6C65206675   
             6572206569   
             6E656E       
    00000422 00                     .DATA.B     H'00
    00000423 00000001               .RES.B      1
    00000424              L537:
    00000424 4D75736B65             .SDATA      "Musketierprinzip)"
             7469657270   
             72696E7A69   
             7029         
    00000435 00                     .DATA.B     H'00
    00000436 00000002               .RES.W      1
    00000438              L538:
    00000438 476D624820             .SDATA      "GmbH (Grundungs-"
             284772756E   
             64756E6773   
             2D           
    00000448 00                     .DATA.B     H'00
    00000449 00000001               .RES.B      1
    0000044A 00000002               .RES.W      1
    0000044C              L539:
    0000044C 6B61706974             .SDATA      "kapital 25.000Eur,"
             616C203235   
             2E30303045   
             75722C       
    0000045E 00                     .DATA.B     H'00
    0000045F 00000001               .RES.B      1
    00000460              L540:
    00000460 6E61636820             .SDATA      "nach Anteilen am"
             416E746569   
             6C656E2061   
             6D           
    00000470 00                     .DATA.B     H'00
    00000471 00000001               .RES.B      1
    00000472 00000002               .RES.W      1
    00000474              L548:
    00000474 4861667475             .SDATA      "Haftung 5/5"
             6E6720352F   
             35           
    0000047F 00                     .DATA.B     H'00
    00000480              L549:
    00000480 476573616D             .SDATA      "Gesamtvermoegen)"
             747665726D   
             6F6567656E   
             29           
    00000490 00                     .DATA.B     H'00
    00000491 00000001               .RES.B      1
    00000492 00000002               .RES.W      1
    00000494              L550:
    00000494 2D41472028             .SDATA      "-AG (Grundungs-"
             4772756E64   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             756E67732D   
    000004A3 00                     .DATA.B     H'00
    000004A4              L551:
    000004A4 6B61706974             .SDATA      "kapital 50.000Eur,"
             616C203530   
             2E30303045   
             75722C       
    000004B6 00                     .DATA.B     H'00
    000004B7 00000001               .RES.B      1
    000004B8              L552:
    000004B8 4469766964             .SDATA      "Dividenden, Kurs-"
             656E64656E   
             2C204B7572   
             732D         
    000004C9 00                     .DATA.B     H'00
    000004CA 00000002               .RES.W      1
    000004CC              L553:
    000004CC 676577696E             .SDATA      "gewinne, Anteile)"
             6E652C2041   
             6E7465696C   
             6529         
    000004DD 00                     .DATA.B     H'00
    000004DE 00000002               .RES.W      1
    000004E0              L559:
    000004E0 5072656973             .SDATA      "Preisbildungs... 1/3"
             62696C6475   
             6E67732E2E   
             2E20312F33   
    000004F4 00                     .DATA.B     H'00
    000004F5 00000001               .RES.B      1
    000004F6 00000002               .RES.W      1
    000004F8              L560:
    000004F8 2D4D61726B             .SDATA      "-Markt"
             74           
    000004FE 00                     .DATA.B     H'00
    000004FF 00000001               .RES.B      1
    00000500              L561:
    00000500 416E676562             .SDATA      "Angebot<->Nachfrage"
             6F743C2D3E   
             4E61636866   
             72616765     
    00000513 00                     .DATA.B     H'00
    00000514              L562:
    00000514 446572204D             .SDATA      "Der Markt wird"
             61726B7420   
             77697264     
    00000522 00                     .DATA.B     H'00
    00000523 00000001               .RES.B      1
    00000524              L563:
    00000524 4D69746869             .SDATA      "Mithilfe eines"
             6C66652065   
             696E6573     
    00000532 00                     .DATA.B     H'00
    00000533 00000001               .RES.B      1
    00000534              L564:
    00000534 4D6F64656C             .SDATA      "Modells vereinfacht"
             6C73207665   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7265696E66   
             61636874     
    00000547 00                     .DATA.B     H'00
    00000548              L565:
    00000548 6461726765             .SDATA      "dargestellt:"
             7374656C6C   
             743A         
    00000554 00                     .DATA.B     H'00
    00000555 00000001               .RES.B      1
    00000556 00000002               .RES.W      1
    00000558              L566:
    00000558 766F6C6C6B             .SDATA      "vollkommener Markt"
             6F6D6D656E   
             6572204D61   
             726B74       
    0000056A 00                     .DATA.B     H'00
    0000056B 00000001               .RES.B      1
    0000056C              L573:
    0000056C 5072656973             .SDATA      "Preisbildungs... 2/3"
             62696C6475   
             6E67732E2E   
             2E20322F33   
    00000580 00                     .DATA.B     H'00
    00000581 00000001               .RES.B      1
    00000582 00000002               .RES.W      1
    00000584              L574:
    00000584 5265616C69             .SDATA      "Realitat:"
             7461743A     
    0000058D 00                     .DATA.B     H'00
    0000058E 00000002               .RES.W      1
    00000590              L575:
    00000590 756E766F6C             .SDATA      "unvollkomm. Markt"
             6C6B6F6D6D   
             2E204D6172   
             6B74         
    000005A1 00                     .DATA.B     H'00
    000005A2 00000002               .RES.W      1
    000005A4              L576:
    000005A4 416E676562             .SDATA      "Angebotskurve"
             6F74736B75   
             727665       
    000005B1 00                     .DATA.B     H'00
    000005B2 00000002               .RES.W      1
    000005B4              L577:
    000005B4 312920416E             .SDATA      "1) Angebotskurve"
             6765626F74   
             736B757276   
             65           
    000005C4 00                     .DATA.B     H'00
    000005C5 00000001               .RES.B      1
    000005C6 00000002               .RES.W      1
    000005C8              L578:
    000005C8 3229204B61             .SDATA      "2) Kaufermarkt"
             756665726D   
             61726B74     
    000005D6 00                     .DATA.B     H'00
    000005D7 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005D8              L579:
    000005D8 332920476C             .SDATA      "3) Gleichgew.spreis"
             6569636867   
             65772E7370   
             72656973     
    000005EB 00                     .DATA.B     H'00
    000005EC              L587:
    000005EC 5072656973             .SDATA      "Preisbildungs... 3/3"
             62696C6475   
             6E67732E2E   
             2E20332F33   
    00000600 00                     .DATA.B     H'00
    00000601 00000001               .RES.B      1
    00000602 00000002               .RES.W      1
    00000604              L588:
    00000604 3429205665             .SDATA      "4) Verkaufermarkt"
             726B617566   
             65726D6172   
             6B74         
    00000615 00                     .DATA.B     H'00
    00000616 00000002               .RES.W      1
    00000618              L589:
    00000618 3529204E61             .SDATA      "5) Nachfragekurve"
             6368667261   
             67656B7572   
             7665         
    00000629 00                     .DATA.B     H'00
    0000062A 00000002               .RES.W      1
    0000062C              L590:
    0000062C 58203D2035             .SDATA      "X = 50Eur, 350Stk."
             304575722C   
             2033353053   
             746B2E       
    0000063E 00                     .DATA.B     H'00
    0000063F 00000001               .RES.B      1
    00000640              L591:
    00000640 5669656C20             .SDATA      "Viel Umsatz=50Eur."
             556D736174   
             7A3D353045   
             75722E       
    00000652 00                     .DATA.B     H'00
    00000653 00000001               .RES.B      1
    00000654              L592:
    00000654 5669656C20             .SDATA      "Viel Umsatz=350Stk."
             556D736174   
             7A3D333530   
             53746B2E     
    00000667 00                     .DATA.B     H'00
    00000668              L593:
    00000668 556D61783D             .SDATA      "Umax=50E*350S=17,5k"
             3530452A33   
             3530533D31   
             372C356B     
    0000067B 00                     .DATA.B     H'00
    0000067C              L605:
    0000067C <00000000>             .DATA.L     L606,L607,L608,L609
             <00000000>   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             <00000000>   
             <00000000>   
    0000068C              L628:
    0000068C 4F7267616E             .SDATA      "Organisation 1/4"
             6973617469   
             6F6E20312F   
             34           
    0000069C 00                     .DATA.B     H'00
    0000069D 00000001               .RES.B      1
    0000069E 00000002               .RES.W      1
    000006A0              L629:
    000006A0 2D5A776563             .SDATA      "-Zweckmassigkeit"
             6B6D617373   
             69676B6569   
             74           
    000006B0 00                     .DATA.B     H'00
    000006B1 00000001               .RES.B      1
    000006B2 00000002               .RES.W      1
    000006B4              L630:
    000006B4 4175666761             .SDATA      "Aufgab./Tatigkeiten"
             622E2F5461   
             7469676B65   
             6974656E     
    000006C7 00                     .DATA.B     H'00
    000006C8              L631:
    000006C8 736F6C6C74             .SDATA      "sollten dem"
             656E206465   
             6D           
    000006D3 00                     .DATA.B     H'00
    000006D4              L632:
    000006D4 556E746572             .SDATA      "Unternehmensziel"
             6E65686D65   
             6E737A6965   
             6C           
    000006E4 00                     .DATA.B     H'00
    000006E5 00000001               .RES.B      1
    000006E6 00000002               .RES.W      1
    000006E8              L633:
    000006E8 656E747370             .SDATA      "entsprechen alles"
             7265636865   
             6E20616C6C   
             6573         
    000006F9 00                     .DATA.B     H'00
    000006FA 00000002               .RES.W      1
    000006FC              L634:
    000006FC 616E646572             .SDATA      "andere ist unzweck."
             6520697374   
             20756E7A77   
             65636B2E     
    0000070F 00                     .DATA.B     H'00
    00000710              L641:
    00000710 4F7267616E             .SDATA      "Organisation 2/4"
             6973617469   
             6F6E20322F   
             34           
    00000720 00                     .DATA.B     H'00
    00000721 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000722 00000002               .RES.W      1
    00000724              L642:
    00000724 2D57697274             .SDATA      "-Wirtschaftlichkeit"
             7363686166   
             746C696368   
             6B656974     
    00000737 00                     .DATA.B     H'00
    00000738              L643:
    00000738 542C20412C             .SDATA      "T, A, Regelungen"
             2052656765   
             6C756E6765   
             6E           
    00000748 00                     .DATA.B     H'00
    00000749 00000001               .RES.B      1
    0000074A 00000002               .RES.W      1
    0000074C              L644:
    0000074C 736F6C6C74             .SDATA      "sollten dem oko-"
             656E206465   
             6D206F6B6F   
             2D           
    0000075C 00                     .DATA.B     H'00
    0000075D 00000001               .RES.B      1
    0000075E 00000002               .RES.W      1
    00000760              L645:
    00000760 6C6F676973             .SDATA      "logischem Prinzip"
             6368656D20   
             5072696E7A   
             6970         
    00000771 00                     .DATA.B     H'00
    00000772 00000002               .RES.W      1
    00000774              L646:
    00000774 656E747370             .SDATA      "entsprechen. Bsp.:"
             7265636865   
             6E2E204273   
             702E3A       
    00000786 00                     .DATA.B     H'00
    00000787 00000001               .RES.B      1
    00000788              L647:
    00000788 4D696E2E20             .SDATA      "Min. Max. Prinzip"
             4D61782E20   
             5072696E7A   
             6970         
    00000799 00                     .DATA.B     H'00
    0000079A 00000002               .RES.W      1
    0000079C              L655:
    0000079C 4F7267616E             .SDATA      "Organisation 3/4"
             6973617469   
             6F6E20332F   
             34           
    000007AC 00                     .DATA.B     H'00
    000007AD 00000001               .RES.B      1
    000007AE 00000002               .RES.W      1
    000007B0              L656:
    000007B0 2D4B6C6172             .SDATA      "-Klarheit"
             68656974     
    000007B9 00                     .DATA.B     H'00
    000007BA 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007BC              L657:
    000007BC 736F6C6C74             .SDATA      "sollten klar"
             656E206B6C   
             6172         
    000007C8 00                     .DATA.B     H'00
    000007C9 00000001               .RES.B      1
    000007CA 00000002               .RES.W      1
    000007CC              L658:
    000007CC 646566696E             .SDATA      "definiert sein,"
             6965727420   
             7365696E2C   
    000007DB 00                     .DATA.B     H'00
    000007DC              L659:
    000007DC 64616D6974             .SDATA      "damit jeder es"
             206A656465   
             72206573     
    000007EA 00                     .DATA.B     H'00
    000007EB 00000001               .RES.B      1
    000007EC              L660:
    000007EC 7665727374             .SDATA      "versteht."
             6568742E     
    000007F5 00                     .DATA.B     H'00
    000007F6 00000002               .RES.W      1
    000007F8              L668:
    000007F8 4F7267616E             .SDATA      "Organisation 4/4"
             6973617469   
             6F6E20342F   
             34           
    00000808 00                     .DATA.B     H'00
    00000809 00000001               .RES.B      1
    0000080A 00000002               .RES.W      1
    0000080C              L669:
    0000080C 2D476C6569             .SDATA      "-Gleichgewicht"
             6368676577   
             69636874     
    0000081A 00                     .DATA.B     H'00
    0000081B 00000001               .RES.B      1
    0000081C              L670:
    0000081C 4461756572             .SDATA      "Dauerregel (Organ-"
             726567656C   
             20284F7267   
             616E2D       
    0000082E 00                     .DATA.B     H'00
    0000082F 00000001               .RES.B      1
    00000830              L671:
    00000830 6973617469             .SDATA      "isation), Einzel ("
             6F6E292C20   
             45696E7A65   
             6C2028       
    00000842 00                     .DATA.B     H'00
    00000843 00000001               .RES.B      1
    00000844              L672:
    00000844 446973706F             .SDATA      "Disposition) u. "
             736974696F   
             6E2920752E   
             20           
    00000854 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000855 00000001               .RES.B      1
    00000856 00000002               .RES.W      1
    00000858              L673:
    00000858 496D70726F             .SDATA      "Improvisation."
             7669736174   
             696F6E2E     
    00000866 00                     .DATA.B     H'00
    00000867 00000001               .RES.B      1
    00000868              L674:
    00000868 756E746572             .SDATA      "unter/ueber-"
             2F75656265   
             722D         
    00000874 00                     .DATA.B     H'00
    00000875 00000001               .RES.B      1
    00000876 00000002               .RES.W      1
    00000878              L675:
    00000878 6F7267616E             .SDATA      "organisation"
             6973617469   
             6F6E         
    00000884 00                     .DATA.B     H'00
    00000885 00000001               .RES.B      1
    00000886 00000002               .RES.W      1
    00000888              L681:
    00000888 4D69747465             .SDATA      "Mitte: Kommunikation"
             3A204B6F6D   
             6D756E696B   
             6174696F6E   
    0000089C 00                     .DATA.B     H'00
    0000089D 00000001               .RES.B      1
    0000089E 00000002               .RES.W      1
    000008A0              L682:
    000008A0 3129205A69             .SDATA      "1) Zielsetzung"
             656C736574   
             7A756E67     
    000008AE 00                     .DATA.B     H'00
    000008AF 00000001               .RES.B      1
    000008B0              L683:
    000008B0 322920506C             .SDATA      "2) Planung"
             616E756E67   
    000008BA 00                     .DATA.B     H'00
    000008BB 00000001               .RES.B      1
    000008BC              L684:
    000008BC 332920456E             .SDATA      "3) Entscheidung"
             7473636865   
             6964756E67   
    000008CB 00                     .DATA.B     H'00
    000008CC              L685:
    000008CC 342920556D             .SDATA      "4) Umsetzung"
             7365747A75   
             6E67         
    000008D8 00                     .DATA.B     H'00
    000008D9 00000001               .RES.B      1
    000008DA 00000002               .RES.W      1
    000008DC              L686:
    000008DC 3529204B6F             .SDATA      "5) Kontrolle"
             6E74726F6C   
             6C65         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008E8 00                     .DATA.B     H'00
    000008E9 00000001               .RES.B      1
    000008EA 00000002               .RES.W      1
    000008EC              L691:
    000008EC 5B5B5D5D20             .SDATA      "[[]] Instanz"
             496E737461   
             6E7A         
    000008F8 00                     .DATA.B     H'00
    000008F9 00000001               .RES.B      1
    000008FA 00000002               .RES.W      1
    000008FC              L692:
    000008FC 6C65697465             .SDATA      "leitende Stelle"
             6E64652053   
             74656C6C65   
    0000090B 00                     .DATA.B     H'00
    0000090C              L693:
    0000090C 5B5D204D69             .SDATA      "[] Mitarbeiterstelle"
             7461726265   
             6974657273   
             74656C6C65   
    00000920 00                     .DATA.B     H'00
    00000921 00000001               .RES.B      1
    00000922 00000002               .RES.W      1
    00000924              L694:
    00000924 4175736675             .SDATA      "Ausfuhrendestelle"
             6872656E64   
             657374656C   
             6C65         
    00000935 00                     .DATA.B     H'00
    00000936 00000002               .RES.W      1
    00000938              L695:
    00000938 2829205374             .SDATA      "() Stabstelle"
             6162737465   
             6C6C65       
    00000945 00                     .DATA.B     H'00
    00000946 00000002               .RES.W      1
    00000948              L696:
    00000948 4265726174             .SDATA      "Beratende Stelle"
             656E646520   
             5374656C6C   
             65           
    00000958 00                     .DATA.B     H'00
    00000959 00000001               .RES.B      1
    0000095A 00000002               .RES.W      1
    0000095C              L701:
    0000095C 455250202F             .SDATA      "ERP / SAP Systeme1/5"
             2053415020   
             5379737465   
             6D65312F35   
    00000970 00                     .DATA.B     H'00
    00000971 00000001               .RES.B      1
    00000972 00000002               .RES.W      1
    00000974              L702:
    00000974 4D65726B6D             .SDATA      "Merkmale:"
             616C653A     
    0000097D 00                     .DATA.B     H'00
    0000097E 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000980              L703:
    00000980 2D6469656E             .SDATA      "-dient der"
             7420646572   
    0000098A 00                     .DATA.B     H'00
    0000098B 00000001               .RES.B      1
    0000098C              L704:
    0000098C 6265617262             .SDATA      "bearbeitung von"
             656974756E   
             6720766F6E   
    0000099B 00                     .DATA.B     H'00
    0000099C              L705:
    0000099C 4765736368             .SDATA      "Geschaftsprozessen"
             6166747370   
             726F7A6573   
             73656E       
    000009AE 00                     .DATA.B     H'00
    000009AF 00000001               .RES.B      1
    000009B0              L706:
    000009B0 2D7A656E74             .SDATA      "-zentrale Datenbank"
             72616C6520   
             446174656E   
             62616E6B     
    000009C3 00                     .DATA.B     H'00
    000009C4              L707:
    000009C4 2D5374616D             .SDATA      "-Stammdaten"
             6D64617465   
             6E           
    000009CF 00                     .DATA.B     H'00
    000009D0              L714:
    000009D0 455250202F             .SDATA      "ERP / SAP Systeme2/5"
             2053415020   
             5379737465   
             6D65322F35   
    000009E4 00                     .DATA.B     H'00
    000009E5 00000001               .RES.B      1
    000009E6 00000002               .RES.W      1
    000009E8              L715:
    000009E8 2D496E7465             .SDATA      "-Integration vertik"
             6772617469   
             6F6E207665   
             7274696B     
    000009FB 00                     .DATA.B     H'00
    000009FC              L716:
    000009FC 616C652F68             .SDATA      "ale/horizontale"
             6F72697A6F   
             6E74616C65   
    00000A0B 00                     .DATA.B     H'00
    00000A0C              L717:
    00000A0C 2D496E2076             .SDATA      "-In vers Komponente"
             657273204B   
             6F6D706F6E   
             656E7465     
    00000A1F 00                     .DATA.B     H'00
    00000A20              L718:
    00000A20 6175736667             .SDATA      "ausfgeteilt:"
             657465696C   
             743A         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A2C 00                     .DATA.B     H'00
    00000A2D 00000001               .RES.B      1
    00000A2E 00000002               .RES.W      1
    00000A30              L719:
    00000A30 5665727472             .SDATA      "Vertrieb, ..."
             6965622C20   
             2E2E2E       
    00000A3D 00                     .DATA.B     H'00
    00000A3E 00000002               .RES.W      1
    00000A40              L727:
    00000A40 455250202F             .SDATA      "ERP / SAP Systeme3/5"
             2053415020   
             5379737465   
             6D65332F35   
    00000A54 00                     .DATA.B     H'00
    00000A55 00000001               .RES.B      1
    00000A56 00000002               .RES.W      1
    00000A58              L728:
    00000A58 566F727465             .SDATA      "Vorteile:"
             696C653A     
    00000A61 00                     .DATA.B     H'00
    00000A62 00000002               .RES.W      1
    00000A64              L729:
    00000A64 2D56657262             .SDATA      "-Verbesserung/Besc-"
             6573736572   
             756E672F42   
             6573632D     
    00000A77 00                     .DATA.B     H'00
    00000A78              L730:
    00000A78 686C65756E             .SDATA      "hleunigung von"
             6967756E67   
             20766F6E     
    00000A86 00                     .DATA.B     H'00
    00000A87 00000001               .RES.B      1
    00000A88              L731:
    00000A88 50726F7A65             .SDATA      "Prozessen"
             7373656E     
    00000A91 00                     .DATA.B     H'00
    00000A92 00000002               .RES.W      1
    00000A94              L732:
    00000A94 2D44617465             .SDATA      "-Daten werden in"
             6E20776572   
             64656E2069   
             6E           
    00000AA4 00                     .DATA.B     H'00
    00000AA5 00000001               .RES.B      1
    00000AA6 00000002               .RES.W      1
    00000AA8              L733:
    00000AA8 456368747A             .SDATA      "Echtzeit gesaved"
             6569742067   
             6573617665   
             64           
    00000AB8 00                     .DATA.B     H'00
    00000AB9 00000001               .RES.B      1
    00000ABA 00000002               .RES.W      1
    00000ABC              L734:
    00000ABC 616C6C6520             .SDATA      "alle haben Zugriff"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             686162656E   
             205A756772   
             696666       
    00000ACE 00                     .DATA.B     H'00
    00000ACF 00000001               .RES.B      1
    00000AD0              L742:
    00000AD0 455250202F             .SDATA      "ERP / SAP Systeme4/5"
             2053415020   
             5379737465   
             6D65342F35   
    00000AE4 00                     .DATA.B     H'00
    00000AE5 00000001               .RES.B      1
    00000AE6 00000002               .RES.W      1
    00000AE8              L743:
    00000AE8 2D4175746F             .SDATA      "-Automatisiert pro-"
             6D61746973   
             6965727420   
             70726F2D     
    00000AFB 00                     .DATA.B     H'00
    00000AFC              L744:
    00000AFC 7A65737365             .SDATA      "zesse, gespart"
             2C20676573   
             70617274     
    00000B0A 00                     .DATA.B     H'00
    00000B0B 00000001               .RES.B      1
    00000B0C              L745:
    00000B0C 7769726420             .SDATA      "wird Arbeitsplatz"
             4172626569   
             7473706C61   
             747A         
    00000B1D 00                     .DATA.B     H'00
    00000B1E 00000002               .RES.W      1
    00000B20              L753:
    00000B20 455250202F             .SDATA      "ERP / SAP Systeme5/5"
             2053415020   
             5379737465   
             6D65352F35   
    00000B34 00                     .DATA.B     H'00
    00000B35 00000001               .RES.B      1
    00000B36 00000002               .RES.W      1
    00000B38              L754:
    00000B38 4E61636874             .SDATA      "Nachteile:"
             65696C653A   
    00000B42 00                     .DATA.B     H'00
    00000B43 00000001               .RES.B      1
    00000B44              L755:
    00000B44 2D416E7363             .SDATA      "-Anschaffungskosten"
             6861666675   
             6E67736B6F   
             7374656E     
    00000B57 00                     .DATA.B     H'00
    00000B58              L756:
    00000B58 2D41626861             .SDATA      "-Abhaengigkeit"
             656E676967   
             6B656974     
    00000B66 00                     .DATA.B     H'00
    00000B67 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B68              L757:
    00000B68 2D686F6865             .SDATA      "-hohe komplexitat"
             206B6F6D70   
             6C65786974   
             6174         
    00000B79 00                     .DATA.B     H'00
    00000B7A 00000002               .RES.W      1
    00000B7C              L758:
    00000B7C 2D64617565             .SDATA      "-dauerhaft kontrol-"
             7268616674   
             206B6F6E74   
             726F6C2D     
    00000B8F 00                     .DATA.B     H'00
    00000B90              L759:
    00000B90 6C65206465             .SDATA      "le der Mitarbeiter"
             72204D6974   
             6172626569   
             746572       
    00000BA2 00                     .DATA.B     H'00
    00000BA3 00000001               .RES.B      1
    00000BA4              L765:
    00000BA4 4E65747A77             .SDATA      "Netzwerktechnik  1/4"
             65726B7465   
             63686E696B   
             2020312F34   
    00000BB8 00                     .DATA.B     H'00
    00000BB9 00000001               .RES.B      1
    00000BBA 00000002               .RES.W      1
    00000BBC              L766:
    00000BBC 444E533D44             .SDATA      "DNS=Domain Name "
             6F6D61696E   
             204E616D65   
             20           
    00000BCC 00                     .DATA.B     H'00
    00000BCD 00000001               .RES.B      1
    00000BCE 00000002               .RES.W      1
    00000BD0              L767:
    00000BD0 5365727669             .SDATA      "Service"
             6365         
    00000BD7 00                     .DATA.B     H'00
    00000BD8              L768:
    00000BD8 444843503D             .SDATA      "DHCP=Dynamic Host"
             44796E616D   
             696320486F   
             7374         
    00000BE9 00                     .DATA.B     H'00
    00000BEA 00000002               .RES.W      1
    00000BEC              L769:
    00000BEC 436F6E6669             .SDATA      "Config.Protokoll"
             672E50726F   
             746F6B6F6C   
             6C           
    00000BFC 00                     .DATA.B     H'00
    00000BFD 00000001               .RES.B      1
    00000BFE 00000002               .RES.W      1
    00000C00              L770:
    00000C00 5757573D57             .SDATA      "WWW=Weltweites Netz"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             656C747765   
             6974657320   
             4E65747A     
    00000C13 00                     .DATA.B     H'00
    00000C14              L771:
    00000C14 524A34353D             .SDATA      "RJ45=Netzwerkstecker"
             4E65747A77   
             65726B7374   
             65636B6572   
    00000C28 00                     .DATA.B     H'00
    00000C29 00000001               .RES.B      1
    00000C2A 00000002               .RES.W      1
    00000C2C              L778:
    00000C2C 4E65747A77             .SDATA      "Netzwerktechnik  2/4"
             65726B7465   
             63686E696B   
             2020322F34   
    00000C40 00                     .DATA.B     H'00
    00000C41 00000001               .RES.B      1
    00000C42 00000002               .RES.W      1
    00000C44              L779:
    00000C44 5443502F49             .SDATA      "TCP/IP=Stand. Netz-"
             503D537461   
             6E642E204E   
             65747A2D     
    00000C57 00                     .DATA.B     H'00
    00000C58              L780:
    00000C58 7765726B20             .SDATA      "werk Protokoll"
             50726F746F   
             6B6F6C6C     
    00000C66 00                     .DATA.B     H'00
    00000C67 00000001               .RES.B      1
    00000C68              L781:
    00000C68 4D41432041             .SDATA      "MAC Adr.=feste Adr."
             64722E3D66   
             6573746520   
             4164722E     
    00000C7B 00                     .DATA.B     H'00
    00000C7C              L782:
    00000C7C 696E206465             .SDATA      "in der NW Karte"
             72204E5720   
             4B61727465   
    00000C8B 00                     .DATA.B     H'00
    00000C8C              L783:
    00000C8C 6970636F6E             .SDATA      "ipconfig=Windows"
             6669673D57   
             696E646F77   
             73           
    00000C9C 00                     .DATA.B     H'00
    00000C9D 00000001               .RES.B      1
    00000C9E 00000002               .RES.W      1
    00000CA0              L784:
    00000CA0 7477697374             .SDATA      "twisted Pair..."
             6564205061   
             69722E2E2E   
    00000CAF 00                     .DATA.B     H'00
    00000CB0              L792:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CB0 5043205465             .SDATA      "PC Technik       3/4"
             63686E696B   
             2020202020   
             2020332F34   
    00000CC4 00                     .DATA.B     H'00
    00000CC5 00000001               .RES.B      1
    00000CC6 00000002               .RES.W      1
    00000CC8              L793:
    00000CC8 2D4E6F7274             .SDATA      "-Northbridge (CPU/"
             6862726964   
             6765202843   
             50552F       
    00000CDA 00                     .DATA.B     H'00
    00000CDB 00000001               .RES.B      1
    00000CDC              L794:
    00000CDC 52414D2F50             .SDATA      "RAM/PCI(e))"
             4349286529   
             29           
    00000CE7 00                     .DATA.B     H'00
    00000CE8              L795:
    00000CE8 2D536F7572             .SDATA      "-Sourcebridge (USB/"
             6365627269   
             6467652028   
             5553422F     
    00000CFB 00                     .DATA.B     H'00
    00000CFC              L796:
    00000CFC 5053322F50             .SDATA      "PS2/PCI/S-ATA/IDE)"
             43492F532D   
             4154412F49   
             444529       
    00000D0E 00                     .DATA.B     H'00
    00000D0F 00000001               .RES.B      1
    00000D10              L797:
    00000D10 2D42494F53             .SDATA      "-BIOS=SW fur Mboard"
             3D53572066   
             7572204D62   
             6F617264     
    00000D23 00                     .DATA.B     H'00
    00000D24              L798:
    00000D24 2D504F5354             .SDATA      "-POST=PowerOnSelfTest"
             3D506F7765   
             724F6E5365   
             6C66546573   
             74           
    00000D39 00                     .DATA.B     H'00
    00000D3A 00000002               .RES.W      1
    00000D3C              L806:
    00000D3C 5043205465             .SDATA      "PC Technik       4/4"
             63686E696B   
             2020202020   
             2020342F34   
    00000D50 00                     .DATA.B     H'00
    00000D51 00000001               .RES.B      1
    00000D52 00000002               .RES.W      1
    00000D54              L807:
    00000D54 2D53706569             .SDATA      "-Speichermedien(Fes-"
             636865726D   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             656469656E   
             284665732D   
    00000D68 00                     .DATA.B     H'00
    00000D69 00000001               .RES.B      1
    00000D6A 00000002               .RES.W      1
    00000D6C              L808:
    00000D6C 74706C6174             .SDATA      "tplatte(SSD/HDD)/"
             7465285353   
             442F484444   
             292F         
    00000D7D 00                     .DATA.B     H'00
    00000D7E 00000002               .RES.W      1
    00000D80              L809:
    00000D80 52414D2F55             .SDATA      "RAM/USB-Stick)"
             53422D5374   
             69636B29     
    00000D8E 00                     .DATA.B     H'00
    00000D8F 00000001               .RES.B      1
    00000D90              L810:
    00000D90 2D44617465             .SDATA      "-Dateiendungen (Word"
             69656E6475   
             6E67656E20   
             28576F7264   
    00000DA4 00                     .DATA.B     H'00
    00000DA5 00000001               .RES.B      1
    00000DA6 00000002               .RES.W      1
    00000DA8              L811:
    00000DA8 3D646F632F             .SDATA      "=doc/docx PP=pptx/"
             646F637820   
             50503D7070   
             74782F       
    00000DBA 00                     .DATA.B     H'00
    00000DBB 00000001               .RES.B      1
    00000DBC              L812:
    00000DBC 7070742045             .SDATA      "ppt Excel=xls/xlsx"
             7863656C3D   
             786C732F78   
             6C7378       
    00000DCE 00                     .DATA.B     H'00
    00000DCF 00000001               .RES.B      1
    00000DD0              L818:
    00000DD0 5265696865             .SDATA      "Reihenschaltung  1/4"
             6E73636861   
             6C74756E67   
             2020312F34   
    00000DE4 00                     .DATA.B     H'00
    00000DE5 00000001               .RES.B      1
    00000DE6 00000002               .RES.W      1
    00000DE8              L819:
    00000DE8 553D522A49             .SDATA      "U=R*I        R=U^2/P"
             2020202020   
             202020523D   
             555E322F50   
    00000DFC 00                     .DATA.B     H'00
    00000DFD 00000001               .RES.B      1
    00000DFE 00000002               .RES.W      1
    00000E00              L820:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E00 553D502F49             .SDATA      "U=P/I        R=P/I^2"
             2020202020   
             202020523D   
             502F495E32   
    00000E14 00                     .DATA.B     H'00
    00000E15 00000001               .RES.B      1
    00000E16 00000002               .RES.W      1
    00000E18              L821:
    00000E18 553D577572             .SDATA      "U=Wurzel(P*R)R=U/I"
             7A656C2850   
             2A5229523D   
             552F49       
    00000E2A 00                     .DATA.B     H'00
    00000E2B 00000001               .RES.B      1
    00000E2C              L822:
    00000E2C 493D552F52             .SDATA      "I=U/R        P=R*I^2"
             2020202020   
             202020503D   
             522A495E32   
    00000E40 00                     .DATA.B     H'00
    00000E41 00000001               .RES.B      1
    00000E42 00000002               .RES.W      1
    00000E44              L823:
    00000E44 493D502F55             .SDATA      "I=P/U        P=U^2/R"
             2020202020   
             202020503D   
             555E322F52   
    00000E58 00                     .DATA.B     H'00
    00000E59 00000001               .RES.B      1
    00000E5A 00000002               .RES.W      1
    00000E5C              L824:
    00000E5C 493D577572             .SDATA      "I=Wurzel(P/R)P=U*I"
             7A656C2850   
             2F5229503D   
             552A49       
    00000E6E 00                     .DATA.B     H'00
    00000E6F 00000001               .RES.B      1
    00000E70              L831:
    00000E70 5265696865             .SDATA      "Reihenschaltung  2/4"
             6E73636861   
             6C74756E67   
             2020322F34   
    00000E84 00                     .DATA.B     H'00
    00000E85 00000001               .RES.B      1
    00000E86 00000002               .RES.W      1
    00000E88              L832:
    00000E88 204F2D2D5B             .SDATA      " O--[R1]-[R2]-[R3]--"
             52315D2D5B   
             52325D2D5B   
             52335D2D2D   
    00000E9C 00                     .DATA.B     H'00
    00000E9D 00000001               .RES.B      1
    00000E9E 00000002               .RES.W      1
    00000EA0              L833:
    00000EA0 2055557074             .SDATA      " UUptoDown   <-I   |"
             6F446F776E   
             2020203C2D   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             492020207C   
    00000EB4 00                     .DATA.B     H'00
    00000EB5 00000001               .RES.B      1
    00000EB6 00000002               .RES.W      1
    00000EB8              L834:
    00000EB8 204F2D2D2D             .SDATA      " O------------------"
             2D2D2D2D2D   
             2D2D2D2D2D   
             2D2D2D2D2D   
    00000ECC 00                     .DATA.B     H'00
    00000ECD 00000001               .RES.B      1
    00000ECE 00000002               .RES.W      1
    00000ED0              L842:
    00000ED0 5265696865             .SDATA      "Reihenschaltung  3/4"
             6E73636861   
             6C74756E67   
             2020332F34   
    00000EE4 00                     .DATA.B     H'00
    00000EE5 00000001               .RES.B      1
    00000EE6 00000002               .RES.W      1
    00000EE8              L843:
    00000EE8 5567203D20             .SDATA      "Ug = U1 + U2 + U3"
             5531202B20   
             5532202B20   
             5533         
    00000EF9 00                     .DATA.B     H'00
    00000EFA 00000002               .RES.W      1
    00000EFC              L844:
    00000EFC 4967203D20             .SDATA      "Ig = I1 = I2 = I3"
             4931203D20   
             4932203D20   
             4933         
    00000F0D 00                     .DATA.B     H'00
    00000F0E 00000002               .RES.W      1
    00000F10              L845:
    00000F10 5267203D20             .SDATA      "Rg = R1 + R2 + R3"
             5231202B20   
             5232202B20   
             5233         
    00000F21 00                     .DATA.B     H'00
    00000F22 00000002               .RES.W      1
    00000F24              L846:
    00000F24 5067203D20             .SDATA      "Pg = P1 + P2 + P3"
             5031202B20   
             5032202B20   
             5033         
    00000F35 00                     .DATA.B     H'00
    00000F36 00000002               .RES.W      1
    00000F38              L854:
    00000F38 5265696865             .SDATA      "Reihenschaltung  4/4"
             6E73636861   
             6C74756E67   
             2020342F34   
    00000F4C 00                     .DATA.B     H'00
    00000F4D 00000001               .RES.B      1
    00000F4E 00000002               .RES.W      1
    00000F50              L855:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F50 5531203D20             .SDATA      "U1 = R1 * I"
             5231202A20   
             49           
    00000F5B 00                     .DATA.B     H'00
    00000F5C              L856:
    00000F5C 5232203D20             .SDATA      "R2 = U2 / I"
             5532202F20   
             49           
    00000F67 00                     .DATA.B     H'00
    00000F68              L857:
    00000F68 4933203D20             .SDATA      "I3 = U3 / R3"
             5533202F20   
             5233         
    00000F74 00                     .DATA.B     H'00
    00000F75 00000001               .RES.B      1
    00000F76 00000002               .RES.W      1
    00000F78              L858:
    00000F78 5532203D20             .SDATA      "U2 = P2 / I"
             5032202F20   
             49           
    00000F83 00                     .DATA.B     H'00
    00000F84              L353:
    00000F84 4C65726E66             .SDATA      "Lernfeld 1"
             656C642031   
    00000F8E 00                     .DATA.B     H'00
    00000F8F 00000001               .RES.B      1
    00000F90              L354:
    00000F90 4C65726E66             .SDATA      "Lernfeld 2"
             656C642032   
    00000F9A 00                     .DATA.B     H'00
    00000F9B 00000001               .RES.B      1
    00000F9C              L355:
    00000F9C 50432F4E65             .SDATA      "PC/Netzwerktechnik"
             747A776572   
             6B74656368   
             6E696B       
    00000FAE 00                     .DATA.B     H'00
    00000FAF 00000001               .RES.B      1
    00000FB0              L356:
    00000FB0 5265696865             .SDATA      "Reihenschaltung"
             6E73636861   
             6C74756E67   
    00000FBF 00                     .DATA.B     H'00
    00000FC0              L357:
    00000FC0 5465737435             .SDATA      "Test5"
    00000FC5 00                     .DATA.B     H'00
    00000FC6 00000002               .RES.W      1
    00000FC8              L358:
    00000FC8 5465737436             .SDATA      "Test6"
    00000FCD 00                     .DATA.B     H'00
    00000FCE 00000002               .RES.W      1
    00000FD0              L422:
    00000FD0 4F6B6F6E6F             .SDATA      "Okonomisches Prinzip"
             6D69736368   
             6573205072   
             696E7A6970   
    00000FE4 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FE5 00000001               .RES.B      1
    00000FE6 00000002               .RES.W      1
    00000FE8              L423:
    00000FE8 5265636874             .SDATA      "Rechtsformen"
             73666F726D   
             656E         
    00000FF4 00                     .DATA.B     H'00
    00000FF5 00000001               .RES.B      1
    00000FF6 00000002               .RES.W      1
    00000FF8              L424:
    00000FF8 476577696E             .SDATA      "Gewinnverteilung"
             6E76657274   
             65696C756E   
             67           
    00001008 00                     .DATA.B     H'00
    00001009 00000001               .RES.B      1
    0000100A 00000002               .RES.W      1
    0000100C              L425:
    0000100C 4861667475             .SDATA      "Haftung, Infos"
             6E672C2049   
             6E666F73     
    0000101A 00                     .DATA.B     H'00
    0000101B 00000001               .RES.B      1
    0000101C              L426:
    0000101C 5072656973             .SDATA      "Preisbildungsprozes"
             62696C6475   
             6E67737072   
             6F7A6573     
    0000102F 00                     .DATA.B     H'00
    00001030              L606:
    00001030 4F7267616E             .SDATA      "Organisation"
             6973617469   
             6F6E         
    0000103C 00                     .DATA.B     H'00
    0000103D 00000001               .RES.B      1
    0000103E 00000002               .RES.W      1
    00001040              L607:
    00001040 526567656C             .SDATA      "Regelkreis"
             6B72656973   
    0000104A 00                     .DATA.B     H'00
    0000104B 00000001               .RES.B      1
    0000104C              L608:
    0000104C 4F7267616E             .SDATA      "Organigramm"
             696772616D   
             6D           
    00001057 00                     .DATA.B     H'00
    00001058              L609:
    00001058 455250202F             .SDATA      "ERP / SAP Systeme"
             2053415020   
             5379737465   
             6D65         
    00001069 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1







SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2020 17:51:43  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1272



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001BF4 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000106A Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000004 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00002C72 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          39
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           435






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Luca\AppData\Local\Temp\hmkA9B4.tmp 

